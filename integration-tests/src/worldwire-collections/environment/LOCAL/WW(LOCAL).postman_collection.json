{
	"info": {
		"_postman_id": "303db230-204e-4193-88b3-b060e5e680fb",
		"name": "WW(LOCAL)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "participant-client-api",
			"item": [
				{
					"name": "/client/accounts/{account_name}/{cursor}",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-payment-listener-port}}/v1/client/accounts/default/now",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-payment-listener-port}}",
							"path": [
								"v1",
								"client",
								"accounts",
								"default",
								"now"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/assets",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/assets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets?asset_code=NZDDO&asset_type=DO",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"assets"
							],
							"query": [
								{
									"key": "asset_code",
									"value": "NZDDO"
								},
								{
									"key": "asset_type",
									"value": "DO"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/assets/accounts/{account_name} issuing",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets/accounts/issuing",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"assets",
								"accounts",
								"issuing"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/assets/issued",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets/issued",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"assets",
								"issued"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/assets/participants/{participant_id}",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets?participant_id=participant3&type=trusted",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"assets"
							],
							"query": [
								{
									"key": "participant_id",
									"value": "participant3"
								},
								{
									"key": "type",
									"value": "trusted"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/balances/accounts/{account_name} issuing USDDA",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklUQXFUQVJZZi1aU3l1RjV5LjEtOSJ9.eyJhY2MiOlsiaXNzdWluZyIsImRlZmF1bHQiLCJ0ZXN0MjIyIl0sInZlciI6IjIuOS4wLjIiLCJpcHMiOlsiMTI3LjAuMC4xIiwiOjoxIiwiMTcyLjMwLjAuMSIsIjE3Mi4zMC4wLjI1Il0sImVudiI6InN0IiwiZW5wIjpbIi92MS9vbmJvYXJkaW5nL29wZXJhdGluZ2FjY291bnQiLCIvdjEvY2xpZW50L3RydXN0IiwiL3YxL2NsaWVudC9iYWxhbmNlcy9hY2NvdW50cyJdLCJuIjowLCJpYXQiOjE1NTA4MDk4NzMsIm5iZiI6MTU1MDgwOTg3OCwiZXhwIjoxNTUwODk2MjczLCJhdWQiOiJwYXJ0aWNpcGFudDMiLCJzdWIiOiItTFBtckYwUWdnNmZzaHpMYzQ4aSIsImp0aSI6Ii1MWklUN0oycXRvQncyU2RaZ2x3In0.OFjCvS_JlTFsF2rURomQ4Rn7PqN2CDSI4g6rKe3hOy4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/balances/accounts/issuing?asset_code=USDDA&asset_issuer={{anchor_id}}",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"balances",
								"accounts",
								"issuing"
							],
							"query": [
								{
									"key": "asset_code",
									"value": "USDDA"
								},
								{
									"key": "asset_issuer",
									"value": "{{anchor_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/balances/do",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/balances/do?asset_code=NZDDO",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"balances",
								"do"
							],
							"query": [
								{
									"key": "asset_code",
									"value": "NZDDO"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/exchange",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"quote status update to 1\", function () {",
									"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"exchange\":\"{{objJsonB64ExchangeR}}\",\n    \"signature\":\"{{signed_payload_OFI}}\"\n    }"
						},
						"url": {
							"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/exchange",
							"host": [
								"{{base_url}}"
							],
							"port": "{{new-quote-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"exchange"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/fees/{{participant1_id}}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fee_id\":\"23982398\",\n\t\"participant_id\":\"{{participant2_id}}\",\n\t\"settlement_asset\":\"USDDA\",\n\t\"payout_amount\":1935.83,\n\t\"payout_asset\":\"USDDA\",\n\t\"payout_point\": {\n    \t\"type\": \"FinancialInstitute\",\n    \t\"name\": \"CIMB Bank\",\n\t\t\"currencies_accepted\":[\"USDDA\", \"EURDA\"],\n    \t\"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n    \t\"location_address\":{\n    \t\t\"building_number\":\"12345\",\n    \t\t\"city\":\"TPE\",\n    \t\t\"country\":\"TAIWAN\",\n    \t\t\"postal_code\":\"787878\",\n    \t\t\"state\":\"idontknow\",\n    \t\t\"street\":\"home\"\n    \t},\n    \t\"url\": \"\",\n    \t\"telephone\": \"07-418 6258 / 6276\",\n    \t\"member_of\": [\"BankA\"],\n    \t\"geo\": {\n    \t\t\"latitude\": 1.8482097,\n    \t\t\"longitude\": 102.93248110000002\n    \t\t},\n    \t\"categories\": [\n        \t{\n              \"name\": \"delivery\",\n              \"options\": [\n                  {\n                    \"description\": \"Deliver PHP to home address\",\n                     \"terms\": \"Limit of 52,000 PHP\"\n           \n                  },\n                  {\n                    \"description\": \"Deliver USD to home address\",\n                    \"terms\": \"Limit of 1,000 USD\"\n                  }\n              ]\n        \t},\n        \t{\n              \"name\": \"agency_pickup\",\n              \"options\": [\n                  {\n                    \"description\": \"Pick-up PHP from kiosk\",\n                    \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    \n                  },\n                  {\n                    \"description\": \"Pick-up USD from kiosk\",\n                    \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                  }\n            \t]\n        \t}\n    \t],\n    \t\"opening_hours\": [{\n    \t\t\"day_of_week\": [\n        \t\t\"Monday\",\n        \t\t\"Tuesday\",\n        \t\t\"Wednesday\",\n        \t\t\"Thursday\"\n    \t\t],\n    \t\t\"opens\": \"09:15\",\n    \t\t\"closes\": \"16:30\"\n    \t\t},\n    \t\t{\n    \t\t\"day_of_week\": [\"Friday\"],\n    \t\t\"opens\": \"09:15\",\n    \t\t\"closes\": \"16:00\"\n    \t\t}\n    \t]\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{fee-service-port}}/{{service-version}}/client/fees/{{participant1_id}}",
							"host": [
								"{{base_url}}"
							],
							"port": "{{fee-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"fees",
								"{{participant1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/gftn/pr",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr",
							"host": [
								"{{base_url}}"
							],
							"port": "{{participant-registry-service-port}}",
							"path": [
								"{{service-version}}",
								"gftn",
								"pr"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/participants/whitelist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
							"host": [
								"{{base_url}}"
							],
							"port": "{{global-white-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"participants",
								"whitelist"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/participants/whitelist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
							"host": [
								"{{base_url}}"
							],
							"port": "{{global-white-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"participants",
								"whitelist"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/participants/whitelist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
							"host": [
								"{{base_url}}"
							],
							"port": "{{global-white-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"participants",
								"whitelist"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/payout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{payout-service-port}}/{{service-version}}/client/payout",
							"host": [
								"{{base_url}}"
							],
							"port": "{{payout-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"payout"
							],
							"query": [
								{
									"key": "receive_mode",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "city",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/quotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
									"setTimeout(foo,300)",
									"function foo(){",
									"pm.test(\"quote status update to 1\", function () {",
									"    pm.expect(jsonData[0].status).to.equal(1);",
									"});",
									"    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delete_all_quotes\": false,\n    \"exchange_rate\": {\n        \"operator\": \"1\",\n        \"threshold\": 1\n    },\n    \"ofi_id\": \"{{participant1_id}}\",\n    \"rfi_id\": \"{{participant2_id}}\",\n    \"source_asset\": {\n        \"asset_code\": \"NZDDO\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"status\": {\n        \"operator\": \"1\",\n        \"threshold\": 2\n    },\n    \"target_asset\": {\n        \"asset_code\": \"FJDDO\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant2_id}}\"\n    },\n    \"time_expire_rfi\": {\n        \"operator\": \"1\",\n        \"threshold\": 3\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes",
							"host": [
								"{{base_url}}"
							],
							"port": "{{new-quote-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"quotes"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/quotes/requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
									"setTimeout(1000)",
									"postman.setNextRequest('OFI get quotes1')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"time_expire\": 1644775314,\n  \"limit_max\": 90,\n  \"limit_min\": 20,\n               \"source_asset\": {\n                   \"asset_code\": \"NZDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"FJDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  },\n  \"ofi_id\": \"{{participant1_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests",
							"host": [
								"{{base_url}}"
							],
							"port": "{{new-quote-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"quotes",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/quotes/requests/{{request_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
									"setTimeout(foo,300)",
									"function foo(){",
									"pm.test(\"quote status update to 1\", function () {",
									"    pm.expect(jsonData[0].status).to.equal(1);",
									"});",
									"    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}",
							"host": [
								"{{base_url}}"
							],
							"port": "{{new-quote-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"quotes",
								"requests",
								"{{request_id}}"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/quotes/{quote_id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
									"setTimeout(foo,300)",
									"function foo(){",
									"pm.test(\"quote status update to 1\", function () {",
									"    pm.expect(jsonData[0].status).to.equal(1);",
									"});",
									"    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{quote_id}}",
							"host": [
								"{{base_url}}"
							],
							"port": "{{new-quote-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"quotes",
								"requests",
								"{{quote_id}}"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/quotes/{{quote_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p2-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quote\":  \"{{objJsonB64QuoteR}}\",\n    \"signature\":\"{{signed_payload_RFI}}\"\n    }"
						},
						"url": {
							"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/{{quote_id}}",
							"host": [
								"{{base_url}}"
							],
							"port": "{{new-quote-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"quotes",
								"{{quote_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/quotes/{{quote_id}}",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p2-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"delete_all_quotes\":false,\n        \"time_expire_rfi\": {\n        \t\"operator\": \"gt\", \n\t\t\t\"threshold\":0\n        },\n\t\t\"status\": {\n\t\t\t\"operator\": \"lt\", \n\t\t\t\"threshold\":99\n\t\t\t},\n\t\t\"exchange_rate\": {\n\t\t\t\"operator\": \"lt\", \n\t\t\t\"threshold\":10\n\t\t\t},\n\t\t\"rfi_id\": \"{{participant2_id}}\",\n        \"source_asset\": {\n            \"asset_code\": \"NZDDO\",\n            \"issuer_id\": \"{{participant1_id}}\",\n            \"asset_type\": \"DO\"\n        },\n        \"target_asset\": {\n            \"asset_code\": \"FJDDO\",\n            \"issuer_id\": \"{{participant2_id}}\",\n            \"asset_type\": \"DO\"\n        }\n\t}"
						},
						"url": {
							"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/{{quote_id}}",
							"host": [
								"{{base_url}}"
							],
							"port": "{{new-quote-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"quotes",
								"{{quote_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/sign",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
								"exec": [
									"",
									"let obj = {",
									"    \"account_name_receive\": \"issuing\",",
									"    \"account_name_send\": \"issuing\",",
									"    \"exchange_rate\": 0.6046602,",
									"    \"limit_max\": 1000,",
									"    \"quote_id\": pm.environment.get(\"quote_id\"),",
									"    \"quote_request\": {",
									"        \"time_expire\": 1644516034,",
									"        \"limit_max\": 2000,",
									"        \"limit_min\": 1,",
									"        \"source_asset\": {",
									"                   \"asset_code\": \"NZDDO\",",
									"                   \"asset_type\": \"DO\",",
									"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
									"               },",
									"               \"target_asset\": {",
									"                   \"asset_code\": \"FJDDO\",",
									"                   \"asset_type\": \"DO\",",
									"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
									"  },",
									"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
									"        ",
									"    },",
									"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
									"    \"time_expire\": 1644516034,",
									"    \"time_start\": 1544516034",
									"}",
									"",
									"let objJsonStr = JSON.stringify(obj);",
									"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
									"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
									"pm.globals.set(\"variable_key\", \"variable_value\");",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p2-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"account_name\": \"issuing\",\n \"payload\" : \"{{objJsonB64QuoteR}}\"}"
						},
						"url": {
							"raw": "{{base_url}}:{{p2-crypto-service-port}}/{{service-version}}/client/sign",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p2-crypto-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"sign"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/token/refresh",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/v1/client/token/refresh",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"v1",
								"client",
								"token",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/transactions/settle/da",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_name\": \"issuing\",\n    \"amount\": \"11\",\n    \"anchor_id\": \"stronghold\",\n    \"asset_code\": \"USDDA\",\n    \"creditor\": \"\",\n    \"transaction_note\": \"\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/v1/client/transactions/settle/da",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"v1",
								"client",
								"transactions",
								"settle",
								"da"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/transactions/settle/do",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"amount\":1,\n\t\"asset_code\":\"NZDDO\",\n\t\"asset_issuer\":\"{{participant1_id}}\",\n\t\"end_to_end_id\":\"NZDDO1322019FJIFJIGF001155005610611\",\n\t\"ofi_domain\":\"{{participant1_id}}\",\n\t\"ofi_sending_account_address\":\"GAPRVDV4NIJNJKPE3W7YYZ5YEBMSAX6T7AYKXLJDMTEDNS5RKIBD7LM6\",\n\t\"ofi_sending_account_name\":\"issuing\",\n\t\"rdo_end_to_end_id\":\"NZDDO1322019FJIFJIGF001155005610611\",\n\t\"rfi_domain\":\"{{participant2_id}}\",\n\t\"rfi_receiving_account_address\":\"GCVLMMLHSQ3EUJ5QX7PWYUCFTDZDF4BMF7KGU77FUMRYJDCX3XTF7TYA\",\n\t\"rfi_receiving_account_name\":\"issuing\",\n\t\"stellar_txn_hash\":\"e4df1059c3625cb5202fee525993e49abe07ccf6d12b41c1a2a9defcc622ec92\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{p1-rdo-service-port}}/v1/client/transactions/settle/do",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-rdo-service-port}}",
							"path": [
								"v1",
								"client",
								"transactions",
								"settle",
								"do"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/trust",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklUQXFUQVJZZi1aU3l1RjV5LjEtOSJ9.eyJhY2MiOlsiaXNzdWluZyIsImRlZmF1bHQiLCJ0ZXN0MjIyIl0sInZlciI6IjIuOS4wLjIiLCJpcHMiOlsiMTI3LjAuMC4xIiwiOjoxIiwiMTcyLjMwLjAuMSIsIjE3Mi4zMC4wLjI1Il0sImVudiI6InN0IiwiZW5wIjpbIi92MS9vbmJvYXJkaW5nL29wZXJhdGluZ2FjY291bnQiLCIvdjEvY2xpZW50L3RydXN0IiwiL3YxL2NsaWVudC9iYWxhbmNlcy9hY2NvdW50cyJdLCJuIjowLCJpYXQiOjE1NTA4MDk4NzMsIm5iZiI6MTU1MDgwOTg3OCwiZXhwIjoxNTUwODk2MjczLCJhdWQiOiJwYXJ0aWNpcGFudDMiLCJzdWIiOiItTFBtckYwUWdnNmZzaHpMYzQ4aSIsImp0aSI6Ii1MWklUN0oycXRvQncyU2RaZ2x3In0.OFjCvS_JlTFsF2rURomQ4Rn7PqN2CDSI4g6rKe3hOy4",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\": \"{{participant2_id}}\",\n      \"limit\": 9999,\n      \"asset_code\": \"FJDDO\"\n }"
						},
						"url": {
							"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=FJDDO",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p1-api-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"trust"
							],
							"query": [
								{
									"key": "permission",
									"value": "request"
								},
								{
									"key": "asset_code",
									"value": "FJDDO"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/fees/{{participant1_id}}",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fee_id\":\"23982398\",\n\t\"participant_id\":\"{{participant2_id}}\",\n\t\"settlement_asset\":\"USDDA\",\n\t\"payout_amount\":1935.83,\n\t\"payout_asset\":\"USDDA\",\n\t\"payout_point\": {\n    \t\"type\": \"FinancialInstitute\",\n    \t\"name\": \"CIMB Bank\",\n\t\t\"currencies_accepted\":[\"USDDA\", \"EURDA\"],\n    \t\"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n    \t\"location_address\":{\n    \t\t\"building_number\":\"12345\",\n    \t\t\"city\":\"TPE\",\n    \t\t\"country\":\"TAIWAN\",\n    \t\t\"postal_code\":\"787878\",\n    \t\t\"state\":\"idontknow\",\n    \t\t\"street\":\"home\"\n    \t},\n    \t\"url\": \"\",\n    \t\"telephone\": \"07-418 6258 / 6276\",\n    \t\"member_of\": [\"BankA\"],\n    \t\"geo\": {\n    \t\t\"latitude\": 1.8482097,\n    \t\t\"longitude\": 102.93248110000002\n    \t\t},\n    \t\"categories\": [\n        \t{\n              \"name\": \"delivery\",\n              \"options\": [\n                  {\n                    \"description\": \"Deliver PHP to home address\",\n                     \"terms\": \"Limit of 52,000 PHP\"\n           \n                  },\n                  {\n                    \"description\": \"Deliver USD to home address\",\n                    \"terms\": \"Limit of 1,000 USD\"\n                  }\n              ]\n        \t},\n        \t{\n              \"name\": \"agency_pickup\",\n              \"options\": [\n                  {\n                    \"description\": \"Pick-up PHP from kiosk\",\n                    \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    \n                  },\n                  {\n                    \"description\": \"Pick-up USD from kiosk\",\n                    \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                  }\n            \t]\n        \t}\n    \t],\n    \t\"opening_hours\": [{\n    \t\t\"day_of_week\": [\n        \t\t\"Monday\",\n        \t\t\"Tuesday\",\n        \t\t\"Wednesday\",\n        \t\t\"Thursday\"\n    \t\t],\n    \t\t\"opens\": \"09:15\",\n    \t\t\"closes\": \"16:30\"\n    \t\t},\n    \t\t{\n    \t\t\"day_of_week\": [\"Friday\"],\n    \t\t\"opens\": \"09:15\",\n    \t\t\"closes\": \"16:00\"\n    \t\t}\n    \t]\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{fee-service-port}}/{{service-version}}/client/fees/{{participant1_id}}",
							"host": [
								"{{base_url}}"
							],
							"port": "{{fee-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"fees",
								"{{participant1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/callback/ledger/notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_name\": \"issuing\",\n    \"transaction_id\": \"NZDDO1322019FJIFJIGF001155005610122\",\n    \"transaction_memp\": \"XX\",\n    \"transaction_reference\": \"OOO\"\n}"
						},
						"url": {
							"raw": "{{participant1-callback-url}}/{{service-version}}/callback/ledger/notification",
							"host": [
								"{{participant1-callback-url}}"
							],
							"path": [
								"{{service-version}}",
								"callback",
								"ledger",
								"notification"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client/quotes/requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
									"setTimeout(1000)",
									"postman.setNextRequest('OFI get quotes1')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"time_expire\": 1644775314,\n  \"limit_max\": 90,\n  \"limit_min\": 20,\n               \"source_asset\": {\n                   \"asset_code\": \"NZDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"FJDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  },\n  \"ofi_id\": \"{{participant1_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests",
							"host": [
								"{{base_url}}"
							],
							"port": "{{new-quote-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"quotes",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "/transactions/receive",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIyMjIyMkFBQVdXV1dXNzc3MDAwMDAwMDIyMjM8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQ0PC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmlzc3Vpbmc8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDQ8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MzwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HQUZGRzdCTVVTUkJPSEk3Q1BGVVJXRDVWMkUyNUdDUVNWWFJKVkZTWERXRkxBVkRWTkhVTEdLUjwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDYxMTwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPk5aRERPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwNjExPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+TlpERE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTA2MTE8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDYxMTwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
						},
						"url": {
							"raw": "{{base_url}}:{{p2-send-service-port}}/{{service-version}}/client/transactions/receive",
							"host": [
								"{{base_url}}"
							],
							"port": "{{p2-send-service-port}}",
							"path": [
								"{{service-version}}",
								"client",
								"transactions",
								"receive"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "endtoend",
			"item": [
				{
					"name": "create participant",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/gftn/pr",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n        \"bic\": \"NZLNZLGF001\",\n        \"country_code\": \"NZ\",\n        \"id\": \"{{participant1_id}}\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"http://{{participant1_id}}-callback-service-gftn-io/{{service-version}}/callback\"\n    }"
										},
										"url": {
											"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr",
											"host": [
												"{{base_url}}"
											],
											"port": "{{participant-registry-service-port}}",
											"path": [
												"{{service-version}}",
												"gftn",
												"pr"
											]
										}
									},
									"response": []
								},
								{
									"name": "/gftn/pr/{participant_id}/status",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"status\":\"active\"}"
										},
										"url": {
											"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr/{{participant1_id}}/status",
											"host": [
												"{{base_url}}"
											],
											"port": "{{participant-registry-service-port}}",
											"path": [
												"{{service-version}}",
												"gftn",
												"pr",
												"{{participant1_id}}",
												"status"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/gftn/pr",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n        \"bic\": \"FJIFJIGF001\",\n        \"country_code\": \"FJ\",\n        \"id\": \"{{participant2_id}}\",\n        \"operating_accounts\":[],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"http://{{participant2_id}}-callback-service-gftn-io/{{service-version}}/callback\"\n    }"
										},
										"url": {
											"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr",
											"host": [
												"{{base_url}}"
											],
											"port": "{{participant-registry-service-port}}",
											"path": [
												"{{service-version}}",
												"gftn",
												"pr"
											]
										}
									},
									"response": []
								},
								{
									"name": "/gftn/pr/{participant_id}/status",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr/{{participant2_id}}/status",
											"host": [
												"{{base_url}}"
											],
											"port": "{{participant-registry-service-port}}",
											"path": [
												"{{service-version}}",
												"gftn",
												"pr",
												"{{participant2_id}}",
												"status"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get participants",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/gftn/pr/domain/{participant_id}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr/domain/{{participant1_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{participant-registry-service-port}}",
											"path": [
												"{{service-version}}",
												"gftn",
												"pr",
												"domain",
												"{{participant1_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/gftn/pr/domain/{participant_id}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr/domain/{{participant2_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{participant-registry-service-port}}",
											"path": [
												"{{service-version}}",
												"gftn",
												"pr",
												"domain",
												"{{participant2_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "/gftn/pr",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr",
									"host": [
										"{{base_url}}"
									],
									"port": "{{participant-registry-service-port}}",
									"path": [
										"{{service-version}}",
										"gftn",
										"pr"
									]
								}
							},
							"response": []
						},
						{
							"name": "/gftn/pr/account/{participant_id}/{account_name}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr/account/{{participant1_id}}/default",
									"host": [
										"{{base_url}}"
									],
									"port": "{{participant-registry-service-port}}",
									"path": [
										"{{service-version}}",
										"gftn",
										"pr",
										"account",
										"{{participant1_id}}",
										"default"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "createAccount",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/onboarding/issuingaccount",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/onboarding/issuingaccount",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"onboarding",
												"issuingaccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "/onboarding/operatingaccount/{account_name}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklSem5JQ1p1NEI3dDgzRFZiLjEtMTMifQ.eyJhY2MiOlsiaXNzdWluZyIsImRlZmF1bHQiLCJ0ZXN0MTExIl0sInZlciI6IjIuOS4wLjIiLCJpcHMiOlsiMTI3LjAuMC4xIiwiOjoxIiwiMTcyLjMwLjAuMSIsIjE3Mi4zMC4wLjI1Il0sImVudiI6InN0IiwiZW5wIjpbIi92MS9vbmJvYXJkaW5nL29wZXJhdGluZ2FjY291bnQiXSwibiI6MCwiaWF0IjoxNTUwODA5NTYyLCJuYmYiOjE1NTA4MDk1NjcsImV4cCI6MTU1MDg5NTk2MiwiYXVkIjoicGFydGljaXBhbnQzIiwic3ViIjoiLUxQbXJGMFFnZzZmc2h6TGM0OGkiLCJqdGkiOiItTFpJUnZPb0lUSlZPX0t4YmtJaiJ9.RIzHzV_S_WsBYVVVrINGR66V-bkZnpl6DPVF_YMpOSQ",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/onboarding/operatingaccount/default",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"onboarding",
												"operatingaccount",
												"default"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/onboarding/issuingaccount",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/onboarding/issuingaccount",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"onboarding",
												"issuingaccount"
											]
										}
									},
									"response": []
								},
								{
									"name": "/onboarding/operatingaccount/{account_name}",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/onboarding/operatingaccount/default",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"onboarding",
												"operatingaccount",
												"default"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get account",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/onboarding/operatingaccount/{account_name} default",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/onboarding/operatingaccount/default",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"onboarding",
												"operatingaccount",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "/onboarding/operatingaccount/{account_name} issuing",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/onboarding/operatingaccount/issuing",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"onboarding",
												"operatingaccount",
												"issuing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/onboarding/operatingaccount/{account_name} default",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/onboarding/operatingaccount/default",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"onboarding",
												"operatingaccount",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "/onboarding/operatingaccount/{account_name} issuing",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/onboarding/operatingaccount/issuing",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"onboarding",
												"operatingaccount",
												"issuing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "issue assets",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets?asset_code=NZDDO&asset_type=DO",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "NZDDO"
												},
												{
													"key": "asset_type",
													"value": "DO"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklLLWo5QnFxd3dWZkM1RE15LjEtMTUifQ.eyJhY2MiOlsiaXNzdWluZyJdLCJ2ZXIiOiJ2Mi45LjAuMV9hbHBoYSIsImlwcyI6WyIxNzIuMzAuMC4xIiwiMTcyLjMwLjAuMzIiXSwiZW52Ijoic3QiLCJlbnAiOlsiL2Fzc2V0cyJdLCJuIjowLCJpYXQiOjE1NTA4MDc0NjksIm5iZiI6MTU1MDgwNzQ3NCwiZXhwIjoxNTUwODkzODY5LCJhdWQiOiJwYXJ0aWNpcGFudDQiLCJzdWIiOiItTFBtckYwUWdnNmZzaHpMYzQ4aSIsImp0aSI6Ii1MWklKeHJZcnpHNWlLby1vbEdXIn0.4xUMWUrBy6z0g3IpP_kn-KE6y3At7XXwdVH7IPaJJUo",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/assets?asset_code=FJDDO&asset_type=DO",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "FJDDO"
												},
												{
													"key": "asset_type",
													"value": "DO"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get assets",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/issued",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets/issued",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/accounts/{account_name} issuing",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets/accounts/issuing",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/accounts/{account_name} default",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets/accounts/default",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/participants/{participant_id}",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets/participants/{{participant1_id}}?type=both&participant_id={{participant1_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"participants",
												"{{participant1_id}}"
											],
											"query": [
												{
													"key": "type",
													"value": "both"
												},
												{
													"key": "participant_id",
													"value": "{{participant1_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/assets",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/issued",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/assets/issued",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/accounts/{account_name} issuing",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/assets/accounts/issuing",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/accounts/{account_name} default",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/assets/accounts/default",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/participants/{participant_id}",
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/assets/participants/{{participant1_id}}?type=trusted&participant_id={{participant1_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"participants",
												"{{participant1_id}}"
											],
											"query": [
												{
													"key": "type",
													"value": "trusted"
												},
												{
													"key": "participant_id",
													"value": "{{participant1_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "whitelist",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/whitelist/participants",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "trust assets",
					"item": [
						{
							"name": "request",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklUQXFUQVJZZi1aU3l1RjV5LjEtOSJ9.eyJhY2MiOlsiaXNzdWluZyIsImRlZmF1bHQiLCJ0ZXN0MjIyIl0sInZlciI6IjIuOS4wLjIiLCJpcHMiOlsiMTI3LjAuMC4xIiwiOjoxIiwiMTcyLjMwLjAuMSIsIjE3Mi4zMC4wLjI1Il0sImVudiI6InN0IiwiZW5wIjpbIi92MS9vbmJvYXJkaW5nL29wZXJhdGluZ2FjY291bnQiLCIvdjEvY2xpZW50L3RydXN0IiwiL3YxL2NsaWVudC9iYWxhbmNlcy9hY2NvdW50cyJdLCJuIjowLCJpYXQiOjE1NTA4MDk4NzMsIm5iZiI6MTU1MDgwOTg3OCwiZXhwIjoxNTUwODk2MjczLCJhdWQiOiJwYXJ0aWNpcGFudDMiLCJzdWIiOiItTFBtckYwUWdnNmZzaHpMYzQ4aSIsImp0aSI6Ii1MWklUN0oycXRvQncyU2RaZ2x3In0.OFjCvS_JlTFsF2rURomQ4Rn7PqN2CDSI4g6rKe3hOy4",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\": \"{{participant2_id}}\",\n      \"limit\": 9999,\n      \"asset_code\": \"FJDDO\"\n }"
												},
												"url": {
													"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=FJDDO",
													"host": [
														"{{base_url}}"
													],
													"port": "{{p1-api-service-port}}",
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "FJDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\": \"{{participant1_id}}\",\n      \"limit\": 9999,\n      \"asset_code\": \"NZDDO\"\n }"
												},
												"url": {
													"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=NZDDO",
													"host": [
														"{{base_url}}"
													],
													"port": "{{p2-api-service-port}}",
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "NZDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "allow",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\": \"{{participant2_id}}\",\n      \"limit\": 9999,\n      \"asset_code\": \"NZDDO\"\n }"
												},
												"url": {
													"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/trust?permission=allow&asset_code=NZDDO",
													"host": [
														"{{base_url}}"
													],
													"port": "{{p1-api-service-port}}",
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "NZDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\":\"{{participant1_id}}\",\n      \"limit\": 9999,\n      \"asset_code\": \"FJDDO\"\n }"
												},
												"url": {
													"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/trust?permission=allow&asset_code=FJDDO",
													"host": [
														"{{base_url}}"
													],
													"port": "{{p2-api-service-port}}",
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "FJDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "get assets",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/assets/accounts/{account_name} issuing",
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets/accounts/issuing",
													"host": [
														"{{base_url}}"
													],
													"port": "{{p1-api-service-port}}",
													"path": [
														"{{service-version}}",
														"client",
														"assets",
														"accounts",
														"issuing"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/assets/accounts/{account_name} default",
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/assets/accounts/issuing",
													"host": [
														"{{base_url}}"
													],
													"port": "{{p1-api-service-port}}",
													"path": [
														"{{service-version}}",
														"client",
														"assets",
														"accounts",
														"issuing"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/assets/accounts/{account_name} issuing",
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/assets/accounts/issuing",
													"host": [
														"{{base_url}}"
													],
													"port": "{{p2-api-service-port}}",
													"path": [
														"{{service-version}}",
														"client",
														"assets",
														"accounts",
														"issuing"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/assets/accounts/{account_name} default",
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/assets/accounts/default",
													"host": [
														"{{base_url}}"
													],
													"port": "{{p2-api-service-port}}",
													"path": [
														"{{service-version}}",
														"client",
														"assets",
														"accounts",
														"default"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "request quotes",
					"item": [
						{
							"name": "success case USD EUR",
							"item": [
								{
									"name": "OFI request quote",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
													"setTimeout(1000)",
													"postman.setNextRequest('OFI get quotes1')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"time_expire\": 1644775314,\n  \"limit_max\": 90,\n  \"limit_min\": 20,\n               \"source_asset\": {\n                   \"asset_code\": \"USDDA\",\n                   \"asset_type\": \"DA\",\n                   \"issuer_id\": \"{{anchor_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"EURDA\",\n                   \"asset_type\": \"DA\",\n                   \"issuer_id\": \"{{anchor_id}}\"\n  },\n  \"ofi_id\": \"{{participant1_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "[cryptoservice] RFI quote response signing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
												"exec": [
													"",
													"let obj = {",
													"    \"account_name_receive\": \"issuing\",",
													"    \"account_name_send\": \"issuing\",",
													"    \"exchange_rate\": 0.6046602,",
													"    \"limit_max\": 1000,",
													"    \"quote_id\": pm.environment.get(\"quote_id\"),",
													"    \"quote_request\": {",
													"        \"time_expire\": 1644516034,",
													"        \"limit_max\": 2000,",
													"        \"limit_min\": 1,",
													"        \"source_asset\": {",
													"                   \"asset_code\": \"USDDA\",",
													"                   \"asset_type\": \"DA\",",
													"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
													"               },",
													"               \"target_asset\": {",
													"                   \"asset_code\": \"EURDA\",",
													"                   \"asset_type\": \"DA\",",
													"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
													"  },",
													"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
													"        ",
													"    },",
													"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
													"    \"time_expire\": 1644516034,",
													"    \"time_start\": 1544516034",
													"}",
													"",
													"let objJsonStr = JSON.stringify(obj);",
													"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
													"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
													"pm.globals.set(\"variable_key\", \"variable_value\");",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"account_name\": \"issuing\",\n \"payload\" : \"{{objJsonB64QuoteR}}\"}"
										},
										"url": {
											"raw": "{{base_url}}:{{p2-crypto-service-port}}/{{service-version}}/client/sign",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-crypto-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"sign"
											]
										}
									},
									"response": []
								},
								{
									"name": "RFI post quote envelope Base64",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
												"exec": [
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quote\":  \"{{objJsonB64QuoteR}}\",\n    \"signature\":\"{{signed_payload_RFI}}\"\n    }"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/{{quote_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"{{quote_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(2);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[cryptoservice] OFI exchange request signing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
												"exec": [
													"let obj = {",
													"   \"account_name_receive\":\"issuing\",",
													"   \"account_name_send\":\"issuing\",",
													"   \"amount\":1,",
													"   \"quote\":   {",
													"      \"account_name_receive\":\"issuing\",",
													"      \"account_name_send\":\"issuing\",",
													"      \"exchange_rate\":0.6046602,",
													"      \"limit_max\":1000,",
													"      \"quote_id\":pm.environment.get(\"quote_id\"),",
													"      \"quote_request\": {",
													"        \"limit_max\": 2000,",
													"        \"limit_min\": 1,",
													"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
													"        \"source_asset\": {",
													"                   \"asset_code\": \"USDDA\",",
													"                   \"asset_type\": \"DA\",",
													"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
													"               },",
													"               \"target_asset\": {",
													"                   \"asset_code\": \"EURDA\",",
													"                   \"asset_type\": \"DA\",",
													"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
													"  },",
													"        \"time_expire\": 1644516034",
													"    },",
													"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
													"      \"time_expire\":1644516034,",
													"      \"time_start\":1544516034",
													"   }",
													"}",
													"",
													"let objJsonStr = JSON.stringify(obj);",
													"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
													"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"account_name\": \"issuing\",\n \"payload\" : \"{{objJsonB64ExchangeR}}\"}"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-crypto-service-port}}/{{service-version}}/client/sign",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-crypto-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"sign"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI execute exchange request Base64",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"exchange\":\"{{objJsonB64ExchangeR}}\",\n    \"signature\":\"{{signed_payload_OFI}}\"\n    }"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/exchange",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"exchange"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}?",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "success case",
							"item": [
								{
									"name": "OFI request quote",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
													"setTimeout(1000)",
													"postman.setNextRequest('OFI get quotes1')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"time_expire\": 1644775314,\n  \"limit_max\": 90,\n  \"limit_min\": 20,\n               \"source_asset\": {\n                   \"asset_code\": \"NZDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"FJDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  },\n  \"ofi_id\": \"{{participant1_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "[cryptoservice] RFI quote response signing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
												"exec": [
													"",
													"let obj = {",
													"    \"account_name_receive\": \"issuing\",",
													"    \"account_name_send\": \"issuing\",",
													"    \"exchange_rate\": 0.6046602,",
													"    \"limit_max\": 1000,",
													"    \"quote_id\": pm.environment.get(\"quote_id\"),",
													"    \"quote_request\": {",
													"        \"time_expire\": 1644516034,",
													"        \"limit_max\": 2000,",
													"        \"limit_min\": 1,",
													"        \"source_asset\": {",
													"                   \"asset_code\": \"NZDDO\",",
													"                   \"asset_type\": \"DO\",",
													"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
													"               },",
													"               \"target_asset\": {",
													"                   \"asset_code\": \"FJDDO\",",
													"                   \"asset_type\": \"DO\",",
													"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
													"  },",
													"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
													"        ",
													"    },",
													"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
													"    \"time_expire\": 1644516034,",
													"    \"time_start\": 1544516034",
													"}",
													"",
													"let objJsonStr = JSON.stringify(obj);",
													"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
													"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
													"pm.globals.set(\"variable_key\", \"variable_value\");",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"account_name\": \"issuing\",\n \"payload\" : \"{{objJsonB64QuoteR}}\"}"
										},
										"url": {
											"raw": "{{base_url}}:{{p2-crypto-service-port}}/{{service-version}}/client/sign",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-crypto-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"sign"
											]
										}
									},
									"response": []
								},
								{
									"name": "RFI post quote envelope Base64",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
												"exec": [
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quote\":  \"{{objJsonB64QuoteR}}\",\n    \"signature\":\"{{signed_payload_RFI}}\"\n    }"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/{{quote_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"{{quote_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(2);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[cryptoservice] OFI exchange request signing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
												"exec": [
													"let obj = {",
													"   \"account_name_receive\":\"issuing\",",
													"   \"account_name_send\":\"issuing\",",
													"   \"amount\":1,",
													"   \"quote\":   {",
													"      \"account_name_receive\":\"issuing\",",
													"      \"account_name_send\":\"issuing\",",
													"      \"exchange_rate\":0.6046602,",
													"      \"limit_max\":1000,",
													"      \"quote_id\":pm.environment.get(\"quote_id\"),",
													"      \"quote_request\": {",
													"        \"limit_max\": 2000,",
													"        \"limit_min\": 1,",
													"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
													"        \"source_asset\": {",
													"                   \"asset_code\": \"NZDDO\",",
													"                   \"asset_type\": \"DO\",",
													"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
													"               },",
													"               \"target_asset\": {",
													"                   \"asset_code\": \"FJDDO\",",
													"                   \"asset_type\": \"DO\",",
													"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
													"  },",
													"        \"time_expire\": 1644516034",
													"    },",
													"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
													"      \"time_expire\":1644516034,",
													"      \"time_start\":1544516034",
													"   }",
													"}",
													"",
													"let objJsonStr = JSON.stringify(obj);",
													"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
													"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"account_name\": \"issuing\",\n \"payload\" : \"{{objJsonB64ExchangeR}}\"}"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-crypto-service-port}}/{{service-version}}/client/sign",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-crypto-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"sign"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI execute exchange request Base64",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"exchange\":\"{{objJsonB64ExchangeR}}\",\n    \"signature\":\"{{signed_payload_OFI}}\"\n    }"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/exchange",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"exchange"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}?",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "delete quote",
							"item": [
								{
									"name": "OFI request quote",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
													"setTimeout(1000)",
													"postman.setNextRequest('OFI get quotes1')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"time_expire\": 1644775314,\n  \"limit_max\": 90,\n  \"limit_min\": 20,\n               \"source_asset\": {\n                   \"asset_code\": \"NZDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"FJDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  },\n  \"ofi_id\": \"{{participant1_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "RFI Cancel quotes by attributes",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\t\"delete_all_quotes\":false,\n        \"time_expire_rfi\": {\n        \t\"operator\": \"gt\", \n\t\t\t\"threshold\":0\n        },\n\t\t\"status\": {\n\t\t\t\"operator\": \"lt\", \n\t\t\t\"threshold\":99\n\t\t\t},\n\t\t\"exchange_rate\": {\n\t\t\t\"operator\": \"lt\", \n\t\t\t\"threshold\":10\n\t\t\t},\n\t\t\"rfi_id\": \"{{participant2_id}}\",\n        \"source_asset\": {\n            \"asset_code\": \"NZDDO\",\n            \"issuer_id\": \"{{participant1_id}}\",\n            \"asset_type\": \"DO\"\n        },\n        \"target_asset\": {\n            \"asset_code\": \"FJDDO\",\n            \"issuer_id\": \"{{participant2_id}}\",\n            \"asset_type\": \"DO\"\n        }\n\t}"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/{{quote_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"{{quote_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[cryptoservice] RFI quote response signing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
												"exec": [
													"",
													"let obj = {",
													"    \"account_name_receive\": \"issuing\",",
													"    \"account_name_send\": \"issuing\",",
													"    \"exchange_rate\": 0.6046602,",
													"    \"limit_max\": 1000,",
													"    \"quote_id\": pm.environment.get(\"quote_id\"),",
													"    \"quote_request\": {",
													"        \"time_expire\": 1644516034,",
													"        \"limit_max\": 2000,",
													"        \"limit_min\": 1,",
													"        \"source_asset\": {",
													"                   \"asset_code\": \"NZDDO\",",
													"                   \"asset_type\": \"DO\",",
													"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
													"               },",
													"               \"target_asset\": {",
													"                   \"asset_code\": \"FJDDO\",",
													"                   \"asset_type\": \"DO\",",
													"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
													"  },",
													"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
													"        ",
													"    },",
													"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
													"    \"time_expire\": 1644516034,",
													"    \"time_start\": 1544516034",
													"}",
													"",
													"let objJsonStr = JSON.stringify(obj);",
													"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
													"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
													"pm.globals.set(\"variable_key\", \"variable_value\");",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"account_name\": \"issuing\",\n \"payload\" : \"{{objJsonB64QuoteR}}\"}"
										},
										"url": {
											"raw": "{{base_url}}:{{p2-crypto-service-port}}/{{service-version}}/client/sign",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-crypto-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"sign"
											]
										}
									},
									"response": []
								},
								{
									"name": "RFI post quote envelope Base64",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
												"exec": [
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quote\":  \"{{objJsonB64QuoteR}}\",\n    \"signature\":\"{{signed_payload_RFI}}\"\n    }"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/{{quote_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"{{quote_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(2);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[cryptoservice] OFI exchange request signing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
												"exec": [
													"let obj = {",
													"   \"account_name_receive\":\"issuing\",",
													"   \"account_name_send\":\"issuing\",",
													"   \"amount\":1,",
													"   \"quote\":   {",
													"      \"account_name_receive\":\"issuing\",",
													"      \"account_name_send\":\"issuing\",",
													"      \"exchange_rate\":0.6046602,",
													"      \"limit_max\":1000,",
													"      \"quote_id\":pm.environment.get(\"quote_id\"),",
													"      \"quote_request\": {",
													"        \"limit_max\": 2000,",
													"        \"limit_min\": 1,",
													"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
													"        \"source_asset\": {",
													"                   \"asset_code\": \"NZDDO\",",
													"                   \"asset_type\": \"DO\",",
													"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
													"               },",
													"               \"target_asset\": {",
													"                   \"asset_code\": \"FJDDO\",",
													"                   \"asset_type\": \"DO\",",
													"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
													"  },",
													"        \"time_expire\": 1644516034",
													"    },",
													"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
													"      \"time_expire\":1644516034,",
													"      \"time_start\":1544516034",
													"   }",
													"}",
													"",
													"let objJsonStr = JSON.stringify(obj);",
													"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
													"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
													"pm.test(\"response is ok\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"account_name\": \"issuing\",\n \"payload\" : \"{{objJsonB64ExchangeR}}\"}"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-crypto-service-port}}/{{service-version}}/client/sign",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-crypto-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"sign"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI execute exchange request Base64",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"exchange\":\"{{objJsonB64ExchangeR}}\",\n    \"signature\":\"{{signed_payload_OFI}}\"\n    }"
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/exchange",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"exchange"
											]
										}
									},
									"response": []
								},
								{
									"name": "OFI get quotes3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{new-quote-service-port}}/{{service-version}}/client/quotes/requests/{{request_id}}?",
											"host": [
												"{{base_url}}"
											],
											"port": "{{new-quote-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"requests",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "fitofi",
					"item": [
						{
							"name": "participant1 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"message_type\": \"pacs.008.001.07\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+QUFBRE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAyMzc8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQzPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmlzc3Vpbmc8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxQbXRUcEluZj4KICAgICAgICAgICAgICAgIDxTdmNMdmw+CiAgICAgICAgICAgICAgICAgICAgPFBydHJ5PnN0cm9uZ2hvbGQ8L1BydHJ5PgogICAgICAgICAgICAgICAgPC9TdmNMdmw+CiAgICAgICAgICAgIDwvUG10VHBJbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNBQjAwMDwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDM8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50NDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxDZHRUcmZUeEluZj4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEluc3RySWQ+QUFBRE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAyMzc8L0luc3RySWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5BQUFETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDIzNzwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPkFBQURPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMjM3PC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgICAgICA8SW50ckJrU3R0bG1BbXQgQ2N5PSJVU0REQSI+MTwvSW50ckJrU3R0bG1BbXQ+CiAgICAgICAgICAgIDxJbnRyQmtTdHRsbUR0PjIwMTUtMDktMjk8L0ludHJCa1N0dGxtRHQ+CiAgICAgICAgICAgIDxYY2hnUmF0ZT4xLjI8L1hjaGdSYXRlPgogICAgICAgICAgICA8Q2hyZ0JyPkNSRUQ8L0NocmdCcj4KICAgICAgICAgICAgPENocmdzSW5mPgogICAgICAgICAgICAgICAgPEFtdCBDY3k9IlVTRERBIj4yPC9BbXQ+CiAgICAgICAgICAgICAgICA8QWd0PgogICAgICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgICAgIDwvQWd0PgogICAgICAgICAgICA8L0NocmdzSW5mPgogICAgICAgICAgICA8RGJ0cj4KICAgICAgICAgICAgICAgIDxObT5BQkMgQ29ycG9yYXRpb248L05tPgogICAgICAgICAgICAgICAgPFBzdGxBZHI+CiAgICAgICAgICAgICAgICAgICAgPFN0cnRObT5UaW1lcyBTcXVhcmU8L1N0cnRObT4KICAgICAgICAgICAgICAgICAgICA8QmxkZ05iPjc8L0JsZGdOYj4KICAgICAgICAgICAgICAgICAgICA8UHN0Q2Q+TlkgMTAwMzY8L1BzdENkPgogICAgICAgICAgICAgICAgICAgIDxUd25ObT5OZXcgWW9yazwvVHduTm0+CiAgICAgICAgICAgICAgICAgICAgPEN0cnk+VVM8L0N0cnk+CiAgICAgICAgICAgICAgICA8L1BzdGxBZHI+CiAgICAgICAgICAgIDwvRGJ0cj4KICAgICAgICAgICAgPERidHJBY2N0PgogICAgICAgICAgICAgICAgPElkPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+MDAxMjU1NzQ5OTk8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgIDwvRGJ0ckFjY3Q+CiAgICAgICAgICAgIDxEYnRyQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9EYnRyQWd0PgogICAgICAgICAgICA8Q2R0ckFndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvQ2R0ckFndD4KICAgICAgICAgICAgPENkdHI+CiAgICAgICAgICAgICAgICA8Tm0+REVGIEVsZWN0cm9uaWNzPC9ObT4KICAgICAgICAgICAgICAgIDxQc3RsQWRyPgogICAgICAgICAgICAgICAgICAgIDxTdHJ0Tm0+TWFyayBMYW5lPC9TdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgPEJsZGdOYj41NTwvQmxkZ05iPgogICAgICAgICAgICAgICAgICAgIDxQc3RDZD5FQzNSN05FPC9Qc3RDZD4KICAgICAgICAgICAgICAgICAgICA8VHduTm0+TG9uZG9uPC9Ud25ObT4KICAgICAgICAgICAgICAgICAgICA8Q3RyeT5HQjwvQ3RyeT4KICAgICAgICAgICAgICAgICAgICA8QWRyTGluZT5Db3JuIEV4Y2hhbmdlIDV0aCBGbG9vcjwvQWRyTGluZT4KICAgICAgICAgICAgICAgIDwvUHN0bEFkcj4KICAgICAgICAgICAgPC9DZHRyPgogICAgICAgICAgICA8Q2R0ckFjY3Q+CiAgICAgICAgICAgICAgICA8SWQ+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD4yMzY4MzcwNzk5NDIxNTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9JZD4KICAgICAgICAgICAgPC9DZHRyQWNjdD4KICAgICAgICA8L0NkdFRyZlR4SW5mPgogICAgPC9GSVRvRklDc3RtckNkdFRyZj4KPC9Eb2N1bWVudD4=\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-send-service-port}}/{{service-version}}/client/transactions/send",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-send-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 receive",
							"item": [
								{
									"name": "/transactions/receive",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"ibwf.001.001.01\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIzMjIyMkFBQVdXV1dXNzc3MDAwMDAwMTU2Mjg8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQ0PC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmlzc3Vpbmc8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDQ8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MzwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HQ1pXSUdEU0U3RzZMWkdDQTVWNkdTNEJRSUtZNEVTQzVRTkkyTDNCU1pEWTZUUlBNRzdTWkhUNDwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5BQUFETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDIzNzwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPkFBQURPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMjM3PC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+QUFBRE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAyMzc8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5BQUFETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDIzNzwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{p2-send-service-port}}/{{service-version}}/client/transactions/receive",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-send-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"receive"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "/client/transactions/settle/do",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"amount\":1,\n\t\"asset_code\":\"NZDDO\",\n\t\"asset_issuer\":\"{{participant1_id}}\",\n\t\"end_to_end_id\":\"NZDDO1322019FJIFJIGF001155005610611\",\n\t\"ofi_domain\":\"{{participant1_id}}\",\n\t\"ofi_sending_account_address\":\"GAPRVDV4NIJNJKPE3W7YYZ5YEBMSAX6T7AYKXLJDMTEDNS5RKIBD7LM6\",\n\t\"ofi_sending_account_name\":\"issuing\",\n\t\"rdo_end_to_end_id\":\"NZDDO1322019FJIFJIGF001155005610611\",\n\t\"rfi_domain\":\"{{participant2_id}}\",\n\t\"rfi_receiving_account_address\":\"GCVLMMLHSQ3EUJ5QX7PWYUCFTDZDF4BMF7KGU77FUMRYJDCX3XTF7TYA\",\n\t\"rfi_receiving_account_name\":\"issuing\",\n\t\"stellar_txn_hash\":\"e4df1059c3625cb5202fee525993e49abe07ccf6d12b41c1a2a9defcc622ec92\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{p1-rdo-service-port}}/v1/client/transactions/settle/do",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p1-rdo-service-port}}",
									"path": [
										"v1",
										"client",
										"transactions",
										"settle",
										"do"
									]
								}
							},
							"response": []
						},
						{
							"name": "get fee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fee_id\":\"23982398\",\n\t\"participant_id\":\"{{participant1_id}}\",\n\t\"settlement_asset\":\"SGD\",\n\t\"payout_amount\":1935.83,\n\t\"payout_asset\":\"PHP\",\n\t\"payout_point\": {\n    \t\"type\": \"FinancialInstitute\",\n    \t\"name\": \"CIMB Bank\",\n\t\t\"currencies_accepted\":[\"USD\", \"JPD\"],\n    \t\"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n    \t\"location_address\":{\n    \t\t\"building_number\":\"12345\",\n    \t\t\"city\":\"TPE\",\n    \t\t\"country\":\"TAIWAN\",\n    \t\t\"postal_code\":\"787878\",\n    \t\t\"state\":\"idontknow\",\n    \t\t\"street\":\"home\"\n    \t},\n    \t\"url\": \"\",\n    \t\"telephone\": \"07-418 6258 / 6276\",\n    \t\"member_of\": [\"BankA\"],\n    \t\"geo\": {\n    \t\t\"latitude\": 1.8482097,\n    \t\t\"longitude\": 102.93248110000002\n    \t\t},\n    \t\"categories\": [\n        \t{\n              \"name\": \"delivery\",\n              \"options\": [\n                  {\n                    \"description\": \"Deliver PHP to home address\",\n                     \"terms\": \"Limit of 52,000 PHP\"\n           \n                  },\n                  {\n                    \"description\": \"Deliver USD to home address\",\n                    \"terms\": \"Limit of 1,000 USD\"\n                  }\n              ]\n        \t},\n        \t{\n              \"name\": \"agency_pickup\",\n              \"options\": [\n                  {\n                    \"description\": \"Pick-up PHP from kiosk\",\n                    \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    \n                  },\n                  {\n                    \"description\": \"Pick-up USD from kiosk\",\n                    \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                  }\n            \t]\n        \t}\n    \t],\n    \t\"opening_hours\": [{\n    \t\t\"day_of_week\": [\n        \t\t\"Monday\",\n        \t\t\"Tuesday\",\n        \t\t\"Wednesday\",\n        \t\t\"Thursday\"\n    \t\t],\n    \t\t\"opens\": \"09:15\",\n    \t\t\"closes\": \"16:30\"\n    \t\t},\n    \t\t{\n    \t\t\"day_of_week\": [\"Friday\"],\n    \t\t\"opens\": \"09:15\",\n    \t\t\"closes\": \"16:00\"\n    \t\t}\n    \t]\n\t}\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{fee-service-port}}/fee/{{service-version}}/client/fees/{{participant1_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{fee-service-port}}",
									"path": [
										"fee",
										"{{service-version}}",
										"client",
										"fees",
										"{{participant1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/callback/transactions/do/{end_to_end_id}",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{fee-service-port}}/v1/callback/transactions/do/NZDDO1322019FJIFJIGF001155005610122",
									"host": [
										"{{base_url}}"
									],
									"port": "{{fee-service-port}}",
									"path": [
										"v1",
										"callback",
										"transactions",
										"do",
										"NZDDO1322019FJIFJIGF001155005610122"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get transactions",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/participants/{participant_id}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/transactions?query_type=DATE_RANGE&query_data&start_date=2019-01-01&end_date=2019-02-28",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"transactions"
											],
											"query": [
												{
													"key": "query_type",
													"value": "DATE_RANGE"
												},
												{
													"key": "query_data",
													"value": null
												},
												{
													"key": "start_date",
													"value": "2019-01-01"
												},
												{
													"key": "end_date",
													"value": "2019-02-28"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "anchor Scenario",
			"item": [
				{
					"name": "onboard Anchor",
					"item": [
						{
							"name": "/gftn/pr",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{anchor_id}}\",\n    \"bic\": \"USAUSAGF001\",\n    \"country_code\": \"USE\",\n    \"role\": \"IS\",\n    \"status\": \"inactive\",\n    \"url_callback\": \"\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr",
									"host": [
										"{{base_url}}"
									],
									"port": "{{participant-registry-service-port}}",
									"path": [
										"{{service-version}}",
										"gftn",
										"pr"
									]
								}
							},
							"response": []
						},
						{
							"name": "/gftn/pr/{participant_id}/status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"active\"}"
								},
								"url": {
									"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr/{{anchor_id}}/status",
									"host": [
										"{{base_url}}"
									],
									"port": "{{participant-registry-service-port}}",
									"path": [
										"{{service-version}}",
										"gftn",
										"pr",
										"{{anchor_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/gftn/pr",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{participant-registry-service-port}}/{{service-version}}/gftn/pr",
									"host": [
										"{{base_url}}"
									],
									"port": "{{participant-registry-service-port}}",
									"path": [
										"{{service-version}}",
										"gftn",
										"pr"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/register",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"address\": \"{{anchor_pkey}}\"}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/admin/anchor/{{anchor_id}}/register",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets USD DA",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/admin/anchor/{{anchor_id}}/onboard/assets?asset_code=USDDA&asset_type=DA",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"onboard",
										"assets"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "asset_type",
											"value": "DA"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets EUR DA",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/admin/anchor/{{anchor_id}}/onboard/assets?asset_code=EURDA&asset_type=DA",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"onboard",
										"assets"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "EURDA"
										},
										{
											"key": "asset_type",
											"value": "DA"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets TTT DA",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/admin/anchor/{{anchor_id}}/onboard/assets?asset_code=TTTDA&asset_type=DA",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"onboard",
										"assets"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "TTTDA"
										},
										{
											"key": "asset_type",
											"value": "DA"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets EEE DA",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/admin/anchor/{{anchor_id}}/onboard/assets?asset_code=EEEDA&asset_type=DA",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"onboard",
										"assets"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "EEEDA"
										},
										{
											"key": "asset_type",
											"value": "DA"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "whitelist",
					"item": [
						{
							"name": "participant1 whitelist anchor",
							"item": [
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"participant_id\":\"{{anchor_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 whitelist anchor",
							"item": [
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"participant_id\":\"{{anchor_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "anchor whitelist participant",
							"item": [
								{
									"name": "/client/participants/whitelist participant2",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anchor-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist participant1",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anchor-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anchor-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{base_url}}:{{global-white-service-port}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{base_url}}"
											],
											"port": "{{global-white-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "particiapnt create trust",
					"item": [
						{
							"name": "participant1 request trust to anchor",
							"item": [
								{
									"name": "/client/trust USDDA",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklQYUZYV0JYVzVuaW1KdnQ3LjEtMzcifQ.eyJhY2MiOlsidGVzdDExMSIsImlzc3VuaWciLCJkZWZhdWx0Il0sInZlciI6InYyLjkuMC4xX2FscGhhIiwiaXBzIjpbIjE3Mi4zMC4wLjEiLCIxNzIuMzAuMC4yNSJdLCJlbnYiOiJzdCIsImVucCI6WyIvYmFsYW5jZXMvYWNjb3VudHMve2FjY291bnRfbmFtZX0iLCIvdHJ1c3QiXSwibiI6MCwiaWF0IjoxNTUwODA4OTMzLCJuYmYiOjE1NTA4MDg5MzgsImV4cCI6MTU1MDg5NTMzMywiYXVkIjoicGFydGljaXBhbnQzIiwic3ViIjoiLUxQbXJGMFFnZzZmc2h6TGM0OGkiLCJqdGkiOiItTFpJUFV3cUdaZ0Fjb1lLTThpciJ9.Hx9HUlTIA0ABPQ4vQPzD-ilyCXOD-k7X0kNxTEUtUxU",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=USDDA",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"trust"
											],
											"query": [
												{
													"key": "permission",
													"value": "request"
												},
												{
													"key": "asset_code",
													"value": "USDDA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/trust EURDA",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n      \"account_name\":\"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=EURDA",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"trust"
											],
											"query": [
												{
													"key": "permission",
													"value": "request"
												},
												{
													"key": "asset_code",
													"value": "EURDA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/trust USDDA dafault",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklWbmhPTEpELUw2aXNhWGo1LjEtMjEifQ.eyJhY2MiOlsiZGVmYXVsdCIsInRlc3QyMjIiXSwidmVyIjoiMi45LjAuMiIsImlwcyI6WyIxMjcuMC4wLjEiLCI6OjEiLCIxNzIuMzAuMC4xIiwiMTcyLjMwLjAuMjUiXSwiZW52Ijoic3QiLCJlbnAiOlsiL3YxL29uYm9hcmRpbmcvb3BlcmF0aW5nYWNjb3VudCIsIi92MS9jbGllbnQvdHJ1c3QiLCIvdjEvY2xpZW50L2JhbGFuY2VzL2FjY291bnRzIl0sIm4iOjAsImlhdCI6MTU1MDgxMDU2MSwibmJmIjoxNTUwODEwNTY2LCJleHAiOjE1NTA4OTY5NjEsImF1ZCI6InBhcnRpY2lwYW50MyIsInN1YiI6Ii1MUG1yRjBRZ2c2ZnNoekxjNDhpIiwianRpIjoiLUxaSVZrcDFNcnFZQlpxNk9BbmwifQ.ZWdaBMRmzP50ndDXOariWhEmTPKSZHd80DlPgHvKypo",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=USDDA",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"trust"
											],
											"query": [
												{
													"key": "permission",
													"value": "request"
												},
												{
													"key": "asset_code",
													"value": "USDDA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/trust TTTDA dafault",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=TTTDA",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"trust"
											],
											"query": [
												{
													"key": "permission",
													"value": "request"
												},
												{
													"key": "asset_code",
													"value": "TTTDA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/trust EEEDA dafault Copy",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
										},
										"url": {
											"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=EEEDA",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p1-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"trust"
											],
											"query": [
												{
													"key": "permission",
													"value": "request"
												},
												{
													"key": "asset_code",
													"value": "EEEDA"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 request trust to anchor",
							"item": [
								{
									"name": "/client/trust EURDA",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n      \"account_name\":\"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=EURDA",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"trust"
											],
											"query": [
												{
													"key": "permission",
													"value": "request"
												},
												{
													"key": "asset_code",
													"value": "EURDA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/trust USDDA",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n      \"account_name\":\"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=USDDA",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"trust"
											],
											"query": [
												{
													"key": "permission",
													"value": "request"
												},
												{
													"key": "asset_code",
													"value": "USDDA"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/trust USDDA default",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n      \"account_name\":\"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
										},
										"url": {
											"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/trust?permission=request&asset_code=USDDA",
											"host": [
												"{{base_url}}"
											],
											"port": "{{p2-api-service-port}}",
											"path": [
												"{{service-version}}",
												"client",
												"trust"
											],
											"query": [
												{
													"key": "permission",
													"value": "request"
												},
												{
													"key": "asset_code",
													"value": "USDDA"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "anchot allow trust",
					"item": [
						{
							"name": "allow trust USDDA participant1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account_name\":\"issuing\",\r\n\t\"participant_id\": \"{{participant1_id}}\",\r\n\t\"limit\":4000\t\r\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/anchor/trust?permission=allow&asset_code=USDDA&anchor_id={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"anchor",
										"trust"
									],
									"query": [
										{
											"key": "permission",
											"value": "allow"
										},
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "anchor_id",
											"value": "{{anchor_id}}"
										},
										{
											"key": "permission",
											"value": "allow",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "allow trust EURDA participant1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account_name\":\"issuing\",\r\n\t\"participant_id\": \"{{participant1_id}}\",\r\n\t\"limit\":4000\t\r\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/anchor/trust?permission=allow&asset_code=EURDA&anchor_id={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"anchor",
										"trust"
									],
									"query": [
										{
											"key": "permission",
											"value": "allow"
										},
										{
											"key": "asset_code",
											"value": "EURDA"
										},
										{
											"key": "anchor_id",
											"value": "{{anchor_id}}"
										},
										{
											"key": "permission",
											"value": "allow",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "allow trust USDDA participant1 default",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account_name\":\"default\",\r\n\t\"participant_id\": \"{{participant1_id}}\",\r\n\t\"limit\":4000\t\r\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/anchor/trust?permission=allow&asset_code=USDDA&anchor_id={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"anchor",
										"trust"
									],
									"query": [
										{
											"key": "permission",
											"value": "allow"
										},
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "anchor_id",
											"value": "{{anchor_id}}"
										},
										{
											"key": "permission",
											"value": "allow",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "allow trust EURDA participant2",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account_name\":\"issuing\",\r\n\t\"participant_id\": \"{{participant2_id}}\",\r\n\t\"limit\":4000\t\r\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/anchor/trust?permission=allow&asset_code=EURDA&anchor_id={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"anchor",
										"trust"
									],
									"query": [
										{
											"key": "permission",
											"value": "allow"
										},
										{
											"key": "asset_code",
											"value": "EURDA"
										},
										{
											"key": "anchor_id",
											"value": "{{anchor_id}}"
										},
										{
											"key": "permission",
											"value": "allow",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "allow trust USDDA participant2",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account_name\":\"issuing\",\r\n\t\"participant_id\": \"{{participant2_id}}\",\r\n\t\"limit\":4000\t\r\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/anchor/trust?permission=allow&asset_code=USDDA&anchor_id={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"anchor",
										"trust"
									],
									"query": [
										{
											"key": "permission",
											"value": "allow"
										},
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "anchor_id",
											"value": "{{anchor_id}}"
										},
										{
											"key": "permission",
											"value": "allow",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "allow trust USDDA participant2 default",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account_name\":\"default\",\r\n\t\"participant_id\": \"{{participant2_id}}\",\r\n\t\"limit\":4000\t\r\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-service-port}}/{{service-version}}/anchor/trust?permission=allow&asset_code=USDDA&anchor_id={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-service-port}}",
									"path": [
										"{{service-version}}",
										"anchor",
										"trust"
									],
									"query": [
										{
											"key": "permission",
											"value": "allow"
										},
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "anchor_id",
											"value": "{{anchor_id}}"
										},
										{
											"key": "permission",
											"value": "allow",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor client fund participants",
					"item": [
						{
							"name": "Sign & Fund USDDA participant1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"funding\": {\n    \t\"account_name\":\"issuing\",\n        \"amount\": 1800,\n        \"id_anchor\": \"{{anchor_id}}\",\n        \"asset_code\": \"USDDA\",\n        \"id_end_to_end\": \"32939\",\n        \"id_participant\": \"{{participant1_id}}\"\n    },\n    \"seed\":\"{{anchor_seed}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-client-port}}/signandfund",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-client-port}}",
									"path": [
										"signandfund"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign & Fund EURDA participant2",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"funding\": {\n        \"amount\": 1.8,\n        \"id_anchor\": \"{{anchor_id}}\",\n        \"asset_code\": \"EUR\",\n        \"id_end_to_end\": \"32939\",\n        \"id_participant\": \"{{participant2_id}}\"\n    },\n    \"seed\":\"{{anchor_seed}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}:{{anchor-client-port}}/signandfund",
									"host": [
										"{{base_url}}"
									],
									"port": "{{anchor-client-port}}",
									"path": [
										"signandfund"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1aebb4a3-00c4-4ac4-937a-532bea9c4433",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d05c404e-7490-45e9-981e-75934bb2ea58",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "get balance",
			"item": [
				{
					"name": "particiapnt1",
					"item": [
						{
							"name": "/client/balances/accounts/{account_name} issuing USDDA",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklUQXFUQVJZZi1aU3l1RjV5LjEtOSJ9.eyJhY2MiOlsiaXNzdWluZyIsImRlZmF1bHQiLCJ0ZXN0MjIyIl0sInZlciI6IjIuOS4wLjIiLCJpcHMiOlsiMTI3LjAuMC4xIiwiOjoxIiwiMTcyLjMwLjAuMSIsIjE3Mi4zMC4wLjI1Il0sImVudiI6InN0IiwiZW5wIjpbIi92MS9vbmJvYXJkaW5nL29wZXJhdGluZ2FjY291bnQiLCIvdjEvY2xpZW50L3RydXN0IiwiL3YxL2NsaWVudC9iYWxhbmNlcy9hY2NvdW50cyJdLCJuIjowLCJpYXQiOjE1NTA4MDk4NzMsIm5iZiI6MTU1MDgwOTg3OCwiZXhwIjoxNTUwODk2MjczLCJhdWQiOiJwYXJ0aWNpcGFudDMiLCJzdWIiOiItTFBtckYwUWdnNmZzaHpMYzQ4aSIsImp0aSI6Ii1MWklUN0oycXRvQncyU2RaZ2x3In0.OFjCvS_JlTFsF2rURomQ4Rn7PqN2CDSI4g6rKe3hOy4",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/balances/accounts/issuing?asset_code=USDDA&asset_issuer={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p1-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"accounts",
										"issuing"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "asset_issuer",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/accounts/{account_name} issuing EURDA",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/balances/accounts/test?asset_code=EURDA&asset_issuer={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p1-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"accounts",
										"test"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "EURDA"
										},
										{
											"key": "asset_issuer",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/accounts/{account_name} default",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/balances/accounts/default?asset_code=USDDA&asset_issuer={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p1-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"accounts",
										"default"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "asset_issuer",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/do",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/balances/do?asset_code=NZDDO",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p1-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"do"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "NZDDO"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/accounts/{account_name} issuing USDDA Copy",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MWklUQXFUQVJZZi1aU3l1RjV5LjEtOSJ9.eyJhY2MiOlsiaXNzdWluZyIsImRlZmF1bHQiLCJ0ZXN0MjIyIl0sInZlciI6IjIuOS4wLjIiLCJpcHMiOlsiMTI3LjAuMC4xIiwiOjoxIiwiMTcyLjMwLjAuMSIsIjE3Mi4zMC4wLjI1Il0sImVudiI6InN0IiwiZW5wIjpbIi92MS9vbmJvYXJkaW5nL29wZXJhdGluZ2FjY291bnQiLCIvdjEvY2xpZW50L3RydXN0IiwiL3YxL2NsaWVudC9iYWxhbmNlcy9hY2NvdW50cyJdLCJuIjowLCJpYXQiOjE1NTA4MDk4NzMsIm5iZiI6MTU1MDgwOTg3OCwiZXhwIjoxNTUwODk2MjczLCJhdWQiOiJwYXJ0aWNpcGFudDMiLCJzdWIiOiItTFBtckYwUWdnNmZzaHpMYzQ4aSIsImp0aSI6Ii1MWklUN0oycXRvQncyU2RaZ2x3In0.OFjCvS_JlTFsF2rURomQ4Rn7PqN2CDSI4g6rKe3hOy4",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/balances/accounts/default?asset_code=USDDA&asset_issuer={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p1-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"accounts",
										"default"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "asset_issuer",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "particiapnt2",
					"item": [
						{
							"name": "/client/balances/accounts/{account_name} issuing EURDA",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/balances/accounts/issuing?asset_code=EURDA&asset_issuer={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p2-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"accounts",
										"issuing"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "EURDA"
										},
										{
											"key": "asset_issuer",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/accounts/{account_name} issuing USDDA",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/balances/accounts/issuing?asset_code=USDDA&asset_issuer={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p2-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"accounts",
										"issuing"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USDDA"
										},
										{
											"key": "asset_issuer",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/accounts/{account_name} default",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p2-api-service-port}}/{{service-version}}/client/balances/accounts/default?asset_code=EURDA&asset_issuer={{anchor_id}}",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p2-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"accounts",
										"default"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "EURDA"
										},
										{
											"key": "asset_issuer",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/do",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}:{{p1-api-service-port}}/{{service-version}}/client/balances/do?asset_code=FJDDO",
									"host": [
										"{{base_url}}"
									],
									"port": "{{p1-api-service-port}}",
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"do"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "FJDDO"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}