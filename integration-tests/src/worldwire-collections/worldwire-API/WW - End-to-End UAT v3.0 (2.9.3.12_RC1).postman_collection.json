{
	"info": {
		"_postman_id": "0a5b1ac0-bbc1-4f32-8fd2-449e7feceb47",
		"name": "WW - End-to-End UAT v3.0 (2.9.3.12_RC1)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0.0.0 request JWT",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "Step 1 {{root}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti1\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{p1-xiid}}",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									},
									{
										"key": "x-verify-code",
										"value": "433300",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"{{env_version}}\",\n    \"acc\": [\n        \"issuing\",\n        \"default\",\n        \"admin\",\n        \"manager\",\n        \"viewer\",\n        \"sweeptest\",\n        \"sweeptest1\",\n        \"sweeptest2\",\n        \"default1s\",\n        \"default2s\",\n        \"default3s\",\n        \"default4s\",\n        \"default5s\",\n        \"default6s\",\n        \"default7s\",\n        \"default8s\",\n        \"default9s\",\n        \"default10s\",\n        \"default11s\",\n        \"default12s\",\n        \"default13s\",\n        \"default14s\",\n        \"default15s\",\n        \"default16s\",\n        \"default17s\",\n        \"default18s\",\n        \"default19s\",\n        \"default20s\",\n        \"default21s\"\n    ],\n    \"ver\": \"2.9.3.9_RC1\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"219.74.15.207\",\n        \"202.135.245.2\",\n        \"125.18.9.20\",\n        \"192.168.1.134\",\n        \"182.55.201.48\",\n        \"\"\n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n        \"/v1/admin/pr\",\n        \"/v1/admin/pr/domain\",\n        \"/v1/admin/pr/country\",\n        \"/v1/onboarding/accounts\",\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/client/assets\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/client/transactions/settle/do\",\n        \"/v1/client/transactions/settle/da\",\n        \"/v1/client/payout\",\n        \"/v1/client/service_check\",\n        \"/v1/client/accounts\",\n        \"/v1/client/assets/participants\",\n        \"/v1/admin/payout\",\n        \"/v1/client/account/sweep\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{root}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{p1-xiid}}"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									},
									{
										"key": "x-verify-code",
										"value": "355172",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti1}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{root}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p1-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{p1-xiid}}"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									},
									{
										"key": "x-verify-code",
										"value": "856311",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti1}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{root}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p1-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{root}}/auth/jwt/refresh",
									"host": [
										"{{root}}"
									],
									"path": [
										"auth",
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{root}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/v1/onboarding/operatingaccount\",\n\t\"ip\": \"202.135.245.4\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "Step 1 {{root}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti2\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{p2-xiid}}",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									},
									{
										"key": "x-verify-code",
										"value": "259553",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"{{env_version}}\",\n    \"acc\": [\n        \"issuing\",\n        \"default\",\n        \"admin\",\n        \"manager\",\n        \"viewer\",\n        \"default1\",\n        \"default2\",\n        \"default3\",\n        \"default4\",\n        \"default5\",\n        \"default6\",\n        \"default7\",\n        \"default8\",\n        \"default9\",\n        \"default10\",\n        \"default11\",\n        \"default12\",\n        \"default13\",\n        \"default14\",\n        \"default15\",\n        \"default16\",\n        \"default17\",\n        \"default18\",\n        \"default19\",\n        \"default20\"\n    ],\n    \"ver\": \"2.9.3.9_RC1\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"202.135.245.2\",\n        \"125.18.9.20\",\n        \"169.63.140.106\",\n        \"219.74.15.207\",\n        \"202.135.245.35\"\n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n        \"/v1/admin/pr\",\n        \"/v1/onboarding/accounts\",\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/client/assets\",\n        \"/v1/client/assets/issued\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/client/transactions/settle/do\",\n        \"/v1/client/transactions/settle/da\",\n        \"/v1/client/payout\",\n        \"/v1/client/accounts\",\n        \"/v1/client/assets/participants\",\n        \"/v1/admin/payout\",\n        \"/v1/client/account/sweep\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{participant2_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{root}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{p2-xiid}}"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									},
									{
										"key": "x-verify-code",
										"value": "355172",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti2}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{root}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p2-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{p2-xiid}}"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									},
									{
										"key": "x-verify-code",
										"value": "800133",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti2}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{root}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p2-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{root}}/auth/jwt/refresh",
									"host": [
										"{{root}}"
									],
									"path": [
										"auth",
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{root}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/v1/onboarding/operatingaccount\",\n\t\"ip\": \"100.96.2.5\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "Step 1 {{root}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti3\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{xiid}}",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									},
									{
										"key": "x-verify-code",
										"value": "404441",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"{{env_version}}\",\n    \"acc\": [\"issuing\"],\n    \"ver\": \"2.9.3.9_RC1\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"219.74.15.207\",\n        \"202.135.245.2\"\n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n        \"/v1/admin/pr\",\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/client/assets\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/anchor/trust\",\n        \"/v1/anchor/fundings/instruction\",\n        \"/v1/anchor/fundings/send\",\n        \"/v1/client/balances/da\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{anchor_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{root}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "-LPmrF0Qgg6fshzLc48i"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									},
									{
										"key": "x-verify-code",
										"value": "879221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti3}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{root}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"anchor-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "-LPmrF0Qgg6fshzLc48i"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									},
									{
										"key": "x-verify-code",
										"value": "798222",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti3}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{root}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"anchor-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{root}}/auth/jwt/refresh",
									"host": [
										"{{root}}"
									],
									"path": [
										"auth",
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{root}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/v1/onboarding/operatingaccount\",\n\t\"ip\": \"100.96.2.5\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "1. Happy Path Scenarios",
			"item": [
				{
					"name": "1. Creating Participant with 3 Operating Accounts",
					"item": [
						{
							"name": "create participant2",
							"item": [
								{
									"name": "0.create participant2 in participant registry",
									"item": [
										{
											"name": "/admin/pr",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"bic\": \"{{participant2_bic}}\",\n        \"country_code\": \"{{participant2_country_code}}\",\n        \"id\": \"{{participant2_id}}\",\n        \"operating_accounts\":[],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant2-callback-url}}/v1/callback\"\n    }"
												},
												"url": {
													"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
													"host": [
														"{{global-pr-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"pr"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.update participant2 status",
									"item": [
										{
											"name": "/admin/pr/{participant_id}/status",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}"
												},
												"url": {
													"raw": "{{global-pr-url}}/{{service-version}}/admin/pr/{{participant2_id}}/status",
													"host": [
														"{{global-pr-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"pr",
														"{{participant2_id}}",
														"status"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.create participant1 accounts",
									"item": [
										{
											"name": "0.create pariticipant2 issusing account",
											"item": [
												{
													"name": "/onboarding/issuingaccount",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/onboarding/issuingaccount",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"onboarding",
																"issuingaccount"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "1.create pariticipant2 operating accounts",
											"item": [
												{
													"name": "/onboarding/operatingaccount/{account_name} Admin",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/onboarding/operatingaccount/admin",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"onboarding",
																"operatingaccount",
																"admin"
															]
														}
													},
													"response": []
												},
												{
													"name": "/onboarding/operatingaccount/{account_name} Manager",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/onboarding/operatingaccount/manager",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"onboarding",
																"operatingaccount",
																"manager"
															]
														}
													},
													"response": []
												},
												{
													"name": "/onboarding/operatingaccount/{account_name} Viewer",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/onboarding/operatingaccount/viewer",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"onboarding",
																"operatingaccount",
																"viewer"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.query participants",
									"item": [
										{
											"name": "/client/participants",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?country_code={{participant2_country_code}}&asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants"
													],
													"query": [
														{
															"key": "country_code",
															"value": "{{participant2_country_code}}"
														},
														{
															"key": "asset_code",
															"value": "{{participant2-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{participant2_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "create participant1",
							"item": [
								{
									"name": "0.create participant1 in participant registry",
									"item": [
										{
											"name": "/admin/pr",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"bic\": \"{{participant1_bic}}\",\n        \"country_code\": \"{{participant1_country_code}}\",\n        \"id\": \"{{participant1_id}}\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n    }"
												},
												"url": {
													"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
													"host": [
														"{{global-pr-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"pr"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.update participant1 status",
									"item": [
										{
											"name": "/admin/pr/{participant_id}/status",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"status\":\"active\"}"
												},
												"url": {
													"raw": "{{global-pr-url}}/{{service-version}}/admin/pr/{{participant1_id}}/status",
													"host": [
														"{{global-pr-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"pr",
														"{{participant1_id}}",
														"status"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.create participant1 accounts",
									"item": [
										{
											"name": "0.create pariticipant1 issusing account",
											"item": [
												{
													"name": "/onboarding/issuingaccount",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/issuingaccount",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"onboarding",
																"issuingaccount"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "1.create pariticipant1 operating accounts",
											"item": [
												{
													"name": "/onboarding/operatingaccount/{account_name} Admin",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/operatingaccount/admin",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"onboarding",
																"operatingaccount",
																"admin"
															]
														}
													},
													"response": []
												},
												{
													"name": "/onboarding/operatingaccount/{account_name} Manager",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/operatingaccount/manager",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"onboarding",
																"operatingaccount",
																"manager"
															]
														}
													},
													"response": []
												},
												{
													"name": "/onboarding/operatingaccount/{account_name} Viewer",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/operatingaccount/viewer",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"onboarding",
																"operatingaccount",
																"viewer"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.query participants",
									"item": [
										{
											"name": "/client/participants",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/participants?",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants"
													],
													"query": [
														{
															"key": "country_code",
															"value": "{{participant1_country_code}}",
															"disabled": true
														},
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}",
															"disabled": true
														},
														{
															"key": "issuer_id",
															"value": "{{participant1_id}}",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "2. Creating a new Issuer Participant(anchor)",
					"item": [
						{
							"name": "0.create anchor in participant registry",
							"item": [
								{
									"name": "/admin/pr",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{anchor_id}}\",\n    \"bic\": \"{{anchor_bic}}\",\n    \"country_code\": \"{{anchor_country_code}}\",\n    \"role\": \"IS\",\n    \"status\": \"inactive\",\n    \"url_callback\": \"https://api.stronghold.co/v1/venues\"\n}"
										},
										"url": {
											"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
											"host": [
												"{{global-pr-url}}"
											],
											"path": [
												"{{service-version}}",
												"admin",
												"pr"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "1.update status",
							"item": [
								{
									"name": "/admin/pr/{participant_id}/status",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"status\":\"active\"}"
										},
										"url": {
											"raw": "{{global-pr-url}}/{{service-version}}/admin/pr/{{anchor_id}}/status",
											"host": [
												"{{global-pr-url}}"
											],
											"path": [
												"{{service-version}}",
												"admin",
												"pr",
												"{{anchor_id}}",
												"status"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.register anchor account to WW",
							"item": [
								{
									"name": "/admin/anchor/{anchor_domain}/register",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"address\": \"{{anchor_pkey}}\"}"
										},
										"url": {
											"raw": "{{global-anchor-url}}/{{service-version}}/admin/anchor/{{anchor_id}}/register",
											"host": [
												"{{global-anchor-url}}"
											],
											"path": [
												"{{service-version}}",
												"admin",
												"anchor",
												"{{anchor_id}}",
												"register"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "3. Issuing a new Digital Obligation and Digital Asset",
					"item": [
						{
							"name": "1.Issuing a new Digital Obligation",
							"item": [
								{
									"name": "participant1 issue DO",
									"item": [
										{
											"name": "/client/assets",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/assets?asset_code={{participant1-asset}}&asset_type=DO",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"assets"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														},
														{
															"key": "asset_type",
															"value": "DO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2 issue DO",
									"item": [
										{
											"name": "/client/assets",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/assets?asset_code={{participant2-asset}}&asset_type=DO",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"assets"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant2-asset}}"
														},
														{
															"key": "asset_type",
															"value": "DO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant1 get issued asset",
									"item": [
										{
											"name": "/client/assets/issued",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/issued",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"assets",
														"issued"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2 get issued asset",
									"item": [
										{
											"name": "/client/assets/issued",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/issued",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"assets",
														"issued"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.Issuing a new Digital Asset",
							"item": [
								{
									"name": "anchor issue DA1",
									"item": [
										{
											"name": "/admin/anchor/{anchor_domain}/onboard/assets DA",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/admin/anchor/{{anchor_id}}/onboard/assets?asset_code={{anchor-asset}}&asset_type=DA",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"anchor",
														"{{anchor_id}}",
														"onboard",
														"assets"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "asset_type",
															"value": "DA"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "anchor issue DA2",
									"item": [
										{
											"name": "/admin/anchor/{anchor_domain}/onboard/assets DA",
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/admin/anchor/{{anchor_id}}/onboard/assets?asset_code={{anchor-asset2}}&asset_type=DA",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"anchor",
														"{{anchor_id}}",
														"onboard",
														"assets"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset2}}"
														},
														{
															"key": "asset_type",
															"value": "DA"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "4. Whitelisting and establishing trustlines",
					"item": [
						{
							"name": "1.whitelist",
							"item": [
								{
									"name": "participant1 manage whitelist",
									"item": [
										{
											"name": "/client/participants/whitelist add participant2",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist add anchor",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{anchor_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist get whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist delete participant whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2 manage whitelist",
									"item": [
										{
											"name": "/client/whitelist/participants get whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist add participant1",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist add anchor",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{anchor_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist delete participant whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "anchor  manage whitelist",
									"item": [
										{
											"name": "/client/participants/whitelist participant1",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist participant2",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist get whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist delete participant whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.trustline ( amount limit:100)",
							"item": [
								{
									"name": "1.building DO trustline between participant1 and participant2",
									"item": [
										{
											"name": "0.build trust line for issuing account",
											"item": [
												{
													"name": "request",
													"item": [
														{
															"name": "participant1 request trustline to participant2",
															"item": [
																{
																	"name": "/client/trust",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"value": "application/json",
																				"type": "text"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{participant2-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "participant2 request trustline to participant1",
															"item": [
																{
																	"name": "/client/trust",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{participant1-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "allow",
													"item": [
														{
															"name": "participant1 allow request trustline from participant2",
															"item": [
																{
																	"name": "/client/trust",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"value": "application/json",
																				"type": "text"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{participant1-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "participant2 allow request trustline from participant1",
															"item": [
																{
																	"name": "/client/trust",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"value": "application/json",
																				"type": "text"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{participant2-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "get trusted asset",
													"item": [
														{
															"name": "get participant1 issuing account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/issuing",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"issuing"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "get participant2 issuing account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/issuing",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"issuing"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.building DA trustline between anchor, participant1, participant2",
									"item": [
										{
											"name": "0.build trust line for issuing account",
											"item": [
												{
													"name": "request",
													"item": [
														{
															"name": "participant1 request trust to anchor",
															"item": [
																{
																	"name": "/client/trust DA issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "participant2 request trust to anchor",
															"item": [
																{
																	"name": "/client/trust DA issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "allow",
													"item": [
														{
															"name": "anchor allow request trustline from participant1",
															"item": [
																{
																	"name": "allow trust DA participant1 issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{anchor-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust/{{anchor_id}}",
																			"host": [
																				"{{global-anchor-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"anchor",
																				"trust",
																				"{{anchor_id}}"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "anchor allow request trustline from participant2",
															"item": [
																{
																	"name": "allow trust DA participant2 issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{anchor-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust/{{anchor_id}}?",
																			"host": [
																				"{{global-anchor-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"anchor",
																				"trust",
																				"{{anchor_id}}"
																			],
																			"query": [
																				{
																					"key": "permission",
																					"value": "allow",
																					"disabled": true
																				}
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "get trusted asset",
													"item": [
														{
															"name": "get participant1 issuing account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/issuing",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"issuing"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "get participant2 issuing account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/issuing",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"issuing"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "1.build trust line for manager account",
											"item": [
												{
													"name": "request",
													"item": [
														{
															"name": "participant1 request trust to anchor",
															"item": [
																{
																	"name": "/client/trust DA manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"sweepTest\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "participant2 request trust to anchor",
															"item": [
																{
																	"name": "/client/trust DA manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"manager\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "allow",
													"item": [
														{
															"name": "anchor allow request trustline from participant1",
															"item": [
																{
																	"name": "allow trust DA participant1 manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{anchor-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"sweepTest\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust/{{anchor_id}}",
																			"host": [
																				"{{global-anchor-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"anchor",
																				"trust",
																				"{{anchor_id}}"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "anchor allow request trustline from participant2",
															"item": [
																{
																	"name": "allow trust DA participant2 manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{anchor-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"manager\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust/{{anchor_id}}?",
																			"host": [
																				"{{global-anchor-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"anchor",
																				"trust",
																				"{{anchor_id}}"
																			],
																			"query": [
																				{
																					"key": "permission",
																					"value": "allow",
																					"disabled": true
																				}
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "get trusted asset",
													"item": [
														{
															"name": "get participant1 manager account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/manager",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"manager"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "get participant2 manager account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/manager",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"manager"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.building DA2 trustline between anchor, participant1, participant2 Copy",
									"item": [
										{
											"name": "0.build trust line for issuing account",
											"item": [
												{
													"name": "request",
													"item": [
														{
															"name": "participant1 request trust to anchor",
															"item": [
																{
																	"name": "/client/trust DA issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "participant2 request trust to anchor",
															"item": [
																{
																	"name": "/client/trust DA issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "allow",
													"item": [
														{
															"name": "anchor allow request trustline from participant1",
															"item": [
																{
																	"name": "allow trust DA participant1 issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{anchor-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust/{{anchor_id}}",
																			"host": [
																				"{{global-anchor-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"anchor",
																				"trust",
																				"{{anchor_id}}"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "anchor allow request trustline from participant2",
															"item": [
																{
																	"name": "allow trust DA participant2 issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{anchor-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust/{{anchor_id}}?",
																			"host": [
																				"{{global-anchor-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"anchor",
																				"trust",
																				"{{anchor_id}}"
																			],
																			"query": [
																				{
																					"key": "permission",
																					"value": "allow",
																					"disabled": true
																				}
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "get trusted asset",
													"item": [
														{
															"name": "get participant1 issuing account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/issuing",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"issuing"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "get participant2 issuing account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} issuing",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/issuing",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"issuing"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "1.build trust line for manager account",
											"item": [
												{
													"name": "request",
													"item": [
														{
															"name": "participant1 request trust to anchor",
															"item": [
																{
																	"name": "/client/trust DA manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"manager\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "participant2 request trust to anchor",
															"item": [
																{
																	"name": "/client/trust DA manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"name": "Content-Type",
																				"type": "text",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"manager\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 100\n}"
																		},
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"trust"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "allow",
													"item": [
														{
															"name": "anchor allow request trustline from participant1",
															"item": [
																{
																	"name": "allow trust DA participant1 manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{anchor-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"manager\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust/{{anchor_id}}?",
																			"host": [
																				"{{global-anchor-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"anchor",
																				"trust",
																				"{{anchor_id}}"
																			],
																			"query": [
																				{
																					"key": "permission",
																					"value": "allow",
																					"disabled": true
																				}
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "anchor allow request trustline from participant2",
															"item": [
																{
																	"name": "allow trust DA participant2 manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{anchor-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"manager\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
																		},
																		"url": {
																			"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code={{anchor-asset2}}&anchor_id={{anchor_id}}",
																			"host": [
																				"{{global-anchor-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"anchor",
																				"trust"
																			],
																			"query": [
																				{
																					"key": "permission",
																					"value": "allow"
																				},
																				{
																					"key": "asset_code",
																					"value": "{{anchor-asset2}}"
																				},
																				{
																					"key": "anchor_id",
																					"value": "{{anchor_id}}"
																				},
																				{
																					"key": "permission",
																					"value": "allow",
																					"disabled": true
																				}
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "get trusted asset",
													"item": [
														{
															"name": "get participant1 manager account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p1-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/manager",
																			"host": [
																				"{{participant1-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"manager"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														},
														{
															"name": "get participant2 manager account trusted asset",
															"item": [
																{
																	"name": "/client/assets/accounts/{account_name} manager",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{p2-jwt-token}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/manager",
																			"host": [
																				"{{participant2-api-url}}"
																			],
																			"path": [
																				"{{service-version}}",
																				"client",
																				"assets",
																				"accounts",
																				"manager"
																			]
																		}
																	},
																	"response": []
																}
															],
															"_postman_isSubFolder": true
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "5. Sending a payment (DA) to the RFI",
					"item": [
						{
							"name": "1.participant1 Sending fee request",
							"item": [
								{
									"name": "/client/fees/{{participant1_id}}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DA\",\n        \"asset_code\": \"USD\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"USD\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant1_id}}",
											"host": [
												"{{global-fee-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"fees",
												"{{participant1_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.check OFI manager account balance",
							"item": [
								{
									"name": "/client/balances/accounts/{account_name} manager",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/manager?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"balances",
												"accounts",
												"manager"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "{{anchor-asset}}"
												},
												{
													"key": "issuer_id",
													"value": "{{anchor_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "3.getting funded with DAs",
							"item": [
								{
									"name": "0.get participant account",
									"item": [
										{
											"name": "/admin/pr",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
													"host": [
														"{{global-pr-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"pr"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.getting send instruction",
									"item": [
										{
											"name": "/anchor/fundings/instruction",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"default\",\n    \"amount_funding\": 100,\n    \"anchor_id\": \"{{anchor_id}}\",\n    \"asset_code_issued\": \"{{anchor-asset}}\",\n    \"end_to_end_id\": \"32939\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"memo_transaction\": \"QA\"\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/fundings/instruction",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"fundings",
														"instruction"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.funding",
									"item": [
										{
											"name": "/anchor/fundings/send",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"default\",\n    \"amount_funding\": 100,\n    \"anchor_id\": \"{{anchor_id}}\",\n    \"asset_code_issued\": \"{{anchor-asset}}\",\n    \"end_to_end_id\": \"32939\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"memo_transaction\": \"QA\"\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/fundings/send?funding_signed=NWKBGNNISGtoHrJs4dijBTVFuW7fGWr3kvecds1qdC2mzRKV%2FkEwSeAZqEsB%2BjNsB%2BQMZZl8VkvmZWkCLZZmCw%3D%3D&instruction_signed=AAAAAHIfROTVzLvBWr8T6KNUPvbWZ6CifWd7sRHHuOEEoHX5AAAAZAAAQ4gAAABBAAAAAAAAAAPgW3tFOkKXaRExeMNUrQgJnoCTH%2BkViTxpebgEd%2F6LSQAAAAEAAAABAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAQAAAABu0k4KZpErlzp1cmLGioi2PG5JPSHcHIEvz%2Bt6DxO63QAAAAFVU0QAAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAHc1lAAAAAAAAAAAATReBpUAAABABY0BV7M44TXaq8Qx5p0n8w3dDjH2Rkl58xGKGYKpQef3iIJIRWAolugGDocl1SsB9rU9cXooicEvKs76DlV1CA%3D%3D",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"fundings",
														"send"
													],
													"query": [
														{
															"key": "funding_signed",
															"value": "NWKBGNNISGtoHrJs4dijBTVFuW7fGWr3kvecds1qdC2mzRKV%2FkEwSeAZqEsB%2BjNsB%2BQMZZl8VkvmZWkCLZZmCw%3D%3D"
														},
														{
															"key": "instruction_signed",
															"value": "AAAAAHIfROTVzLvBWr8T6KNUPvbWZ6CifWd7sRHHuOEEoHX5AAAAZAAAQ4gAAABBAAAAAAAAAAPgW3tFOkKXaRExeMNUrQgJnoCTH%2BkViTxpebgEd%2F6LSQAAAAEAAAABAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAQAAAABu0k4KZpErlzp1cmLGioi2PG5JPSHcHIEvz%2Bt6DxO63QAAAAFVU0QAAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAHc1lAAAAAAAAAAAATReBpUAAABABY0BV7M44TXaq8Qx5p0n8w3dDjH2Rkl58xGKGYKpQef3iIJIRWAolugGDocl1SsB9rU9cXooicEvKs76DlV1CA%3D%3D"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "4.sending a payment to the RFI(participant2) manager account",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"pacs.008.001.07\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+VVNEREEwODA0MjAxOU5aTE5aTEdGMDAxMDAwMDAwMDAwMDQ8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQxPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmRlZmF1bHQ8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxQbXRUcEluZj4KICAgICAgICAgICAgICAgIDxTdmNMdmw+CiAgICAgICAgICAgICAgICAgICAgPFBydHJ5PmlibWFuY2hvcjwvUHJ0cnk+CiAgICAgICAgICAgICAgICA8L1N2Y0x2bD4KICAgICAgICAgICAgPC9QbXRUcEluZj4KICAgICAgICAgICAgPEluc3RnQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0FCMDAwPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RnQWd0PgogICAgICAgICAgICA8SW5zdGRBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQyPC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvSW5zdGRBZ3Q+CiAgICAgICAgPC9HcnBIZHI+CiAgICAgICAgPENkdFRyZlR4SW5mPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8SW5zdHJJZD5VU0REQTA4MDQyMDE5TlpMTlpMR0YwMDEwMDAwMDAwMDAwNDwvSW5zdHJJZD4KICAgICAgICAgICAgICAgIDxFbmRUb0VuZElkPlVTRERBMDgwNDIwMTlOWkxOWkxHRjAwMTAwMDAwMDAwMDA0PC9FbmRUb0VuZElkPgogICAgICAgICAgICAgICAgPFR4SWQ+VVNEREEwODA0MjAxOU5aTE5aTEdGMDAxMDAwMDAwMDAwMDQ8L1R4SWQ+CiAgICAgICAgICAgIDwvUG10SWQ+CiAgICAgICAgICAgIDxJbnRyQmtTdHRsbUFtdCBDY3k9IlVTRCI+OTwvSW50ckJrU3R0bG1BbXQ+CiAgICAgICAgICAgIDxJbnRyQmtTdHRsbUR0PjIwMTUtMDktMjk8L0ludHJCa1N0dGxtRHQ+CiAgICAgICAgICAgIDxYY2hnUmF0ZT4xLjI8L1hjaGdSYXRlPgogICAgICAgICAgICA8Q2hyZ0JyPkNSRUQ8L0NocmdCcj4KICAgICAgICAgICAgPENocmdzSW5mPgogICAgICAgICAgICAgICAgPEFtdCBDY3k9IlVTRCI+MjwvQW10PgogICAgICAgICAgICAgICAgPEFndD4KICAgICAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICA8L0FndD4KICAgICAgICAgICAgPC9DaHJnc0luZj4KICAgICAgICAgICAgPERidHI+CiAgICAgICAgICAgICAgICA8Tm0+QUJDIENvcnBvcmF0aW9uPC9ObT4KICAgICAgICAgICAgICAgIDxQc3RsQWRyPgogICAgICAgICAgICAgICAgICAgIDxTdHJ0Tm0+VGltZXMgU3F1YXJlPC9TdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgPEJsZGdOYj43PC9CbGRnTmI+CiAgICAgICAgICAgICAgICAgICAgPFBzdENkPk5ZIDEwMDM2PC9Qc3RDZD4KICAgICAgICAgICAgICAgICAgICA8VHduTm0+TmV3IFlvcms8L1R3bk5tPgogICAgICAgICAgICAgICAgICAgIDxDdHJ5PlVTPC9DdHJ5PgogICAgICAgICAgICAgICAgPC9Qc3RsQWRyPgogICAgICAgICAgICA8L0RidHI+CiAgICAgICAgICAgIDxEYnRyQWNjdD4KICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPjAwMTI1NTc0OTk5PC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICA8L0RidHJBY2N0PgogICAgICAgICAgICA8RGJ0ckFndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNERTEwMTwvQklDRkk+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvRGJ0ckFndD4KICAgICAgICAgICAgPENkdHJBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0NkdHJBZ3Q+CiAgICAgICAgICAgIDxDZHRyPgogICAgICAgICAgICAgICAgPE5tPkRFRiBFbGVjdHJvbmljczwvTm0+CiAgICAgICAgICAgICAgICA8UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8U3RydE5tPk1hcmsgTGFuZTwvU3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxCbGRnTmI+NTU8L0JsZGdOYj4KICAgICAgICAgICAgICAgICAgICA8UHN0Q2Q+RUMzUjdORTwvUHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPFR3bk5tPkxvbmRvbjwvVHduTm0+CiAgICAgICAgICAgICAgICAgICAgPEN0cnk+R0I8L0N0cnk+CiAgICAgICAgICAgICAgICAgICAgPEFkckxpbmU+Q29ybiBFeGNoYW5nZSA1dGggRmxvb3I8L0FkckxpbmU+CiAgICAgICAgICAgICAgICA8L1BzdGxBZHI+CiAgICAgICAgICAgIDwvQ2R0cj4KICAgICAgICAgICAgPENkdHJBY2N0PgogICAgICAgICAgICAgICAgPElkPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+MjM2ODM3MDc5OTQyMTU8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgIDwvQ2R0ckFjY3Q+CiAgICAgICAgPC9DZHRUcmZUeEluZj4KICAgIDwvRklUb0ZJQ3N0bXJDZHRUcmY+CjwvRG9jdW1lbnQ+\"\n}"
										},
										"url": {
											"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
											"host": [
												"{{participant1-send-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "5.1RFI manager account receiving DA payment from OFI",
							"item": [
								{
									"name": "0. query participants get receive account",
									"item": [
										{
											"name": "/client/participants",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants"
													],
													"query": [
														{
															"key": "country_code",
															"value": "{{participant2_country_code}}",
															"disabled": true
														},
														{
															"key": "asset_code",
															"value": "{{participant2-asset}}",
															"disabled": true
														},
														{
															"key": "issuer_id",
															"value": "{{participant2_id}}",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1. receive payment from OFI",
									"item": [
										{
											"name": "/transactions/reply",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIyMjIyMkFBQVdXV1dXNzc3MDAwMDAwMDEyMzE8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE5LTAzLTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQyPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmRlZmF1bHQ8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0FVU0FHRjAwMjwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDI8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HQ0JWMlRXRDMzTUhWN0RQUVVVNUpUMlA0Uk9WWVVGRTdHVFBOUTdJRUpaQzNJRFZCWEpEQlIyRzwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5VU0REQTA4MDQyMDE5TlpMTlpMR0YwMDEwMDAwMDAwMDAwNDwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPlVTRERBMDgwNDIwMTlOWkxOWkxHRjAwMTAwMDAwMDAwMDA0PC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+VVNEREEwODA0MjAxOU5aTE5aTEdGMDAxMDAwMDAwMDAwMDQ8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5VU0REQTA4MDQyMDE5TlpMTlpMR0YwMDEwMDAwMDAwMDAwNDwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
												},
												"url": {
													"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
													"host": [
														"{{participant2-send-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"transactions",
														"reply"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.check RFI manager account balance",
									"item": [
										{
											"name": "/client/balances/accounts/{account_name} manager",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/manager?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"manager"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "6. Sending a payment (DO) to the RFI",
					"item": [
						{
							"name": "0.get participant1 issue asset",
							"item": [
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/issued",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/balances/accounts/{account_name} issuing",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"balances",
												"accounts",
												"issuing"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "{{participant1-asset}}"
												},
												{
													"key": "issuer_id",
													"value": "{{participant1_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "1.checking participant whitelist",
							"item": [
								{
									"name": "0.check participant1 whitelist participant2",
									"item": [
										{
											"name": "/client/participants/whitelist get whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.check participant2 whitelist participant1",
									"item": [
										{
											"name": "/client/whitelist/participants get whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.checking participant2(RFI) trust asset",
							"item": [
								{
									"name": "/client/assets/accounts/{account_name} issuing",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/issuing",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "3.query payout ",
							"item": [
								{
									"name": "get payout",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-payout-url}}/{{service-version}}/client/payout?",
											"host": [
												"{{participant1-payout-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"payout"
											],
											"query": [
												{
													"key": "receive_mode",
													"value": "cash_pickup",
													"disabled": true
												},
												{
													"key": "receive_mode",
													"value": "cash_pickup",
													"disabled": true
												},
												{
													"key": "city",
													"value": "north west",
													"disabled": true
												},
												{
													"key": "state",
													"value": "tw",
													"disabled": true
												},
												{
													"key": "street",
													"value": "changI",
													"disabled": true
												},
												{
													"key": "country",
													"value": "SG",
													"disabled": true
												},
												{
													"key": "id",
													"value": "ssfrPxbD7VQjscx4CqFLewVGwcyjgl",
													"disabled": true
												},
												{
													"key": "address",
													"value": "sg",
													"disabled": true
												},
												{
													"key": "parent",
													"value": "mXTHWcdXY8VU9qhEr77oCyOFbKx3f0",
													"disabled": true
												},
												{
													"key": "child",
													"value": "2QpCGkJFHeUd22lfk5MEGVwn06cppB",
													"disabled": true
												},
												{
													"key": "currency",
													"value": "Twd",
													"disabled": true
												},
												{
													"key": "image",
													"value": "123123123",
													"disabled": true
												},
												{
													"key": "name",
													"value": "CIMB Bank9ee",
													"disabled": true
												},
												{
													"key": "telephone",
													"value": "0911222111",
													"disabled": true
												},
												{
													"key": "url",
													"value": "123",
													"disabled": true
												},
												{
													"key": "member",
													"value": "BankB",
													"disabled": true
												},
												{
													"key": "geo",
													"value": "point",
													"disabled": true
												},
												{
													"key": "type",
													"value": "Mobile Network Operator",
													"disabled": true
												},
												{
													"key": "postal_code",
													"value": "999999",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "4.participant1 Sending fee request",
							"item": [
								{
									"name": "by payout",
									"item": [
										{
											"name": "/client/fees/{{participant1_id}}",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DO\",\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"{{participant1-asset}}\",\n    \"details_payout_point\": {\n        \"address\": {\n            \"building_number\": \"123\",\n            \"city\": \"center\",\n            \"country\": \"TW\",\n            \"postal_code\": \"19333\",\n            \"state\": \"dowtown\",\n            \"street\": \"45 telok road\"\n        },\n        \"category\": {\n            \"name\": \"delivery\",\n            \"options\": [\n                {\n                    \"description\": \"Deliver PHP to home address\",\n                    \"terms\": \"Limit of 1212 PHP\"\n                },\n                {\n                    \"description\": \"Deliver PHP to home address\",\n                    \"terms\": \"Limit of 1212 PHP\"\n                }\n            ]\n        },\n        \"currencies_accepted\": [\n            \"RMB\",\n            \"NTD\",\n            \"SGD\"\n        ],\n        \"geo\": {\n            \"coordinates\": [\n                {\n                    \"lat\": 1.3831130248377246,\n                    \"long\": 103.677978515625\n                },\n                {\n                    \"lat\": 1.435625513519856,\n                    \"long\": 103.7771987915039\n                },\n                {\n                    \"lat\": 1.435625513519856,\n                    \"long\": 103.677978515625\n                },\n                {\n                    \"lat\": 1.3831130248377246,\n                    \"long\": 103.677978515625\n                },\n                {\n                    \"lat\": 1.3831130248377246,\n                    \"long\": 103.7771987915039\n                }\n            ],\n            \"type\": \"area\"\n        },\n        \"id\": \"38izUef3Ct93QHWtGbhN0Ndr9nvekF\",\n        \"image\": \"image.jpg\",\n        \"member_of\": [\n            \"WIREX\",\n            \"RCBC\"\n        ],\n        \"name\": \"Location B\",\n        \"opening_hours\": [\n            {\n                \"closes\": \"17:30\",\n                \"day_of_week\": [\n                    \"monday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:35\",\n                \"day_of_week\": [\n                    \"saturday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:32\",\n                \"day_of_week\": [\n                    \"wednesday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:36\\r\",\n                \"day_of_week\": [\n                    \"sunday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:31\",\n                \"day_of_week\": [\n                    \"tuesday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:33\",\n                \"day_of_week\": [\n                    \"thursday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:34\",\n                \"day_of_week\": [\n                    \"friday\"\n                ],\n                \"opens\": \"12:00\"\n            }\n        ],\n        \"payout_child\": [],\n        \"payout_parent\": [],\n        \"telephone\": \"966-2421\",\n        \"type\": \"Mobile Network Operator\",\n        \"url\": \"google.com\"\n    }\n}"
												},
												"url": {
													"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant2_id}}",
													"host": [
														"{{global-fee-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"fees",
														"{{participant2_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "by gross",
									"item": [
										{
											"name": "/client/fees/{{participant1_id}}",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DO\",\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"amount_gross\": 200,\n    \"asset_payout\": \"{{participant1-asset}}\",\n    \"details_payout_point\": {\n        \"address\": {\n            \"building_number\": \"123\",\n            \"city\": \"center\",\n            \"country\": \"TW\",\n            \"postal_code\": \"19333\",\n            \"state\": \"dowtown\",\n            \"street\": \"45 telok road\"\n        },\n        \"category\": {\n            \"name\": \"delivery\",\n            \"options\": [\n                {\n                    \"description\": \"Deliver PHP to home address\",\n                    \"terms\": \"Limit of 1212 PHP\"\n                },\n                {\n                    \"description\": \"Deliver PHP to home address\",\n                    \"terms\": \"Limit of 1212 PHP\"\n                }\n            ]\n        },\n        \"currencies_accepted\": [\n            \"RMB\",\n            \"NTD\",\n            \"SGD\"\n        ],\n        \"geo\": {\n            \"coordinates\": [\n                {\n                    \"lat\": 1.3831130248377246,\n                    \"long\": 103.677978515625\n                },\n                {\n                    \"lat\": 1.435625513519856,\n                    \"long\": 103.7771987915039\n                },\n                {\n                    \"lat\": 1.435625513519856,\n                    \"long\": 103.677978515625\n                },\n                {\n                    \"lat\": 1.3831130248377246,\n                    \"long\": 103.677978515625\n                },\n                {\n                    \"lat\": 1.3831130248377246,\n                    \"long\": 103.7771987915039\n                }\n            ],\n            \"type\": \"area\"\n        },\n        \"id\": \"38izUef3Ct93QHWtGbhN0Ndr9nvekF\",\n        \"image\": \"image.jpg\",\n        \"member_of\": [\n            \"WIREX\",\n            \"RCBC\"\n        ],\n        \"name\": \"Location B\",\n        \"opening_hours\": [\n            {\n                \"closes\": \"17:30\",\n                \"day_of_week\": [\n                    \"monday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:35\",\n                \"day_of_week\": [\n                    \"saturday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:32\",\n                \"day_of_week\": [\n                    \"wednesday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:36\\r\",\n                \"day_of_week\": [\n                    \"sunday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:31\",\n                \"day_of_week\": [\n                    \"tuesday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:33\",\n                \"day_of_week\": [\n                    \"thursday\"\n                ],\n                \"opens\": \"12:00\"\n            },\n            {\n                \"closes\": \"17:34\",\n                \"day_of_week\": [\n                    \"friday\"\n                ],\n                \"opens\": \"12:00\"\n            }\n        ],\n        \"payout_child\": [],\n        \"payout_parent\": [],\n        \"telephone\": \"966-2421\",\n        \"type\": \"Mobile Network Operator\",\n        \"url\": \"google.com\"\n    }\n}"
												},
												"url": {
													"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant2_id}}",
													"host": [
														"{{global-fee-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"fees",
														"{{participant2_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "5.checking balance before payment",
							"item": [
								{
									"name": "participant1 issued do balance",
									"item": [
										{
											"name": "/client/balances/do",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/do?asset_code={{participant1-asset}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"do"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2 issuing account DO balance",
									"item": [
										{
											"name": "/client/balances/accounts/{account_name} issuing {{participant1-asset}}",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{participant1_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "6.sending a payment to the RFI(participant2)",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:pacs.008.001.07\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIAogICAgeG1sbnM6Y2N0PSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3IiAKICAgIHhtbG5zOmhlYWQ9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpoZWFkLjAwMS4wMDEuMDEiPgogICAgPEFwcEhkcj4KICAgICAgICA8aGVhZDpGcj4KICAgICAgICAgICAgPGhlYWQ6RklJZD4KICAgICAgICAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPGhlYWQ6QklDRkk+SUJNSUJNUUEwMDE8L2hlYWQ6QklDRkk+CiAgICAgICAgICAgICAgICAgICAgPGhlYWQ6T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPGhlYWQ6SWQ+cGFydGljaXBhbnQxPC9oZWFkOklkPgogICAgICAgICAgICAgICAgICAgIDwvaGVhZDpPdGhyPgogICAgICAgICAgICAgICAgPC9oZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvaGVhZDpGSUlkPgogICAgICAgIDwvaGVhZDpGcj4KICAgICAgICA8aGVhZDpUbz4KICAgICAgICAgICAgPGhlYWQ6RklJZD4KICAgICAgICAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPGhlYWQ6QklDRkk+V09STERXSVJFMDA8L2hlYWQ6QklDRkk+CiAgICAgICAgICAgICAgICAgICAgPGhlYWQ6T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPGhlYWQ6SWQ+V1c8L2hlYWQ6SWQ+CiAgICAgICAgICAgICAgICAgICAgPC9oZWFkOk90aHI+CiAgICAgICAgICAgICAgICA8L2hlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgPC9oZWFkOkZJSWQ+CiAgICAgICAgPC9oZWFkOlRvPgogICAgICAgIDxoZWFkOkJpek1zZ0lkcj5TR0RETzE4MDcyMDE5SUJNSUJNUUEwMDE1NDE4NzA4NDM4MTwvaGVhZDpCaXpNc2dJZHI+CiAgICAgICAgPGhlYWQ6TXNnRGVmSWRyPnBhY3MuMDA4LjAwMS4wNzwvaGVhZDpNc2dEZWZJZHI+CiAgICAgICAgPGhlYWQ6Q3JlRHQ+MjAxOS0wNy0xN1QyMzoxOTozMFo8L2hlYWQ6Q3JlRHQ+CiAgICA8L0FwcEhkcj4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8Y2N0OkdycEhkcj4KICAgICAgICAgICAgPGNjdDpNc2dJZD5TR0RETzE4MDcyMDE5SUJNSUJNUUEwMDE1NDE4NzA4NDM4MTwvY2N0Ok1zZ0lkPgogICAgICAgICAgICA8Y2N0OkNyZUR0VG0+MjAxOS0wNy0xN1QyMzoxOTozMDwvY2N0OkNyZUR0VG0+CiAgICAgICAgICAgIDxjY3Q6TmJPZlR4cz4xPC9jY3Q6TmJPZlR4cz4KICAgICAgICAgICAgPGNjdDpTdHRsbUluZj4KICAgICAgICAgICAgICAgIDxjY3Q6U3R0bG1NdGQ+V1dETzwvY2N0OlN0dGxtTXRkPgogICAgICAgICAgICAgICAgPGNjdDpTdHRsbUFjY3Q+CiAgICAgICAgICAgICAgICAgICAgPGNjdDpJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPGNjdDpPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNjdDpJZD5wYXJ0aWNpcGFudDE8L2NjdDpJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9jY3Q6T3Rocj4KICAgICAgICAgICAgICAgICAgICA8L2NjdDpJZD4KICAgICAgICAgICAgICAgICAgICA8Y2N0Ok5tPmlzc3Vpbmc8L2NjdDpObT4KICAgICAgICAgICAgICAgIDwvY2N0OlN0dGxtQWNjdD4KICAgICAgICAgICAgPC9jY3Q6U3R0bG1JbmY+CiAgICAgICAgICAgIDxjY3Q6UG10VHBJbmY+CiAgICAgICAgICAgICAgICA8Y2N0OlN2Y0x2bD4KICAgICAgICAgICAgICAgICAgICA8Y2N0OlBydHJ5PnBhcnRpY2lwYW50MTwvY2N0OlBydHJ5PgogICAgICAgICAgICAgICAgPC9jY3Q6U3ZjTHZsPgogICAgICAgICAgICA8L2NjdDpQbXRUcEluZj4KICAgICAgICAgICAgPGNjdDpJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxjY3Q6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8Y2N0OkJJQ0ZJPklCTUlCTVFBMDAxPC9jY3Q6QklDRkk+CiAgICAgICAgICAgICAgICAgICAgPGNjdDpPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8Y2N0OklkPnBhcnRpY2lwYW50MTwvY2N0OklkPgogICAgICAgICAgICAgICAgICAgIDwvY2N0Ok90aHI+CiAgICAgICAgICAgICAgICA8L2NjdDpGaW5JbnN0bklkPgogICAgICAgICAgICA8L2NjdDpJbnN0Z0FndD4KICAgICAgICAgICAgPGNjdDpJbnN0ZEFndD4KICAgICAgICAgICAgICAgIDxjY3Q6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8Y2N0OkJJQ0ZJPklCTUlCTVFBMDAyPC9jY3Q6QklDRkk+CiAgICAgICAgICAgICAgICAgICAgPGNjdDpPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8Y2N0OklkPnBhcnRpY2lwYW50MjwvY2N0OklkPgogICAgICAgICAgICAgICAgICAgIDwvY2N0Ok90aHI+CiAgICAgICAgICAgICAgICA8L2NjdDpGaW5JbnN0bklkPgogICAgICAgICAgICA8L2NjdDpJbnN0ZEFndD4KICAgICAgICA8L2NjdDpHcnBIZHI+CiAgICAgICAgPGNjdDpDZHRUcmZUeEluZj4KICAgICAgICAgICAgPGNjdDpQbXRJZD4KICAgICAgICAgICAgICAgIDxjY3Q6SW5zdHJJZD5TR0RETzE4MDcyMDE5SUJNSUJNUUEwMDE1NDE4NzA4NDM4MTwvY2N0Okluc3RySWQ+CiAgICAgICAgICAgICAgICA8Y2N0OkVuZFRvRW5kSWQ+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAxNTQxODcwODQzODE8L2NjdDpFbmRUb0VuZElkPgogICAgICAgICAgICAgICAgPGNjdDpUeElkPlNHRERPMTgwNzIwMTlJQk1JQk1RQTAwMTU0MTg3MDg0MzgxPC9jY3Q6VHhJZD4KICAgICAgICAgICAgPC9jY3Q6UG10SWQ+CiAgICAgICAgICAgIDxjY3Q6SW50ckJrU3R0bG1BbXQgQ2N5PSJTR0RETyI+MTAwPC9jY3Q6SW50ckJrU3R0bG1BbXQ+CiAgICAgICAgICAgIDxjY3Q6SW50ckJrU3R0bG1EdD4yMDE5LTA3LTE4PC9jY3Q6SW50ckJrU3R0bG1EdD4KICAgICAgICAgICAgPGNjdDpJbnN0ZEFtdCBDY3k9IlNHRERPIj4xMDA8L2NjdDpJbnN0ZEFtdD4KICAgICAgICAgICAgPGNjdDpYY2hnUmF0ZT4xLjAwMDAwMDAwPC9jY3Q6WGNoZ1JhdGU+CiAgICAgICAgICAgIDxjY3Q6Q2hyZ0JyPkRFQlQ8L2NjdDpDaHJnQnI+CiAgICAgICAgICAgIDxjY3Q6Q2hyZ3NJbmY+CiAgICAgICAgICAgICAgICA8Y2N0OkFtdCBDY3k9IlNHRERPIj4wLjU8L2NjdDpBbXQ+CiAgICAgICAgICAgICAgICA8Y2N0OkFndD4KICAgICAgICAgICAgICAgICAgICA8Y2N0OkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxjY3Q6QklDRkk+SUJNSUJNUUEwMDI8L2NjdDpCSUNGST4KICAgICAgICAgICAgICAgICAgICAgICAgPGNjdDpPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNjdDpJZD5wYXJ0aWNpcGFudDE8L2NjdDpJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9jY3Q6T3Rocj4KICAgICAgICAgICAgICAgICAgICA8L2NjdDpGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgPC9jY3Q6QWd0PgogICAgICAgICAgICA8L2NjdDpDaHJnc0luZj4KICAgICAgICAgICAgPGNjdDpEYnRyPgogICAgICAgICAgICAgICAgPGNjdDpObT5BQkM8L2NjdDpObT4KICAgICAgICAgICAgICAgIDxjY3Q6UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8Y2N0OlN0cnRObT5UaW1lcyBTcXVhcmU8L2NjdDpTdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgPGNjdDpCbGRnTmI+NzwvY2N0OkJsZGdOYj4KICAgICAgICAgICAgICAgICAgICA8Y2N0OlBzdENkPk5ZIDEwMDM2PC9jY3Q6UHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPGNjdDpUd25ObT5OZXcgWW9yazwvY2N0OlR3bk5tPgogICAgICAgICAgICAgICAgICAgIDxjY3Q6Q3RyeT5VUzwvY2N0OkN0cnk+CiAgICAgICAgICAgICAgICA8L2NjdDpQc3RsQWRyPgogICAgICAgICAgICA8L2NjdDpEYnRyPgogICAgICAgICAgICA8Y2N0OkRidHJBZ3Q+CiAgICAgICAgICAgICAgICA8Y2N0OkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPGNjdDpCSUNGST5JQk1JQk1RQTAwMTwvY2N0OkJJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDxjY3Q6T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPGNjdDpJZD5wYXJ0aWNpcGFudDE8L2NjdDpJZD4KICAgICAgICAgICAgICAgICAgICA8L2NjdDpPdGhyPgogICAgICAgICAgICAgICAgPC9jY3Q6RmluSW5zdG5JZD4KICAgICAgICAgICAgPC9jY3Q6RGJ0ckFndD4KICAgICAgICAgICAgPGNjdDpDZHRyQWd0PgogICAgICAgICAgICAgICAgPGNjdDpGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxjY3Q6QklDRkk+SUJNSUJNUUEwMDI8L2NjdDpCSUNGST4KICAgICAgICAgICAgICAgICAgICA8Y2N0Ok90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxjY3Q6SWQ+cGFydGljaXBhbnQyPC9jY3Q6SWQ+CiAgICAgICAgICAgICAgICAgICAgPC9jY3Q6T3Rocj4KICAgICAgICAgICAgICAgIDwvY2N0OkZpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvY2N0OkNkdHJBZ3Q+CiAgICAgICAgICAgIDxjY3Q6Q2R0cj4KICAgICAgICAgICAgICAgIDxjY3Q6Tm0+REVGPC9jY3Q6Tm0+CiAgICAgICAgICAgICAgICA8Y2N0OlBzdGxBZHI+CiAgICAgICAgICAgICAgICAgICAgPGNjdDpTdHJ0Tm0+TWFyayBMYW5lPC9jY3Q6U3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxjY3Q6QmxkZ05iPjU1PC9jY3Q6QmxkZ05iPgogICAgICAgICAgICAgICAgICAgIDxjY3Q6UHN0Q2Q+RUMzUjdORTwvY2N0OlBzdENkPgogICAgICAgICAgICAgICAgICAgIDxjY3Q6VHduTm0+TG9uZG9uPC9jY3Q6VHduTm0+CiAgICAgICAgICAgICAgICAgICAgPGNjdDpDdHJ5PkdCPC9jY3Q6Q3RyeT4KICAgICAgICAgICAgICAgICAgICA8Y2N0OkFkckxpbmU+Q29ybiBFeGNoYW5nZSA1dGggRmxvb3I8L2NjdDpBZHJMaW5lPgogICAgICAgICAgICAgICAgPC9jY3Q6UHN0bEFkcj4KICAgICAgICAgICAgPC9jY3Q6Q2R0cj4KICAgICAgICAgICAgPGNjdDpTcGxtdHJ5RGF0YT4KICAgICAgICAgICAgICAgIDxjY3Q6UGxjQW5kTm0+cGF5b3V0PC9jY3Q6UGxjQW5kTm0+CiAgICAgICAgICAgICAgICA8Y2N0OkVudmxwPgogICAgICAgICAgICAgICAgICAgIDxjY3Q6SWQ+MzhpelVlZjNDdDkzUUhXdEdiaE4wTmRyOW52ZWtGPC9jY3Q6SWQ+CiAgICAgICAgICAgICAgICA8L2NjdDpFbnZscD4KICAgICAgICAgICAgPC9jY3Q6U3BsbXRyeURhdGE+CiAgICAgICAgICAgIDxjY3Q6U3BsbXRyeURhdGE+CiAgICAgICAgICAgICAgICA8Y2N0OlBsY0FuZE5tPmZlZTwvY2N0OlBsY0FuZE5tPgogICAgICAgICAgICAgICAgPGNjdDpFbnZscD4KICAgICAgICAgICAgICAgICAgICA8Y2N0OklkPjIzOTgyMzk4PC9jY3Q6SWQ+CiAgICAgICAgICAgICAgICA8L2NjdDpFbnZscD4KICAgICAgICAgICAgPC9jY3Q6U3BsbXRyeURhdGE+CiAgICAgICAgPC9jY3Q6Q2R0VHJmVHhJbmY+CiAgICA8L0ZJVG9GSUNzdG1yQ2R0VHJmPgo8L01lc3NhZ2U+\"\n}"
										},
										"url": {
											"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
											"host": [
												"{{participant1-send-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "7.Receiving a DO payment from an OFI",
							"item": [
								{
									"name": "0. query participants get receive account",
									"item": [
										{
											"name": "/client/participants",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?country_code={{participant2_country_code}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants"
													],
													"query": [
														{
															"key": "country_code",
															"value": "{{participant2_country_code}}"
														},
														{
															"key": "asset_code",
															"value": "{{participant2-asset}}",
															"disabled": true
														},
														{
															"key": "issuer_id",
															"value": "{{participant2_id}}",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1. receive payment from OFI",
									"item": [
										{
											"name": "/transactions/reply",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message_type\": \"iso20022:ibwf.001.001.01\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIAogICB4bWxuczpmY3I9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDppYndmLjAwMS4wMDEuMDEiIAogICB4bWxuczpoZWFkPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aGVhZC4wMDEuMDAxLjAxIj4KICAgPEFwcEhkcj4KICAgICAgPGhlYWQ6RnI+CiAgICAgICAgIDxoZWFkOkZJSWQ+CiAgICAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxoZWFkOkJJQ0ZJPklCTUlCTVFBMDAyPC9oZWFkOkJJQ0ZJPgogICAgICAgICAgICAgICA8aGVhZDpPdGhyPgogICAgICAgICAgICAgICAgICA8aGVhZDpJZD5wYXJ0aWNpcGFudDI8L2hlYWQ6SWQ+CiAgICAgICAgICAgICAgIDwvaGVhZDpPdGhyPgogICAgICAgICAgICA8L2hlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgPC9oZWFkOkZJSWQ+CiAgICAgIDwvaGVhZDpGcj4KICAgICAgPGhlYWQ6VG8+CiAgICAgICAgIDxoZWFkOkZJSWQ+CiAgICAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxoZWFkOkJJQ0ZJPldPUkxEV0lSRTAwPC9oZWFkOkJJQ0ZJPgogICAgICAgICAgICAgICA8aGVhZDpPdGhyPgogICAgICAgICAgICAgICAgICA8aGVhZDpJZD5XVzwvaGVhZDpJZD4KICAgICAgICAgICAgICAgPC9oZWFkOk90aHI+CiAgICAgICAgICAgIDwvaGVhZDpGaW5JbnN0bklkPgogICAgICAgICA8L2hlYWQ6RklJZD4KICAgICAgPC9oZWFkOlRvPgogICAgICA8aGVhZDpCaXpNc2dJZHI+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAyNTAxMTA0NzY5NTI8L2hlYWQ6Qml6TXNnSWRyPgogICAgICA8aGVhZDpNc2dEZWZJZHI+aWJ3Zi4wMDEuMDAxLjAxPC9oZWFkOk1zZ0RlZklkcj4KICAgICAgPGhlYWQ6Q3JlRHQ+MjAxOS0wNy0xN1QyMzoxOTo0MFo8L2hlYWQ6Q3JlRHQ+CiAgIDwvQXBwSGRyPgogICA8RmVkQ29tcFJlcz4KICAgICAgPGZjcjpHcnBIZHI+CiAgICAgICAgIDxmY3I6TXNnSWQ+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAyNTAxMTA0NzY5NTI8L2ZjcjpNc2dJZD4KICAgICAgICAgPGZjcjpDcmVEdFRtPjIwMTktMDctMTdUMjM6MTk6NDA8L2ZjcjpDcmVEdFRtPgogICAgICAgICA8ZmNyOk5iT2ZUeHM+MTwvZmNyOk5iT2ZUeHM+CiAgICAgICAgIDxmY3I6U3R0bG1JbmY+CiAgICAgICAgICAgIDxmY3I6U3R0bG1NdGQ+V1dETzwvZmNyOlN0dGxtTXRkPgogICAgICAgICAgICA8ZmNyOlN0dGxtQWNjdD4KICAgICAgICAgICAgICAgPGZjcjpJZD4KICAgICAgICAgICAgICAgICAgPGZjcjpPdGhyPgogICAgICAgICAgICAgICAgICAgICA8ZmNyOklkPnBhcnRpY2lwYW50MjwvZmNyOklkPgogICAgICAgICAgICAgICAgICA8L2ZjcjpPdGhyPgogICAgICAgICAgICAgICA8L2ZjcjpJZD4KICAgICAgICAgICAgICAgPGZjcjpObT5pc3N1aW5nPC9mY3I6Tm0+CiAgICAgICAgICAgIDwvZmNyOlN0dGxtQWNjdD4KICAgICAgICAgPC9mY3I6U3R0bG1JbmY+CiAgICAgICAgIDxmY3I6SW5zdGdBZ3Q+CiAgICAgICAgICAgIDxmY3I6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgPGZjcjpCSUNGST5JQk1JQk1RQTAwMjwvZmNyOkJJQ0ZJPgogICAgICAgICAgICAgICA8ZmNyOk90aHI+CiAgICAgICAgICAgICAgICAgIDxmY3I6SWQ+cGFydGljaXBhbnQyPC9mY3I6SWQ+CiAgICAgICAgICAgICAgIDwvZmNyOk90aHI+CiAgICAgICAgICAgIDwvZmNyOkZpbkluc3RuSWQ+CiAgICAgICAgIDwvZmNyOkluc3RnQWd0PgogICAgICAgICA8ZmNyOkluc3RkQWd0PgogICAgICAgICAgICA8ZmNyOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxmY3I6QklDRkk+SUJNSUJNUUEwMDE8L2ZjcjpCSUNGST4KICAgICAgICAgICAgICAgPGZjcjpPdGhyPgogICAgICAgICAgICAgICAgICA8ZmNyOklkPnBhcnRpY2lwYW50MTwvZmNyOklkPgogICAgICAgICAgICAgICA8L2ZjcjpPdGhyPgogICAgICAgICAgICA8L2ZjcjpGaW5JbnN0bklkPgogICAgICAgICA8L2ZjcjpJbnN0ZEFndD4KICAgICAgPC9mY3I6R3JwSGRyPgogICAgICA8ZmNyOkZlZFJlcz4KICAgICAgICAgPGZjcjpBY2NJZD5HQ1U2UjNYVldYT0E1Mk5IN0ZFR0dTNVpZS0tKVkNKMjdPV05HMjNHSEVBR1JFQVlQQ0lFNEQyWDwvZmNyOkFjY0lkPgogICAgICAgICA8ZmNyOkZlZFN0cz5BQ1RDPC9mY3I6RmVkU3RzPgogICAgICAgICA8ZmNyOlBtdElkPgogICAgICAgICAgICA8ZmNyOkVuZFRvRW5kSWQ+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAxNTQxODcwODQzODE8L2ZjcjpFbmRUb0VuZElkPgogICAgICAgICAgICA8ZmNyOlR4SWQ+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAxNTQxODcwODQzODE8L2ZjcjpUeElkPgogICAgICAgICA8L2ZjcjpQbXRJZD4KICAgICAgPC9mY3I6RmVkUmVzPgogICAgICA8ZmNyOkNtcFJlcz4KICAgICAgICAgPGZjcjpJbmZTdHM+QUNUQzwvZmNyOkluZlN0cz4KICAgICAgICAgPGZjcjpUeG5TdHM+QUNUQzwvZmNyOlR4blN0cz4KICAgICAgICAgPGZjcjpQbXRJZD4KICAgICAgICAgICAgPGZjcjpFbmRUb0VuZElkPlNHRERPMTgwNzIwMTlJQk1JQk1RQTAwMTU0MTg3MDg0MzgxPC9mY3I6RW5kVG9FbmRJZD4KICAgICAgICAgICAgPGZjcjpUeElkPlNHRERPMTgwNzIwMTlJQk1JQk1RQTAwMTU0MTg3MDg0MzgxPC9mY3I6VHhJZD4KICAgICAgICAgPC9mY3I6UG10SWQ+CiAgICAgIDwvZmNyOkNtcFJlcz4KICAgPC9GZWRDb21wUmVzPgo8L01lc3NhZ2U+\"\n}"
												},
												"url": {
													"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
													"host": [
														"{{participant2-send-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"transactions",
														"reply"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.check RFI account balance",
									"item": [
										{
											"name": "/client/balances/accounts/{account_name} issuing",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{participant1_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.  retrieve participant1 digital obligation balance",
									"item": [
										{
											"name": "/client/balances/do",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/do?asset_code={{participant1-asset}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"do"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e532b0eb-601b-4862-9809-10735c011b45",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bc2290d7-c355-4332-b23a-d05f8942a221",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "7.Payment cancelation",
					"item": [
						{
							"name": "DO",
							"item": [
								{
									"name": "0.checking balance before cancel",
									"item": [
										{
											"name": "participant1 issued do balance",
											"item": [
												{
													"name": "/client/balances/do",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/do?asset_code={{participant1-asset}}",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"do"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant1-asset}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "participant2 issuing account DO balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing {{participant1-asset}}",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant1-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant1_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.OFI request cancel payment",
									"item": [
										{
											"name": "/transactions/send",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message_type\": \"iso20022:camt.056.001.08\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIAogICB4bWxuczpoZWFkPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aGVhZC4wMDEuMDAxLjAxIiAKICAgeG1sbnM6cG10Y3hsPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6Y2FtdC4wNTYuMDAxLjA4Ij4KICAgPEFwcEhkcj4KICAgICAgPGhlYWQ6RnI+CiAgICAgICAgIDxoZWFkOkZJSWQ+CiAgICAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxoZWFkOkJJQ0ZJPklCTUlCTVFBMDAxPC9oZWFkOkJJQ0ZJPgogICAgICAgICAgICAgICA8aGVhZDpPdGhyPgogICAgICAgICAgICAgICAgICA8aGVhZDpJZD5wYXJ0aWNpcGFudDE8L2hlYWQ6SWQ+CiAgICAgICAgICAgICAgIDwvaGVhZDpPdGhyPgogICAgICAgICAgICA8L2hlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgPC9oZWFkOkZJSWQ+CiAgICAgIDwvaGVhZDpGcj4KICAgICAgPGhlYWQ6VG8+CiAgICAgICAgIDxoZWFkOkZJSWQ+CiAgICAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxoZWFkOkJJQ0ZJPldPUkxEV0lSRTAwPC9oZWFkOkJJQ0ZJPgogICAgICAgICAgICAgICA8aGVhZDpPdGhyPgogICAgICAgICAgICAgICAgICA8aGVhZDpJZD5XVzwvaGVhZDpJZD4KICAgICAgICAgICAgICAgPC9oZWFkOk90aHI+CiAgICAgICAgICAgIDwvaGVhZDpGaW5JbnN0bklkPgogICAgICAgICA8L2hlYWQ6RklJZD4KICAgICAgPC9oZWFkOlRvPgogICAgICA8aGVhZDpCaXpNc2dJZHI+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAxMjgxODgzMjc2NzA8L2hlYWQ6Qml6TXNnSWRyPgogICAgICA8aGVhZDpNc2dEZWZJZHI+Y2FtdC4wNTYuMDAxLjA4PC9oZWFkOk1zZ0RlZklkcj4KICAgICAgPGhlYWQ6Q3JlRHQ+MjAxOS0wNy0xN1QyMzozMjoyMVo8L2hlYWQ6Q3JlRHQ+CiAgIDwvQXBwSGRyPgogICA8RklUb0ZJUG10Q3hsUmVxPgogICAgICA8cG10Y3hsOkFzc2dubXQ+CiAgICAgICAgIDxwbXRjeGw6SWQ+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAxMjU2NTM4NDgzOTY8L3BtdGN4bDpJZD4KICAgICAgICAgPHBtdGN4bDpBc3NnbnI+CiAgICAgICAgICAgIDxwbXRjeGw6QWd0PgogICAgICAgICAgICAgICA8cG10Y3hsOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgIDxwbXRjeGw6QklDRkk+SUJNSUJNUUEwMDE8L3BtdGN4bDpCSUNGST4KICAgICAgICAgICAgICAgICAgPHBtdGN4bDpPdGhyPgogICAgICAgICAgICAgICAgICAgICA8cG10Y3hsOklkPnBhcnRpY2lwYW50MTwvcG10Y3hsOklkPgogICAgICAgICAgICAgICAgICA8L3BtdGN4bDpPdGhyPgogICAgICAgICAgICAgICA8L3BtdGN4bDpGaW5JbnN0bklkPgogICAgICAgICAgICA8L3BtdGN4bDpBZ3Q+CiAgICAgICAgIDwvcG10Y3hsOkFzc2ducj4KICAgICAgICAgPHBtdGN4bDpBc3NnbmU+CiAgICAgICAgICAgIDxwbXRjeGw6QWd0PgogICAgICAgICAgICAgICA8cG10Y3hsOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgIDxwbXRjeGw6QklDRkk+SUJNSUJNUUEwMDI8L3BtdGN4bDpCSUNGST4KICAgICAgICAgICAgICAgICAgPHBtdGN4bDpPdGhyPgogICAgICAgICAgICAgICAgICAgICA8cG10Y3hsOklkPnBhcnRpY2lwYW50MjwvcG10Y3hsOklkPgogICAgICAgICAgICAgICAgICA8L3BtdGN4bDpPdGhyPgogICAgICAgICAgICAgICA8L3BtdGN4bDpGaW5JbnN0bklkPgogICAgICAgICAgICA8L3BtdGN4bDpBZ3Q+CiAgICAgICAgIDwvcG10Y3hsOkFzc2duZT4KICAgICAgICAgPHBtdGN4bDpDcmVEdFRtPjIwMTktMDctMTdUMjM6MzI6MjE8L3BtdGN4bDpDcmVEdFRtPgogICAgICA8L3BtdGN4bDpBc3Nnbm10PgogICAgICA8cG10Y3hsOkNhc2U+CiAgICAgICAgIDxwbXRjeGw6SWQ+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAxMjU2NTM4NDgzOTY8L3BtdGN4bDpJZD4KICAgICAgICAgPHBtdGN4bDpDcmV0cj4KICAgICAgICAgICAgPHBtdGN4bDpBZ3Q+CiAgICAgICAgICAgICAgIDxwbXRjeGw6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgPHBtdGN4bDpCSUNGST5JQk1JQk1RQTAwMTwvcG10Y3hsOkJJQ0ZJPgogICAgICAgICAgICAgICAgICA8cG10Y3hsOk90aHI+CiAgICAgICAgICAgICAgICAgICAgIDxwbXRjeGw6SWQ+cGFydGljaXBhbnQxPC9wbXRjeGw6SWQ+CiAgICAgICAgICAgICAgICAgIDwvcG10Y3hsOk90aHI+CiAgICAgICAgICAgICAgIDwvcG10Y3hsOkZpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvcG10Y3hsOkFndD4KICAgICAgICAgPC9wbXRjeGw6Q3JldHI+CiAgICAgIDwvcG10Y3hsOkNhc2U+CiAgICAgIDxwbXRjeGw6VW5kcmx5Zz4KICAgICAgICAgPHBtdGN4bDpPcmdubEdycEluZkFuZEN4bD4KICAgICAgICAgICAgPHBtdGN4bDpPcmdubE1zZ0lkPlNHRERPMTgwNzIwMTlJQk1JQk1RQTAwMTI4MTg4MzI3NjcwPC9wbXRjeGw6T3JnbmxNc2dJZD4KICAgICAgICAgICAgPHBtdGN4bDpPcmdubE1zZ05tSWQ+cGFjcy4wMDguMDAxLjA3PC9wbXRjeGw6T3JnbmxNc2dObUlkPgogICAgICAgICA8L3BtdGN4bDpPcmdubEdycEluZkFuZEN4bD4KICAgICAgICAgPHBtdGN4bDpUeEluZj4KICAgICAgICAgICAgPHBtdGN4bDpPcmdubEluc3RySWQ+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAxMjgxODgzMjc2NzA8L3BtdGN4bDpPcmdubEluc3RySWQ+CiAgICAgICAgICAgIDxwbXRjeGw6T3JnbmxFbmRUb0VuZElkPlNHRERPMTgwNzIwMTlJQk1JQk1RQTAwMTI4MTg4MzI3NjcwPC9wbXRjeGw6T3JnbmxFbmRUb0VuZElkPgogICAgICAgICAgICA8cG10Y3hsOk9yZ25sVHhJZD5TR0RETzE4MDcyMDE5SUJNSUJNUUEwMDEyODE4ODMyNzY3MDwvcG10Y3hsOk9yZ25sVHhJZD4KICAgICAgICAgICAgPHBtdGN4bDpPcmdubEludHJCa1N0dGxtQW10IENjeT0iU0dERE8iPjA8L3BtdGN4bDpPcmdubEludHJCa1N0dGxtQW10PgogICAgICAgICAgICA8cG10Y3hsOk9yZ25sSW50ckJrU3R0bG1EdD4yMDE5LTA3LTE4PC9wbXRjeGw6T3JnbmxJbnRyQmtTdHRsbUR0PgogICAgICAgICAgICA8cG10Y3hsOkN4bFJzbkluZj4KICAgICAgICAgICAgICAgPHBtdGN4bDpSc24+CiAgICAgICAgICAgICAgICAgIDxwbXRjeGw6UHJ0cnk+QmVuZWZpY2lhcnkgaW5mb3JtYXRpb24gaXMgd3Jvbmc8L3BtdGN4bDpQcnRyeT4KICAgICAgICAgICAgICAgPC9wbXRjeGw6UnNuPgogICAgICAgICAgICA8L3BtdGN4bDpDeGxSc25JbmY+CiAgICAgICAgICAgIDxwbXRjeGw6T3JnbmxUeFJlZj4KICAgICAgICAgICAgICAgPHBtdGN4bDpTdHRsbUluZj4KICAgICAgICAgICAgICAgICAgPHBtdGN4bDpTdHRsbU10ZD5XV0RPPC9wbXRjeGw6U3R0bG1NdGQ+CiAgICAgICAgICAgICAgICAgIDxwbXRjeGw6U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgICA8cG10Y3hsOklkPgogICAgICAgICAgICAgICAgICAgICAgICA8cG10Y3hsOk90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwbXRjeGw6SWQ+cGFydGljaXBhbnQxPC9wbXRjeGw6SWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcG10Y3hsOk90aHI+CiAgICAgICAgICAgICAgICAgICAgIDwvcG10Y3hsOklkPgogICAgICAgICAgICAgICAgICAgICA8cG10Y3hsOk5tPmlzc3Vpbmc8L3BtdGN4bDpObT4KICAgICAgICAgICAgICAgICAgPC9wbXRjeGw6U3R0bG1BY2N0PgogICAgICAgICAgICAgICA8L3BtdGN4bDpTdHRsbUluZj4KICAgICAgICAgICAgPC9wbXRjeGw6T3JnbmxUeFJlZj4KICAgICAgICAgPC9wbXRjeGw6VHhJbmY+CiAgICAgIDwvcG10Y3hsOlVuZHJseWc+CiAgIDwvRklUb0ZJUG10Q3hsUmVxPgo8L01lc3NhZ2U+\"\n}"
												},
												"url": {
													"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
													"host": [
														"{{participant1-send-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"transactions",
														"send"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.a RFI agree cancel payment",
									"item": [
										{
											"name": "/transactions/reply",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message_type\": \"iso20022:pacs.004.001.09\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIAogICB4bWxuczpoZWFkPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aGVhZC4wMDEuMDAxLjAxIiAKICAgeG1sbnM6cHI9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpwYWNzLjAwNC4wMDEuMDkiPgogICA8QXBwSGRyPgogICAgICA8aGVhZDpGcj4KICAgICAgICAgPGhlYWQ6RklJZD4KICAgICAgICAgICAgPGhlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgPGhlYWQ6QklDRkk+SUJNSUJNUUEwMDI8L2hlYWQ6QklDRkk+CiAgICAgICAgICAgICAgIDxoZWFkOk90aHI+CiAgICAgICAgICAgICAgICAgIDxoZWFkOklkPnBhcnRpY2lwYW50MjwvaGVhZDpJZD4KICAgICAgICAgICAgICAgPC9oZWFkOk90aHI+CiAgICAgICAgICAgIDwvaGVhZDpGaW5JbnN0bklkPgogICAgICAgICA8L2hlYWQ6RklJZD4KICAgICAgPC9oZWFkOkZyPgogICAgICA8aGVhZDpUbz4KICAgICAgICAgPGhlYWQ6RklJZD4KICAgICAgICAgICAgPGhlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgPGhlYWQ6QklDRkk+V09STERXSVJFMDA8L2hlYWQ6QklDRkk+CiAgICAgICAgICAgICAgIDxoZWFkOk90aHI+CiAgICAgICAgICAgICAgICAgIDxoZWFkOklkPldXPC9oZWFkOklkPgogICAgICAgICAgICAgICA8L2hlYWQ6T3Rocj4KICAgICAgICAgICAgPC9oZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgIDwvaGVhZDpGSUlkPgogICAgICA8L2hlYWQ6VG8+CiAgICAgIDxoZWFkOkJpek1zZ0lkcj5TR0RETzE4MDcyMDE5SUJNSUJNUUEwMDE1NDE4NzA4NDM4MTwvaGVhZDpCaXpNc2dJZHI+CiAgICAgIDxoZWFkOk1zZ0RlZklkcj5wYWNzLjAwNC4wMDEuMDk8L2hlYWQ6TXNnRGVmSWRyPgogICAgICA8aGVhZDpDcmVEdD4yMDE5LTA3LTE2VDExOjI3OjE4WjwvaGVhZDpDcmVEdD4KICAgPC9BcHBIZHI+CiAgIDxQbXRSdHI+CiAgICAgIDxwcjpHcnBIZHI+CiAgICAgICAgIDxwcjpNc2dJZD5TR0RETzE2MDcyMDE5SUJNSUJNUUEwMDE3NzI4ODQwNjU4NTwvcHI6TXNnSWQ+CiAgICAgICAgIDxwcjpDcmVEdFRtPjIwMTktMDctMTZUMTE6Mjc6MTg8L3ByOkNyZUR0VG0+CiAgICAgICAgIDxwcjpOYk9mVHhzPjE8L3ByOk5iT2ZUeHM+CiAgICAgICAgIDxwcjpTdHRsbUluZj4KICAgICAgICAgICAgPHByOlN0dGxtTXRkPldXRE88L3ByOlN0dGxtTXRkPgogICAgICAgICAgICA8cHI6U3R0bG1BY2N0PgogICAgICAgICAgICAgICA8cHI6SWQ+CiAgICAgICAgICAgICAgICAgIDxwcjpPdGhyPgogICAgICAgICAgICAgICAgICAgICA8cHI6SWQ+cGFydGljaXBhbnQyPC9wcjpJZD4KICAgICAgICAgICAgICAgICAgPC9wcjpPdGhyPgogICAgICAgICAgICAgICA8L3ByOklkPgogICAgICAgICAgICAgICA8cHI6Tm0+aXNzdWluZzwvcHI6Tm0+CiAgICAgICAgICAgIDwvcHI6U3R0bG1BY2N0PgogICAgICAgICA8L3ByOlN0dGxtSW5mPgogICAgICAgICA8cHI6SW5zdGdBZ3Q+CiAgICAgICAgICAgIDxwcjpGaW5JbnN0bklkPgogICAgICAgICAgICAgICA8cHI6QklDRkk+SUJNSUJNUUEwMDI8L3ByOkJJQ0ZJPgogICAgICAgICAgICAgICA8cHI6T3Rocj4KICAgICAgICAgICAgICAgICAgPHByOklkPnBhcnRpY2lwYW50MjwvcHI6SWQ+CiAgICAgICAgICAgICAgIDwvcHI6T3Rocj4KICAgICAgICAgICAgPC9wcjpGaW5JbnN0bklkPgogICAgICAgICA8L3ByOkluc3RnQWd0PgogICAgICAgICA8cHI6SW5zdGRBZ3Q+CiAgICAgICAgICAgIDxwcjpGaW5JbnN0bklkPgogICAgICAgICAgICAgICA8cHI6QklDRkk+SUJNSUJNUUEwMDE8L3ByOkJJQ0ZJPgogICAgICAgICAgICAgICA8cHI6T3Rocj4KICAgICAgICAgICAgICAgICAgPHByOklkPnBhcnRpY2lwYW50MTwvcHI6SWQ+CiAgICAgICAgICAgICAgIDwvcHI6T3Rocj4KICAgICAgICAgICAgPC9wcjpGaW5JbnN0bklkPgogICAgICAgICA8L3ByOkluc3RkQWd0PgogICAgICA8L3ByOkdycEhkcj4KICAgICAgPHByOk9yZ25sR3JwSW5mPgogICAgICAgICA8cHI6T3JnbmxNc2dJZD5TR0RETzE4MDcyMDE5SUJNSUJNUUEwMDE1NDE4NzA4NDM4MTwvcHI6T3JnbmxNc2dJZD4KICAgICAgICAgPHByOk9yZ25sTXNnTm1JZD5wYWNzLjAwOC4wMDEuMDc8L3ByOk9yZ25sTXNnTm1JZD4KICAgICAgICAgPHByOk9yZ25sQ3JlRHRUbT4yMDE5LTA3LTE2VDExOjI1OjU1PC9wcjpPcmdubENyZUR0VG0+CiAgICAgIDwvcHI6T3JnbmxHcnBJbmY+CiAgICAgIDxwcjpUeEluZj4KICAgICAgICAgPHByOlJ0cklkPlNHRERPMTYwNzIwMTlJQk1JQk1RQTAwMTc3Mjg4NDA2NTg1PC9wcjpSdHJJZD4KICAgICAgICAgPHByOk9yZ25sSW5zdHJJZD5TR0RETzE4MDcyMDE5SUJNSUJNUUEwMDE1NDE4NzA4NDM4MTwvcHI6T3JnbmxJbnN0cklkPgogICAgICAgICA8cHI6T3JnbmxFbmRUb0VuZElkPlNHRERPMTgwNzIwMTlJQk1JQk1RQTAwMTU0MTg3MDg0MzgxPC9wcjpPcmdubEVuZFRvRW5kSWQ+CiAgICAgICAgIDxwcjpPcmdubFR4SWQ+U0dERE8xODA3MjAxOUlCTUlCTVFBMDAxNTQxODcwODQzODE8L3ByOk9yZ25sVHhJZD4KICAgICAgICAgPHByOk9yZ25sSW50ckJrU3R0bG1BbXQgQ2N5PSJTR0RETyI+MTAwLjU8L3ByOk9yZ25sSW50ckJrU3R0bG1BbXQ+CiAgICAgICAgIDxwcjpSdHJkSW50ckJrU3R0bG1BbXQgQ2N5PSJTR0RETyI+MTwvcHI6UnRyZEludHJCa1N0dGxtQW10PgogICAgICAgICA8cHI6SW50ckJrU3R0bG1EdD4yMDE5LTA3LTE2PC9wcjpJbnRyQmtTdHRsbUR0PgogICAgICAgICA8cHI6UnRyZEluc3RkQW10IENjeT0iU0dERE8iPjE8L3ByOlJ0cmRJbnN0ZEFtdD4KICAgICAgICAgPHByOkNocmdCcj5DUkVEPC9wcjpDaHJnQnI+CiAgICAgICAgIDxwcjpDaHJnc0luZj4KICAgICAgICAgICAgPHByOkFtdCBDY3k9IlNHRERPIj4wLjU8L3ByOkFtdD4KICAgICAgICAgICAgPHByOkFndD4KICAgICAgICAgICAgICAgPHByOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgIDxwcjpCSUNGST5JQk1JQk1RQTAwMjwvcHI6QklDRkk+CiAgICAgICAgICAgICAgICAgIDxwcjpPdGhyPgogICAgICAgICAgICAgICAgICAgICA8cHI6SWQ+cGFydGljaXBhbnQyPC9wcjpJZD4KICAgICAgICAgICAgICAgICAgPC9wcjpPdGhyPgogICAgICAgICAgICAgICA8L3ByOkZpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvcHI6QWd0PgogICAgICAgICA8L3ByOkNocmdzSW5mPgogICAgICAgICA8cHI6UnRyUnNuSW5mPgogICAgICAgICAgICA8cHI6T3JndHI+CiAgICAgICAgICAgICAgIDxwcjpObT5BQkM8L3ByOk5tPgogICAgICAgICAgICA8L3ByOk9yZ3RyPgogICAgICAgICAgICA8cHI6UnNuPgogICAgICAgICAgICAgICA8cHI6UHJ0cnk+QmVuZWZpY2lhcnkgaW5mb3JtYXRpb24gaXMgd3Jvbmc8L3ByOlBydHJ5PgogICAgICAgICAgICA8L3ByOlJzbj4KICAgICAgICAgICAgPHByOkFkZHRsSW5mPlJFVFVSTiBBRlRFUiBBQ0NFUFRFRCBQQVlNRU5UIENBTkNFTExBVElPTiBSRVFVRVNUPC9wcjpBZGR0bEluZj4KICAgICAgICAgPC9wcjpSdHJSc25JbmY+CiAgICAgICAgIDxwcjpPcmdubFR4UmVmPgogICAgICAgICAgICA8cHI6U3R0bG1JbmY+CiAgICAgICAgICAgICAgIDxwcjpTdHRsbU10ZD5XV0RPPC9wcjpTdHRsbU10ZD4KICAgICAgICAgICAgICAgPHByOlN0dGxtQWNjdD4KICAgICAgICAgICAgICAgICAgPHByOklkPgogICAgICAgICAgICAgICAgICAgICA8cHI6T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPHByOklkPnBhcnRpY2lwYW50MTwvcHI6SWQ+CiAgICAgICAgICAgICAgICAgICAgIDwvcHI6T3Rocj4KICAgICAgICAgICAgICAgICAgPC9wcjpJZD4KICAgICAgICAgICAgICAgICAgPHByOk5tPmlzc3Vpbmc8L3ByOk5tPgogICAgICAgICAgICAgICA8L3ByOlN0dGxtQWNjdD4KICAgICAgICAgICAgPC9wcjpTdHRsbUluZj4KICAgICAgICAgICAgPHByOlBtdFRwSW5mPgogICAgICAgICAgICAgICA8cHI6U3ZjTHZsPgogICAgICAgICAgICAgICAgICA8cHI6UHJ0cnk+cGFydGljaXBhbnQxPC9wcjpQcnRyeT4KICAgICAgICAgICAgICAgPC9wcjpTdmNMdmw+CiAgICAgICAgICAgIDwvcHI6UG10VHBJbmY+CiAgICAgICAgIDwvcHI6T3JnbmxUeFJlZj4KICAgICAgPC9wcjpUeEluZj4KICAgPC9QbXRSdHI+CjwvTWVzc2FnZT4=\"\n}"
												},
												"url": {
													"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
													"host": [
														"{{participant2-send-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"transactions",
														"reply"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.b RFI reject cancel payment",
									"item": [
										{
											"name": "/transactions/reply",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message_type\": \"iso20022:pacs.004.001.09\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIAogICB4bWxuczpoZWFkPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aGVhZC4wMDEuMDAxLjAxIiAKICAgeG1sbnM6cHI9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpwYWNzLjAwNC4wMDEuMDkiPgogICA8QXBwSGRyPgogICAgICA8aGVhZDpGcj4KICAgICAgICAgPGhlYWQ6RklJZD4KICAgICAgICAgICAgPGhlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgPGhlYWQ6QklDRkk+SUJNSUJNUUEwMDI8L2hlYWQ6QklDRkk+CiAgICAgICAgICAgICAgIDxoZWFkOk90aHI+CiAgICAgICAgICAgICAgICAgIDxoZWFkOklkPnBhcnRpY2lwYW50MjwvaGVhZDpJZD4KICAgICAgICAgICAgICAgPC9oZWFkOk90aHI+CiAgICAgICAgICAgIDwvaGVhZDpGaW5JbnN0bklkPgogICAgICAgICA8L2hlYWQ6RklJZD4KICAgICAgPC9oZWFkOkZyPgogICAgICA8aGVhZDpUbz4KICAgICAgICAgPGhlYWQ6RklJZD4KICAgICAgICAgICAgPGhlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgPGhlYWQ6QklDRkk+V09STERXSVJFMDA8L2hlYWQ6QklDRkk+CiAgICAgICAgICAgICAgIDxoZWFkOk90aHI+CiAgICAgICAgICAgICAgICAgIDxoZWFkOklkPldXPC9oZWFkOklkPgogICAgICAgICAgICAgICA8L2hlYWQ6T3Rocj4KICAgICAgICAgICAgPC9oZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgIDwvaGVhZDpGSUlkPgogICAgICA8L2hlYWQ6VG8+CiAgICAgIDxoZWFkOkJpek1zZ0lkcj5TR0RETzE2MDcyMDE5SUJNSUJNUUEwMDEyNTQ5NzU3NTUzNzwvaGVhZDpCaXpNc2dJZHI+CiAgICAgIDxoZWFkOk1zZ0RlZklkcj5TR0RETzE2MDcyMDE5SUJNSUJNUUEwMDEyNTQ5NzU3NTUzNzwvaGVhZDpNc2dEZWZJZHI+CiAgICAgIDxoZWFkOkNyZUR0PjIwMTktMDctMTZUMTE6Mjc6MThaPC9oZWFkOkNyZUR0PgogICA8L0FwcEhkcj4KICAgPFBtdFJ0cj4KICAgICAgPHByOkdycEhkcj4KICAgICAgICAgPHByOk1zZ0lkPlNHRERPMTYwNzIwMTlJQk1JQk1RQTAwMTc3Mjg4NDA2NTg1PC9wcjpNc2dJZD4KICAgICAgICAgPHByOkNyZUR0VG0+MjAxOS0wNy0xNlQxMToyNzoxODwvcHI6Q3JlRHRUbT4KICAgICAgICAgPHByOk5iT2ZUeHM+MTwvcHI6TmJPZlR4cz4KICAgICAgICAgPHByOlN0dGxtSW5mPgogICAgICAgICAgICA8cHI6U3R0bG1NdGQ+V1dETzwvcHI6U3R0bG1NdGQ+CiAgICAgICAgICAgIDxwcjpTdHRsbUFjY3Q+CiAgICAgICAgICAgICAgIDxwcjpJZD4KICAgICAgICAgICAgICAgICAgPHByOk90aHI+CiAgICAgICAgICAgICAgICAgICAgIDxwcjpJZD5wYXJ0aWNpcGFudDI8L3ByOklkPgogICAgICAgICAgICAgICAgICA8L3ByOk90aHI+CiAgICAgICAgICAgICAgIDwvcHI6SWQ+CiAgICAgICAgICAgICAgIDxwcjpObT5pc3N1aW5nPC9wcjpObT4KICAgICAgICAgICAgPC9wcjpTdHRsbUFjY3Q+CiAgICAgICAgIDwvcHI6U3R0bG1JbmY+CiAgICAgICAgIDxwcjpJbnN0Z0FndD4KICAgICAgICAgICAgPHByOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxwcjpCSUNGST5JQk1JQk1RQTAwMjwvcHI6QklDRkk+CiAgICAgICAgICAgICAgIDxwcjpPdGhyPgogICAgICAgICAgICAgICAgICA8cHI6SWQ+cGFydGljaXBhbnQyPC9wcjpJZD4KICAgICAgICAgICAgICAgPC9wcjpPdGhyPgogICAgICAgICAgICA8L3ByOkZpbkluc3RuSWQ+CiAgICAgICAgIDwvcHI6SW5zdGdBZ3Q+CiAgICAgICAgIDxwcjpJbnN0ZEFndD4KICAgICAgICAgICAgPHByOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxwcjpCSUNGST5JQk1JQk1RQTAwMTwvcHI6QklDRkk+CiAgICAgICAgICAgICAgIDxwcjpPdGhyPgogICAgICAgICAgICAgICAgICA8cHI6SWQ+cGFydGljaXBhbnQxPC9wcjpJZD4KICAgICAgICAgICAgICAgPC9wcjpPdGhyPgogICAgICAgICAgICA8L3ByOkZpbkluc3RuSWQ+CiAgICAgICAgIDwvcHI6SW5zdGRBZ3Q+CiAgICAgIDwvcHI6R3JwSGRyPgogICAgICA8cHI6T3JnbmxHcnBJbmY+CiAgICAgICAgIDxwcjpPcmdubE1zZ0lkPlNHRERPMTYwNzIwMTlJQk1JQk1RQTAwMTI1NDk3NTc1NTM3PC9wcjpPcmdubE1zZ0lkPgogICAgICAgICA8cHI6T3JnbmxNc2dObUlkPnBhY3MuMDA4LjAwMS4wNzwvcHI6T3JnbmxNc2dObUlkPgogICAgICAgICA8cHI6T3JnbmxDcmVEdFRtPjIwMTktMDctMTZUMTE6MjU6NTU8L3ByOk9yZ25sQ3JlRHRUbT4KICAgICAgPC9wcjpPcmdubEdycEluZj4KICAgICAgPHByOlR4SW5mPgogICAgICAgICA8cHI6UnRySWQ+U0dERE8xNjA3MjAxOUlCTUlCTVFBMDAxNzcyODg0MDY1ODU8L3ByOlJ0cklkPgogICAgICAgICA8cHI6T3JnbmxJbnN0cklkPlNHRERPMTYwNzIwMTlJQk1JQk1RQTAwMTI1NDk3NTc1NTM3PC9wcjpPcmdubEluc3RySWQ+CiAgICAgICAgIDxwcjpPcmdubEVuZFRvRW5kSWQ+U0dERE8xNjA3MjAxOUlCTUlCTVFBMDAxMjU0OTc1NzU1Mzc8L3ByOk9yZ25sRW5kVG9FbmRJZD4KICAgICAgICAgPHByOk9yZ25sVHhJZD5TR0RETzE2MDcyMDE5SUJNSUJNUUEwMDEyNTQ5NzU3NTUzNzwvcHI6T3JnbmxUeElkPgogICAgICAgICA8cHI6T3JnbmxJbnRyQmtTdHRsbUFtdCBDY3k9IlNHRERPIj4xMDAuNTwvcHI6T3JnbmxJbnRyQmtTdHRsbUFtdD4KICAgICAgICAgPHByOlJ0cmRJbnRyQmtTdHRsbUFtdCBDY3k9IlNHRERPIj4xPC9wcjpSdHJkSW50ckJrU3R0bG1BbXQ+CiAgICAgICAgIDxwcjpJbnRyQmtTdHRsbUR0PjIwMTktMDctMTY8L3ByOkludHJCa1N0dGxtRHQ+CiAgICAgICAgIDxwcjpSdHJkSW5zdGRBbXQgQ2N5PSJTR0RETyI+MTwvcHI6UnRyZEluc3RkQW10PgogICAgICAgICA8cHI6Q2hyZ0JyPkNSRUQ8L3ByOkNocmdCcj4KICAgICAgICAgPHByOkNocmdzSW5mPgogICAgICAgICAgICA8cHI6QW10IENjeT0iU0dERE8iPjAuNTwvcHI6QW10PgogICAgICAgICAgICA8cHI6QWd0PgogICAgICAgICAgICAgICA8cHI6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgPHByOkJJQ0ZJPklCTUlCTVFBMDAyPC9wcjpCSUNGST4KICAgICAgICAgICAgICAgICAgPHByOk90aHI+CiAgICAgICAgICAgICAgICAgICAgIDxwcjpJZD5wYXJ0aWNpcGFudDI8L3ByOklkPgogICAgICAgICAgICAgICAgICA8L3ByOk90aHI+CiAgICAgICAgICAgICAgIDwvcHI6RmluSW5zdG5JZD4KICAgICAgICAgICAgPC9wcjpBZ3Q+CiAgICAgICAgIDwvcHI6Q2hyZ3NJbmY+CiAgICAgICAgIDxwcjpSdHJSc25JbmY+CiAgICAgICAgICAgIDxwcjpPcmd0cj4KICAgICAgICAgICAgICAgPHByOk5tPkFCQzwvcHI6Tm0+CiAgICAgICAgICAgIDwvcHI6T3JndHI+CiAgICAgICAgICAgIDxwcjpSc24+CiAgICAgICAgICAgICAgIDxwcjpQcnRyeT5CZW5lZmljaWFyeSBpbmZvcm1hdGlvbiBpcyB3cm9uZzwvcHI6UHJ0cnk+CiAgICAgICAgICAgIDwvcHI6UnNuPgogICAgICAgICAgICA8cHI6QWRkdGxJbmY+UkVUVVJOIEFGVEVSIEFDQ0VQVEVEIFBBWU1FTlQgQ0FOQ0VMTEFUSU9OIFJFUVVFU1Q8L3ByOkFkZHRsSW5mPgogICAgICAgICA8L3ByOlJ0clJzbkluZj4KICAgICAgICAgPHByOk9yZ25sVHhSZWY+CiAgICAgICAgICAgIDxwcjpTdHRsbUluZj4KICAgICAgICAgICAgICAgPHByOlN0dGxtTXRkPldXRE88L3ByOlN0dGxtTXRkPgogICAgICAgICAgICAgICA8cHI6U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICA8cHI6SWQ+CiAgICAgICAgICAgICAgICAgICAgIDxwcjpPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8cHI6SWQ+cGFydGljaXBhbnQxPC9wcjpJZD4KICAgICAgICAgICAgICAgICAgICAgPC9wcjpPdGhyPgogICAgICAgICAgICAgICAgICA8L3ByOklkPgogICAgICAgICAgICAgICAgICA8cHI6Tm0+aXNzdWluZzwvcHI6Tm0+CiAgICAgICAgICAgICAgIDwvcHI6U3R0bG1BY2N0PgogICAgICAgICAgICA8L3ByOlN0dGxtSW5mPgogICAgICAgICAgICA8cHI6UG10VHBJbmY+CiAgICAgICAgICAgICAgIDxwcjpTdmNMdmw+CiAgICAgICAgICAgICAgICAgIDxwcjpQcnRyeT5wYXJ0aWNpcGFudDE8L3ByOlBydHJ5PgogICAgICAgICAgICAgICA8L3ByOlN2Y0x2bD4KICAgICAgICAgICAgPC9wcjpQbXRUcEluZj4KICAgICAgICAgPC9wcjpPcmdubFR4UmVmPgogICAgICA8L3ByOlR4SW5mPgogICA8L1BtdFJ0cj4KPC9NZXNzYWdlPg==\"\n}"
												},
												"url": {
													"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
													"host": [
														"{{participant2-send-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"transactions",
														"reply"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "0.checking balance aft cancel",
									"item": [
										{
											"name": "participant1 issued do balance",
											"item": [
												{
													"name": "/client/balances/do",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/do?asset_code={{participant1-asset}}",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"do"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant1-asset}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "participant2 issuing account DO balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing {{participant1-asset}}",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant1-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant1_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "8.Exchange",
					"item": [
						{
							"name": "1.Exchange DO from participant1 to participant2",
							"item": [
								{
									"name": "1.OFI(participant1) request quote",
									"item": [
										{
											"name": "/client/quotes/request",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
															"setTimeout(1000)",
															"postman.setNextRequest('OFI get quotes1')"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"time_expire\": 1644775314,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{participant2-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant2_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.OFI(participant1) get quote from request_id",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.0 RFI query quotes from quote_id",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.RFI(participant2) callback receive quote request, agree to do exchange, sign to exchange transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
														"exec": [
															"",
															"let obj = {",
															"    \"account_name_receive\": \"issuing\",",
															"    \"account_name_send\": \"issuing\",",
															"    \"exchange_rate\": 0.6046602,",
															"    \"limit_max\": 1000,",
															"    \"quote_id\": pm.environment.get(\"quote_id\"),",
															"    \"quote_request\": {",
															"        \"time_expire\": 1644516034,",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
															"        ",
															"    },",
															"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
															"    \"time_expire\": 1644516034,",
															"    \"time_start\": 1544516034",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
															"pm.globals.set(\"variable_key\", \"variable_value\");",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant2-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "4.RFI(participant2) post envelope",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "5.OFI(participant1) get quotes check RFI already pose signed envelope",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(2);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "6.OFI(participant1) callback receive RFI response, sign transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															"let obj = {",
															"   \"account_name_receive\":\"issuing\",",
															"   \"account_name_send\":\"issuing\",",
															"   \"amount\":1,",
															"   \"quote\":   {",
															"      \"account_name_receive\":\"issuing\",",
															"      \"account_name_send\":\"issuing\",",
															"      \"exchange_rate\":0.6046602,",
															"      \"limit_max\":1000,",
															"      \"quote_id\":pm.environment.get(\"quote_id\"),",
															"      \"quote_request\": {",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"        \"time_expire\": 1644516034",
															"    },",
															"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
															"      \"time_expire\":1644516034,",
															"      \"time_start\":1544516034",
															"   }",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant1-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.OFI(participant1) sending exchange",
									"item": [
										{
											"name": "/client/exchange",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"exchange"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "8.OFI(participant1) check exchang successfull status:4",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}?",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "9.check balance",
									"item": [
										{
											"name": "1.check participant1 issuing  account balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant2-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant2_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.check participant1 issuing  account balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant1-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant1_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "1.Exchange DA from participant1 to participant2",
							"item": [
								{
									"name": "1.OFI(participant1) request quote",
									"item": [
										{
											"name": "/client/quotes/request",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
															"setTimeout(1000)",
															"postman.setNextRequest('OFI get quotes1')"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"time_expire\":1644516034,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{source_asset_code}}\",\n        \"asset_type\": \"DA\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{target_asset_code}}\",\n        \"asset_type\": \"DA\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.OFI(participant1) get quote from request_id",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.0 RFI query quotes from quote_id",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.RFI(participant2) callback receive quote request, agree to do exchange, sign to exchange transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
														"exec": [
															"",
															"let obj = {",
															"    \"account_name_receive\": \"issuing\",",
															"    \"account_name_send\": \"issuing\",",
															"    \"exchange_rate\": 0.6046602,",
															"    \"limit_max\": 1000,",
															"    \"quote_id\": pm.environment.get(\"quote_id\"),",
															"    \"quote_request\": {",
															"        \"time_expire\": 1644516034,",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
															"        ",
															"    },",
															"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
															"    \"time_expire\": 1644516034,",
															"    \"time_start\": 1544516034",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
															"pm.globals.set(\"variable_key\", \"variable_value\");",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant2-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "4.RFI(participant2) post envelope",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "5.OFI(participant1) get quotes check RFI already pose signed envelope",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(2);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "6.OFI(participant1) callback receive RFI response, sign transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															"let obj = {",
															"   \"account_name_receive\":\"issuing\",",
															"   \"account_name_send\":\"issuing\",",
															"   \"amount\":1,",
															"   \"quote\":   {",
															"      \"account_name_receive\":\"issuing\",",
															"      \"account_name_send\":\"issuing\",",
															"      \"exchange_rate\":0.6046602,",
															"      \"limit_max\":1000,",
															"      \"quote_id\":pm.environment.get(\"quote_id\"),",
															"      \"quote_request\": {",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"        \"time_expire\": 1644516034",
															"    },",
															"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
															"      \"time_expire\":1644516034,",
															"      \"time_start\":1544516034",
															"   }",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant1-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.OFI(participant1) sending exchange",
									"item": [
										{
											"name": "/client/exchange",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"exchange"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "8.OFI(participant1) check exchang successfull status:4",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}?",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "9.check balance",
									"item": [
										{
											"name": "1.check participant1 issuing  account balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant2-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant2_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.check participant1 issuing  account balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant1-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant1_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "9.Redeeming Digital Assets",
					"item": [
						{
							"name": "1. return DA",
							"item": [
								{
									"name": "/client/transactions/settle/da",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_name\": \"default\",\n    \"asset_code\":\"{{anchor-asset}}\",\n    \"anchor_id\":\"{{anchor_id}}\",\n    \"amount\":2.0,\n    \"transaction_note\":\"note\",\n    \"creditor\": {\n        \"customer\":{\n            \"account\":{\"account_number\":\"123213\",\n            \"account_type\":\"checking\",\n                \"routing_number\":\"w4345\"\n            },\n            \"name\": \"Maria\",\n           \"address\":{\n           \"building_number\": \"20681\",\n           \"country\": \"ireland\",\n           \"postal_code\": \"92811\",\n           \"street\": \"Balestier road\",\n           \"city\": \"Tonga\",\n           \"state\":\"ca\"\n           },\n           \"id\":\"123\"\n            \n        },\n        \"institution\": {\n           \"participant_id\": \"paticipant1\",\n           \"name\": \"One-ie\"\n       },\n        \"payout_point\":{\n   \"type\": \"Bank\",\n   \"name\": \"CIMB Bank\",\n   \"currencies_accepted\":[\"USD\", \"JPD\"],\n   \"routing_number\": \"123232424\",\n   \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n   \"url\": \"\",\n   \"telephone\": \"07-418 6258 / 6276\",\n   \"member_of\": [\"BankA\"],\n  \"address\":{\n           \"building_number\": \"20681\",\n           \"country\": \"ireland\",\n           \"postal_code\": \"92811\",\n           \"street\": \"Balestier road\",\n           \"city\": \"Tonga\",\n           \"state\":\"ca\"\n           },\n   \"geo\": {\n     \"latitude\": 1.8482097,\n     \"longitude\": 102.93248110000002\n   },\n   \"categories\": [\n        {\n             \"name\": \"delivery\",\n             \"options\": [\n                 {\n                   \"description\": \"Deliver PHP to home address\",\n                    \"terms\": \"Limit of 52,000 PHP\"\n\n                 },\n                 {\n                   \"description\": \"Deliver USD to home address\",\n                   \"terms\": \"Limit of 1,000 USD\"\n                 }\n             ]\n         },\n         {\n             \"name\": \"agency_pickup\",\n             \"options\": [\n                 {\n                   \"description\": \"Pick-up PHP from kiosk\",\n                   \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n\n                 },\n                 {\n                   \"description\": \"Pick-up USD from kiosk\",\n                   \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                 }\n             ]\n         }\n    ],\n\n   \"opening_hours\": [{\n     \"day_of_week\": [\n       \"Monday\",\n       \"Tuesday\",\n       \"Wednesday\",\n       \"Thursday\"\n     ],\n     \"opens\": \"09:15\",\n     \"closes\": \"16:30\"\n   },{\n     \"day_of_week\": [\"Friday\"],\n     \"opens\": \"09:15\",\n     \"closes\": \"16:00\"\n   }]\n        }\n }\n}"
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/transactions/settle/da",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"settle",
												"da"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "10.Returning Digital Obligations",
					"item": [
						{
							"name": "1. getting ledger_id",
							"item": [
								{
									"name": "/callback/transactions/do/{endtoendid}",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-rdo-client-url}}/{{service-version}}/callback/transactions/do/SGDDO08042019NZLNZLGF00100000000004",
											"host": [
												"{{participant1-rdo-client-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"transactions",
												"do",
												"SGDDO08042019NZLNZLGF00100000000004"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.return DO",
							"item": [
								{
									"name": "1. OFI settle from outside",
									"item": [
										{
											"name": "/simulation/rdo/notify participant1",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"amount\": 1.01,\n    \"asset_code\": \"SGDDO\",\n    \"end_to_end_id\": \"SGDDO19062019IBMIBMQA00187695320293\",\n    \"issuer_id\": \"participant1\",\n    \"ofi_id\": \"participant1\",\n    \"ofi_sending_account_address\": \"GAYOLYJBESWO6G4B4VG4J2WPSNANPB6IONR2SEJ2ERHGI7DW3TXUNFDT\",\n    \"ofi_sending_account_name\": \"issuing\",\n    \"rdo_end_to_end_id\": \" \",\n    \"rfi_id\": \"participant2\",\n    \"rfi_receiving_account_address\": \"GCU6R3XVWXOA52NH7FEGGS5ZYKKJVCJ27OWNG23GHEAGREAYPCIE4D2X\",\n    \"rfi_receiving_account_name\": \"issuing\",\n    \"status\": \"1\",\n    \"ledger_id\": \"d9fd91bc77039239ad6dc3649ec6aa5002c95e59fe55844e8af5c66de1dcdf34\"\n}"
												},
												"url": {
													"raw": "{{participant1-rdo-client-url}}/{{service-version}}/simulation/rdo/notify",
													"host": [
														"{{participant1-rdo-client-url}}"
													],
													"path": [
														"{{service-version}}",
														"simulation",
														"rdo",
														"notify"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2. RFI settle from outside",
									"item": [
										{
											"name": "/simulation/rdo/notify  participant2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"amount\": 3,\n    \"asset_code\": \"SGDDO\",\n    \"end_to_end_id\": \"SGDDO08042019NZLNZLGF00100000000004\",\n    \"issuer_id\": \"participant1\",\n    \"ofi_id\": \"participant1\",\n    \"ofi_sending_account_address\": \"GC6HXGUZJIJU4JIURXBFLGOCKUM2ZOE5NLS2AKCYMS6T4MR6ZVR63NS2\",\n    \"ofi_sending_account_name\": \"issuing\",\n    \"rdo_end_to_end_id\": \" \",\n    \"rfi_id\": \"participant2\",\n    \"rfi_receiving_account_address\": \"GDSBXPJPHCRXU7FS6BGRUW5MAQ5QMGKVNPNAWNFZDACMWLVC3AIJZGZK\",\n    \"rfi_receiving_account_name\": \"issuing\",\n    \"status\": \"1\",\n    \"ledger_id\": \"28681ddcc9ac4a077c2468aff91fd94cc51e61cfa24f7957c2e591a3362e71d7\"\n}"
												},
												"url": {
													"raw": "{{participant2-rdo-client-url}}/{{service-version}}/simulation/rdo/notify",
													"host": [
														"{{participant2-rdo-client-url}}"
													],
													"path": [
														"{{service-version}}",
														"simulation",
														"rdo",
														"notify"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3. settle in WW",
									"item": [
										{
											"name": "/client/transactions/settle/do",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"amount\": 1.01,\n    \"asset_code\": \"SGDDO\",\n    \"end_to_end_id\": \"SGDDO18062019IBMIBMQA00141960248228\",\n    \"issuer_id\": \"participant1\",\n    \"ofi_id\": \"participant1\",\n    \"ofi_sending_account_address\": \"GAYOLYJBESWO6G4B4VG4J2WPSNANPB6IONR2SEJ2ERHGI7DW3TXUNFDT\",\n    \"ofi_sending_account_name\": \"issuing\",\n    \"rdo_end_to_end_id\": \" \",\n    \"rfi_id\": \"participant2\",\n    \"rfi_receiving_account_address\": \"GCU6R3XVWXOA52NH7FEGGS5ZYKKJVCJ27OWNG23GHEAGREAYPCIE4D2X\",\n    \"rfi_receiving_account_name\": \"issuing\",\n    \"status\": \"1\",\n    \"ledger_id\": \"f737b336f4c49eba1e36ba81e5b6e7952fa683fb829601377ba849337f63d3eb\"\n}"
												},
												"url": {
													"raw": "{{participant1-rdo-url}}/{{service-version}}/client/transactions/settle/do",
													"host": [
														"{{participant1-rdo-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"transactions",
														"settle",
														"do"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "3.OFI get DO balance",
							"item": [
								{
									"name": "/client/balances/do",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/do?asset_code={{participant1-asset}}",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"balances",
												"do"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "{{participant1-asset}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "11. payout",
					"item": [
						{
							"name": "post payout",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"Mobile Network Operator\",\n    \"payout_child\": [],\n    \"payout_parent\": [],\n    \"name\": \"CIMB Bank1262\",\n    \"currencies_accepted\": [\n        \"USD\",\n        \"JPD\"\n    ],\n    \"image\": \"123123123\",\n    \"url\": \"\",\n    \"telephone\": \"0911222111\",\n    \"member_of\": [\n        \"BankA\"\n    ],\n    \"address\": {\n        \"street\": \"39A sg rah\",\n        \"state\": \"changiw\",\n        \"city\": \"north west\",\n        \"postal_code\": \"999999\",\n        \"country\": \"sg\",\n        \"building_number\": \"11\"\n    },\n    \"geo\": {\n        \"type\": \"area\",\n        \"coordinates\": [\n            {\n                \"lat\": 1314.8482097,\n                \"long\": 102.93435002\n            },\n            {\n                \"lat\": 131.8482097,\n                \"long\": 222.93435002\n            }\n        ]\n    },\n    \"category\": {\n        \"name\": \"delivery\",\n        \"options\": [\n            {\n                \"description\": \"Deliver PHP to home address\",\n                \"terms\": \"Limit of 1212 PHP\"\n            },\n            {\n                \"description\": \"Deliver USD to home address\",\n                \"terms\": \"Limit of 1,000 USD\"\n            }\n        ]\n    },\n    \"opening_hours\": [\n        {\n            \"day_of_week\": [\n                \"xxxddd\",\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Thursday\"\n            ],\n            \"opens\": \"09:15\",\n            \"closes\": \"16:30\"\n        },\n        {\n            \"day_of_week\": [\n                \"Friday\"\n            ],\n            \"opens\": \"09:15\",\n            \"closes\": \"16:00\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{participant1-payout-url}}/{{service-version}}/admin/payout",
									"host": [
										"{{participant1-payout-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"payout"
									]
								}
							},
							"response": []
						},
						{
							"name": "post payout(point)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2MiOlsiaXNzdWluZyIsImRlZmF1bHQiLCJ0ZXN0Il0sInZlciI6InYyLjkuMC4xX2FscGhhIiwiaXBzIjpbIjEyNy4wLjAuMSIsIjo6MSJdLCJlbnYiOiJzdCIsImVucCI6WyIvYWRkcmVzcy9zdGVsbGFyIiwiL2Fzc2V0cyIsIi9hc3NldHMvYWNjb3VudHMve2FjY291bnRfbmFtZX0iLCIvYXNzZXRzL2lzc3VlZCIsIi9hc3NldHMvcGFydGljaXBhbnRzL3twYXJ0aWNpcGFudF9pZH0iLCIvYmFsYW5jZXMvYWNjb3VudHMve2FjY291bnRfbmFtZX0iLCIvYmFsYW5jZXMvZG8iLCIvY29tcGxpYW5jZSIsIi9leGNoYW5nZS92ZXJpZnkiLCIvZmVlcyIsIi9mZWVzL3thc3NldH0iLCIvcGFydGljaXBhbnRzIiwiL3BhcnRpY2lwYW50cy9hc3NldCIsIi9wYXJ0aWNpcGFudHMvYmVuZWZpY2lhcnkiLCIvcGFydGljaXBhbnRzL3doaXRlbGlzdCIsIi9wYXJ0aWNpcGFudHMve3BhcnRpY2lwYW50X2lkfSIsIi9wYXltZW50IiwiL3BheW1lbnQvc3Vic2NyaWJlL3thY2NvdW50X25hbWV9IiwiL3F1b3RlIiwiL3F1b3RlL3txdW90ZV9pZH0iLCIvcXVvdGVzIiwiL3F1b3Rlcy97cXVvdGVfaWR9IiwiL3Jkby9hY3Rpdml0eSIsIi9yZG8vY2xvc2UiLCIvcmRvL2ZpdG9maS9zdGFydCIsIi9yZG8vbm90aWZ5IiwiL3Jkby9wYXltZW50IiwiL3Jkby90cmFuc2FjdGlvbi97ZW5kX3RvX2VuZF9pZH0iLCIvdHJhbnNhY3Rpb25zIiwiL3RyYW5zYWN0aW9ucy9leGNoYW5nZSIsIi90cmFuc2FjdGlvbnMvc2VuZCIsIi90cmFuc2FjdGlvbnMvc2V0dGxlL2RhIiwiL3RyYW5zYWN0aW9ucy9zZXR0bGUvZG8iLCIvdHJ1c3QiLCIvdmVyaWZ5X2FjY291bnRfaWRlbnRpZmllciIsIi93aGl0ZWxpc3QvcGFydGljaXBhbnRzL3twYXJ0aWNpcGFudF9pZH0iXSwibiI6MCwiaWF0IjoxNTQ4ODMxOTI2LCJuYmYiOjE1NDg4MzE5MzEsImV4cCI6MTU0ODkxODMyNiwiYXVkIjoibnoub25lLnBheW1lbnRzLmdmdG4uaW8iLCJzdWIiOiItTFBtckYwUWdnNmZzaHpMYzQ4aSIsImp0aSI6Ii1MWFNZbkZ4MmJWTzdCS005THUyIn0.DnYVcEZr90hl8_9Gdbmf9m23mjGQFEQtg2YhdAUqUdo",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"Non-Bank Financial Institution\",\r\n    \"payout_child\":[\"kNKWGRziWDSde38F0diF2rW9kZXfUP\",\"9XIOHCtWyxnySXchH7nquRwx2t9ng1\"],\r\n    \"payout_parent\":[],\r\n    \"name\": \"CIMB Bank100\",\r\n    \"currencies_accepted\":[\"USD\", \"JPD\"],\r\n    \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\r\n    \"url\": \"\",\r\n    \"telephone\": \"07-418 6258 / 6276\",\r\n    \"member_of\": [\"BankA\"],\r\n    \"address\": {\r\n      \"street\": \"39A sg rah\",\r\n      \"state\": \"changi\",\r\n      \"city\": \"north east\",\r\n      \"postal_code\": \"83000cs\",\r\n      \"country\": \"sg\",\r\n      \"building_number\":\"11\"\r\n    },\r\n    \"geo\": {\r\n      \"type\":\"point\",\r\n      \"coordinates\": [{\"lat\":1314.8482097, \"long\":102.93435002}]\r\n    },\r\n    \"category\": \r\n         {\r\n              \"name\": \"cash_pickup\",\r\n              \"options\": [\r\n                  {\r\n                    \"description\": \"Deliver PHP to home address\",\r\n                     \"terms\": \"Limit of 1212 PHP\"\r\n           \r\n                  },\r\n                  {\r\n                    \"description\": \"Deliver USD to home address\",\r\n                    \"terms\": \"Limit of 1,000 USD\"\r\n                  }\r\n              ]\r\n          },\r\n    \"opening_hours\": [{\r\n      \"day_of_week\": [\r\n        \"xxxddd\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\"\r\n      ],\r\n      \"opens\": \"09:15\",\r\n      \"closes\": \"16:30\"\r\n    },{\r\n      \"day_of_week\": [\"Friday\"],\r\n      \"opens\": \"09:15\",\r\n      \"closes\": \"16:00\"\r\n    }]\r\n}\r\n"
								},
								"url": {
									"raw": "{{global-payout-url}}/{{service-version}}/admin/payout",
									"host": [
										"{{global-payout-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"payout"
									]
								}
							},
							"response": []
						},
						{
							"name": "update payout",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"3L4jykeebfLhPoiXp0tGO5ASW538z5\",\n    \"updated_payload\": {\n        \"type\": \"Non-Bank Financial Institution\",\n        \"payout_child\": [],\n        \"payout_parent\": [\n            \"3L4jykeebfLhPoiXp0tGO5ASW538z5\"\n        ],\n        \"name\": \"CIMB Bank9ee\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\",\n            \"TWD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A sg rah\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000cs\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"type\": \"point\",\n            \"coordinates\": [\n                {\n                    \"lat\": 1.39757,\n                    \"long\": 132.38272\n                }\n            ]\n        },\n        \"category\": {\n            \"name\": \"cash_pickup\",\n            \"options\": [\n                {\n                    \"description\": \"Deliver PHP to home address\",\n                    \"terms\": \"Limit of 52,000 PHP\"\n                },\n                {\n                    \"description\": \"Deliver USD to home address\",\n                    \"terms\": \"Limit of 1,000 USD\"\n                }\n            ]\n        },\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{global-payout-url}}/{{service-version}}/admin/payout",
									"host": [
										"{{global-payout-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"payout"
									]
								}
							},
							"response": []
						},
						{
							"name": "get payout",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-payout-url}}/{{service-version}}/client/payout?postal_code=999999",
									"host": [
										"{{participant1-payout-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"payout"
									],
									"query": [
										{
											"key": "receive_mode",
											"value": "cash_pickup",
											"disabled": true
										},
										{
											"key": "receive_mode",
											"value": "cash_pickup",
											"disabled": true
										},
										{
											"key": "city",
											"value": "north west",
											"disabled": true
										},
										{
											"key": "state",
											"value": "tw",
											"disabled": true
										},
										{
											"key": "street",
											"value": "changI",
											"disabled": true
										},
										{
											"key": "country",
											"value": "SG",
											"disabled": true
										},
										{
											"key": "id",
											"value": "ssfrPxbD7VQjscx4CqFLewVGwcyjgl",
											"disabled": true
										},
										{
											"key": "address",
											"value": "sg",
											"disabled": true
										},
										{
											"key": "parent",
											"value": "mXTHWcdXY8VU9qhEr77oCyOFbKx3f0",
											"disabled": true
										},
										{
											"key": "child",
											"value": "2QpCGkJFHeUd22lfk5MEGVwn06cppB",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "Twd",
											"disabled": true
										},
										{
											"key": "image",
											"value": "123123123",
											"disabled": true
										},
										{
											"key": "name",
											"value": "CIMB Bank9ee",
											"disabled": true
										},
										{
											"key": "telephone",
											"value": "0911222111",
											"disabled": true
										},
										{
											"key": "url",
											"value": "123",
											"disabled": true
										},
										{
											"key": "member",
											"value": "BankB",
											"disabled": true
										},
										{
											"key": "geo",
											"value": "point",
											"disabled": true
										},
										{
											"key": "type",
											"value": "Mobile Network Operator",
											"disabled": true
										},
										{
											"key": "postal_code",
											"value": "999999"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete payout Copy",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-payout-url}}/{{service-version}}/admin/payout?id=qyk8JrlSoVCwMwezkrwaGG7pB",
									"host": [
										"{{global-payout-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"payout"
									],
									"query": [
										{
											"key": "id",
											"value": "qyk8JrlSoVCwMwezkrwaGG7pB"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "12. sweep",
					"item": [
						{
							"name": "sweeping 1-to-1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"default\",\n\t\"source_accounts\":[\n\t{\"account\":\"default2s\",\n\t\t\"amount\":1,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/account/sweep",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"account",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 1-to-1 DO",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"default6\",\n\t\"source_accounts\":[\n\t{\"account\":\"issuing\",\n\t\t\"amount\":1,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DO\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/account/sweep",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"account",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 9-to-1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"issuing\",\n\t\"source_accounts\":[\n\t{\"account\":\"default\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default2\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default3\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default4\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default5\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default6\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default7\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default8\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default9\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/account/sweep",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"account",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 19-to-1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"issuing\",\n\t\"source_accounts\":[\n\t{\"account\":\"default\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default2\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default3\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default4\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default5\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default6\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default7\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default8\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default9\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default10\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default11\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default12\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default13\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default14\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default15\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default16\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default17\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default18\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default20\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/account/sweep",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"account",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 15-to-1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"issuing\",\n\t\"source_accounts\":[\n\t{\"account\":\"default\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default2\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default3\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default4\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default5\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default6\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default7\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default8\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default9\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default10\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default11\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default12\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default13\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default14\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default15\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/account/sweep",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"account",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/accounts/{account_name} default USD",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/default?asset_code=USD&issuer_id={{anchor_id}}",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"balances",
										"accounts",
										"default"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USD"
										},
										{
											"key": "issuer_id",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "2. Exception Path Scenarios",
			"item": [
				{
					"name": "1. Performing any function without adequate gas (need to change the gas-account from database)",
					"item": [
						{
							"name": "1.create pariticipant1 operating accounts with adequate gas",
							"item": [
								{
									"name": "/onboarding/operatingaccount/{account_name} adequategas",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/operatingaccount/gastest3",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"onboarding",
												"operatingaccount",
												"gastest3"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.Issuing a new Digital Obligation without adequate gas",
							"item": [
								{
									"name": "participant1 issue DO",
									"item": [
										{
											"name": "/client/assets",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/assets?asset_code={{participant1-asset}}&asset_type=DO",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"assets"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														},
														{
															"key": "asset_type",
															"value": "DO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "3.building DO trustline between participant1 and participant2 without adequate gas",
							"item": [
								{
									"name": "0.build trust line for issuing account",
									"item": [
										{
											"name": "request trust line without adequate gas",
											"item": [
												{
													"name": "participant1 request trustline to participant2",
													"item": [
														{
															"name": "/client/trust",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p1-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{participant2-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\",\n    \"limit\": 9999\n}"
																},
																"url": {
																	"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																	"host": [
																		"{{participant1-api-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"trust"
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "allow without adequate gas",
											"item": [
												{
													"name": "participant2 allow request trustline from participant1",
													"item": [
														{
															"name": "/client/trust",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p2-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{participant1-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
																},
																"url": {
																	"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																	"host": [
																		"{{participant2-api-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"trust"
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "4.Sendging OFI without adequate gas",
							"item": [
								{
									"name": "0. Sending a payment (DO) to the RFI without adequate gas",
									"item": [
										{
											"name": "1.participant1 Sending fee request",
											"item": [
												{
													"name": "/client/fees/{{participant1_id}}",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DO\",\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"{{participant1-asset}}\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant1_id}}",
															"host": [
																"{{global-fee-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"fees",
																"{{participant1_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.sending a payment to the RFI(participant2)",
											"item": [
												{
													"name": "/transactions/send",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"pacs.008.001.07\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+U0dERE8yOTAzMjAxOUlCTUlCTVROMDAxMDAwMDAwMDAwMDE8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dETzwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cWFwYXJ0aWNpcGFudDE8L0lkPgogICAgICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICAgICAgPC9JZD4KICAgICAgICAgICAgICAgICAgICA8Tm0+aXNzdWluZzwvTm0+CiAgICAgICAgICAgICAgICA8L1N0dGxtQWNjdD4KICAgICAgICAgICAgPC9TdHRsbUluZj4KICAgICAgICAgICAgPFBtdFRwSW5mPgogICAgICAgICAgICAgICAgPFN2Y0x2bD4KICAgICAgICAgICAgICAgICAgICA8UHJ0cnk+cWFwYXJ0aWNpcGFudDE8L1BydHJ5PgogICAgICAgICAgICAgICAgPC9TdmNMdmw+CiAgICAgICAgICAgIDwvUG10VHBJbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNBQjAwMDwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5xYXBhcnRpY2lwYW50MTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RnQWd0PgogICAgICAgICAgICA8SW5zdGRBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cWFwYXJ0aWNpcGFudDI8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0ZEFndD4KICAgICAgICA8L0dycEhkcj4KICAgICAgICA8Q2R0VHJmVHhJbmY+CiAgICAgICAgICAgIDxQbXRJZD4KICAgICAgICAgICAgICAgIDxJbnN0cklkPlNHRERPMjkwMzIwMTlJQk1JQk1UTjAwMTAwMDAwMDAwMDAxPC9JbnN0cklkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+U0dERE8yOTAzMjAxOUlCTUlCTVROMDAxMDAwMDAwMDAwMDE8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5TR0RETzI5MDMyMDE5SUJNSUJNVE4wMDEwMDAwMDAwMDAwMTwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICAgICAgPEludHJCa1N0dGxtQW10IENjeT0iTlpERE8iPjE8L0ludHJCa1N0dGxtQW10PgogICAgICAgICAgICA8SW50ckJrU3R0bG1EdD4yMDE1LTA5LTI5PC9JbnRyQmtTdHRsbUR0PgogICAgICAgICAgICA8WGNoZ1JhdGU+MS4yPC9YY2hnUmF0ZT4KICAgICAgICAgICAgPENocmdCcj5DUkVEPC9DaHJnQnI+CiAgICAgICAgICAgIDxDaHJnc0luZj4KICAgICAgICAgICAgICAgIDxBbXQgQ2N5PSJOWkRETyI+MjwvQW10PgogICAgICAgICAgICAgICAgPEFndD4KICAgICAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICA8L0FndD4KICAgICAgICAgICAgPC9DaHJnc0luZj4KICAgICAgICAgICAgPERidHI+CiAgICAgICAgICAgICAgICA8Tm0+QUJDIENvcnBvcmF0aW9uPC9ObT4KICAgICAgICAgICAgICAgIDxQc3RsQWRyPgogICAgICAgICAgICAgICAgICAgIDxTdHJ0Tm0+VGltZXMgU3F1YXJlPC9TdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgPEJsZGdOYj43PC9CbGRnTmI+CiAgICAgICAgICAgICAgICAgICAgPFBzdENkPk5ZIDEwMDM2PC9Qc3RDZD4KICAgICAgICAgICAgICAgICAgICA8VHduTm0+TmV3IFlvcms8L1R3bk5tPgogICAgICAgICAgICAgICAgICAgIDxDdHJ5PlVTPC9DdHJ5PgogICAgICAgICAgICAgICAgPC9Qc3RsQWRyPgogICAgICAgICAgICA8L0RidHI+CiAgICAgICAgICAgIDxEYnRyQWNjdD4KICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPjAwMTI1NTc0OTk5PC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICA8L0RidHJBY2N0PgogICAgICAgICAgICA8RGJ0ckFndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNERTEwMTwvQklDRkk+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvRGJ0ckFndD4KICAgICAgICAgICAgPENkdHJBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0NkdHJBZ3Q+CiAgICAgICAgICAgIDxDZHRyPgogICAgICAgICAgICAgICAgPE5tPkRFRiBFbGVjdHJvbmljczwvTm0+CiAgICAgICAgICAgICAgICA8UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8U3RydE5tPk1hcmsgTGFuZTwvU3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxCbGRnTmI+NTU8L0JsZGdOYj4KICAgICAgICAgICAgICAgICAgICA8UHN0Q2Q+RUMzUjdORTwvUHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPFR3bk5tPkxvbmRvbjwvVHduTm0+CiAgICAgICAgICAgICAgICAgICAgPEN0cnk+R0I8L0N0cnk+CiAgICAgICAgICAgICAgICAgICAgPEFkckxpbmU+Q29ybiBFeGNoYW5nZSA1dGggRmxvb3I8L0FkckxpbmU+CiAgICAgICAgICAgICAgICA8L1BzdGxBZHI+CiAgICAgICAgICAgIDwvQ2R0cj4KICAgICAgICAgICAgPENkdHJBY2N0PgogICAgICAgICAgICAgICAgPElkPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+MjM2ODM3MDc5OTQyMTU8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgIDwvQ2R0ckFjY3Q+CiAgICAgICAgPC9DZHRUcmZUeEluZj4KICAgIDwvRklUb0ZJQ3N0bXJDZHRUcmY+CjwvRG9jdW1lbnQ+\"\n}"
														},
														"url": {
															"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
															"host": [
																"{{participant1-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"send"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.Receiving a DO payment from an OFI without adequate gas",
									"item": [
										{
											"name": "0. query participants get receive account",
											"item": [
												{
													"name": "/client/participants",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?country_code={{participant2_country_code}}&asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"participants"
															],
															"query": [
																{
																	"key": "country_code",
																	"value": "{{participant2_country_code}}"
																},
																{
																	"key": "asset_code",
																	"value": "{{participant2-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant2_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "1. receive payment from OFI",
											"item": [
												{
													"name": "/transactions/reply",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5TR0RETzI5MDMyMDE5SUJNSUJNVE4wMDIwMDAwMDAwMDAwMTwvTXNnSWQ+CiAgICAgICAgICAgIDxDcmVEdFRtPjIwMTktMDMtMjhUMTY6MDA6MDA8L0NyZUR0VG0+CiAgICAgICAgICAgIDxOYk9mVHhzPjE8L05iT2ZUeHM+CiAgICAgICAgICAgIDxTdHRsbUluZj4KICAgICAgICAgICAgICAgIDxTdHRsbU10ZD5XV0RPPC9TdHRsbU10ZD4KICAgICAgICAgICAgICAgIDxTdHRsbUFjY3Q+CiAgICAgICAgICAgICAgICAgICAgPElkPgogICAgICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5xYXBhcnRpY2lwYW50MjwvSWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICAgICAgICAgIDxObT5pc3N1aW5nPC9ObT4KICAgICAgICAgICAgICAgIDwvU3R0bG1BY2N0PgogICAgICAgICAgICA8L1N0dGxtSW5mPgogICAgICAgICAgICA8SW5zdGdBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+SUJNSUJNVE4wMDI8L0JJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cWFwYXJ0aWNpcGFudDI8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPklCTUlCTVROMDAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnFhcGFydGljaXBhbnQxPC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvSW5zdGRBZ3Q+CiAgICAgICAgPC9HcnBIZHI+CiAgICAgICAgPEZlZFJlcz4KICAgICAgICAgICAgPEFjY0lkPkdBNk1VR0NIQVZYWldUT0E1Wk40TFJGS1FINExPTkZTQVFISkxPRU1KQkpOTlJISEFQUUVBVkNDPC9BY2NJZD4KICAgICAgICAgICAgPEZlZFN0cz5BQ1RDPC9GZWRTdHM+CiAgICAgICAgICAgIDxQbXRJZD4KICAgICAgICAgICAgICAgIDxFbmRUb0VuZElkPlNHRERPMjkwMzIwMTlJQk1JQk1UTjAwMTAwMDAwMDAwMDAxPC9FbmRUb0VuZElkPgogICAgICAgICAgICAgICAgPFR4SWQ+U0dERE8yOTAzMjAxOUlCTUlCTVROMDAxMDAwMDAwMDAwMDE8L1R4SWQ+CiAgICAgICAgICAgIDwvUG10SWQ+CiAgICAgICAgPC9GZWRSZXM+CiAgICAgICAgPENtcFJlcz4KICAgICAgICAgICAgPEluZlN0cz5BQ1RDPC9JbmZTdHM+CiAgICAgICAgICAgIDxUeG5TdHM+QUNUQzwvVHhuU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5TR0RETzI5MDMyMDE5SUJNSUJNVE4wMDEwMDAwMDAwMDAwMTwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPlNHRERPMjkwMzIwMTlJQk1JQk1UTjAwMTAwMDAwMDAwMDAxPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvQ21wUmVzPgogICAgPC9GZWRDb21wUmVzPgo8L0RvY3VtZW50Pg==\"\n}"
														},
														"url": {
															"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
															"host": [
																"{{participant2-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"reply"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.check RFI account balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant1-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant1_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "5.Exchange DO from participant1 to participant2 without adequate gas",
							"item": [
								{
									"name": "1.OFI(participant1) request quote",
									"item": [
										{
											"name": "/client/quotes/request",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
															"setTimeout(1000)",
															"postman.setNextRequest('OFI get quotes1')"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"time_expire\": 1644775314,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{participant2-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant2_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.OFI(participant1) get quote from request_id",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.0 RFI query quotes from quote_id",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.RFI(participant2) callback receive quote request, agree to do exchange, sign to exchange transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
														"exec": [
															"",
															"let obj = {",
															"    \"account_name_receive\": \"issuing\",",
															"    \"account_name_send\": \"issuing\",",
															"    \"exchange_rate\": 0.6046602,",
															"    \"limit_max\": 1000,",
															"    \"quote_id\": pm.environment.get(\"quote_id\"),",
															"    \"quote_request\": {",
															"        \"time_expire\": 1644516034,",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
															"        ",
															"    },",
															"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
															"    \"time_expire\": 1644516034,",
															"    \"time_start\": 1544516034",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
															"pm.globals.set(\"variable_key\", \"variable_value\");",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant2-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "4.RFI(participant2) post envelope",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "5.OFI(participant1) get quotes check RFI already pose signed envelope",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(2);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "6.RFI(participant2) callback receive RFI response, sign transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															"let obj = {",
															"   \"account_name_receive\":\"issuing\",",
															"   \"account_name_send\":\"issuing\",",
															"   \"amount\":1,",
															"   \"quote\":   {",
															"      \"account_name_receive\":\"issuing\",",
															"      \"account_name_send\":\"issuing\",",
															"      \"exchange_rate\":0.6046602,",
															"      \"limit_max\":1000,",
															"      \"quote_id\":pm.environment.get(\"quote_id\"),",
															"      \"quote_request\": {",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"        \"time_expire\": 1644516034",
															"    },",
															"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
															"      \"time_expire\":1644516034,",
															"      \"time_start\":1544516034",
															"   }",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant1-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.OFI(participant1) sending exchange",
									"item": [
										{
											"name": "/client/exchange",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"exchange"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "8.OFI(participant1) check exchang successfull status:4",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}?",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "2. Creating an operating account with an duplicate account name",
					"item": [
						{
							"name": "1.create pariticipant1 operating accounts",
							"item": [
								{
									"name": "/onboarding/operatingaccount/{account_name} Admin",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/operatingaccount/admin",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"onboarding",
												"operatingaccount",
												"admin"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "3. Creating a Participant Id with an invalid naming convention",
					"item": [
						{
							"name": "0.fail case over maxLength",
							"item": [
								{
									"name": "/admin/pr",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n        \"bic\": \"ONLYALLOW11CHARACTER\",\n        \"country_code\": \"ALLOWEVERYTHING\",\n        \"id\": \"maximumis32character\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n    }"
										},
										"url": {
											"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
											"host": [
												"{{global-pr-url}}"
											],
											"path": [
												"{{service-version}}",
												"admin",
												"pr"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "1.fail case less then minLength",
							"item": [
								{
									"name": "/admin/pr",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n        \"bic\": \"CHAR\",\n        \"country_code\": \"ALLOWEVERYTHING\",\n        \"id\": \"CHAR\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n    }"
										},
										"url": {
											"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
											"host": [
												"{{global-pr-url}}"
											],
											"path": [
												"{{service-version}}",
												"admin",
												"pr"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.fail case bic rule A-Z(3)A-Z(3)A-Z2-9(1)A-NP-Z0-9(1)ANY(3)",
							"item": [
								{
									"name": "0.reject bic=0-9(3)A-Z(3)A-Z2-9(1)A-NP-Z0-9(1)ANY(3)",
									"item": [
										{
											"name": "/admin/pr",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"bic\": \"001IBMAB001\",\n        \"country_code\": \"ALLOWEVERYTHING\",\n        \"id\": \"rejecttest1\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n    }"
												},
												"url": {
													"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
													"host": [
														"{{global-pr-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"pr"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.0.reject bic=A-Z(3)0-9(3)A-Z2-9(1)A-NP-Z0-9(1)ANY(3)",
									"item": [
										{
											"name": "/admin/pr",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"bic\": \"IBM001AB001\",\n        \"country_code\": \"ALLOWEVERYTHING\",\n        \"id\": \"rejecttest2\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n    }"
												},
												"url": {
													"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
													"host": [
														"{{global-pr-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"pr"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.reject bic=A-Z(3)A-Z(3)A-Z2-9(1)O(1)ANY(3)",
									"item": [
										{
											"name": "/admin/pr",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"bic\": \"IBMIBMAO001\",\n        \"country_code\": \"ALLOWEVERYTHING\",\n        \"id\": \"rejecttest3\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n    }"
												},
												"url": {
													"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
													"host": [
														"{{global-pr-url}}"
													],
													"path": [
														"{{service-version}}",
														"admin",
														"pr"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a1ac92c1-8b47-49ed-8cc1-e77586166142",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3574df56-a66b-4af1-a684-1681ba9b99ed",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "4. Establishing a trustline for a non-whitelisted participant",
					"item": [
						{
							"name": "0. check participant1 whitelist",
							"item": [
								{
									"name": "/client/participants/whitelist get whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{global-whitelist-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist delete participant whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
										},
										"url": {
											"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{global-whitelist-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "1.participant1 building DO trustline with non-whitelisted participant",
							"item": [
								{
									"name": "0.build trust line for issuing account",
									"item": [
										{
											"name": "request",
											"item": [
												{
													"name": "participant1 request trustline to participant2",
													"item": [
														{
															"name": "/client/trust",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p1-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{participant2-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\",\n    \"limit\": 9999\n}"
																},
																"url": {
																	"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																	"host": [
																		"{{participant1-api-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"trust"
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "participant2 request trustline to participant1",
													"item": [
														{
															"name": "/client/trust",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p2-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{participant1-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"limit\": 9999\n}"
																},
																"url": {
																	"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																	"host": [
																		"{{participant2-api-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"trust"
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "allow",
											"item": [
												{
													"name": "participant1 allow request trustline from participant2",
													"item": [
														{
															"name": "/client/trust",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p1-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{participant1-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
																},
																"url": {
																	"raw": "{{participant1-api-url}}/{{service-version}}/client/trust",
																	"host": [
																		"{{participant1-api-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"trust"
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "participant2 allow request trustline from participant1",
													"item": [
														{
															"name": "/client/trust",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p2-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{participant1-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
																},
																"url": {
																	"raw": "{{participant2-api-url}}/{{service-version}}/client/trust",
																	"host": [
																		"{{participant2-api-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"trust"
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "5.Performing any interactions with a non-whitelisted Participant",
					"item": [
						{
							"name": "0. check participant1 whitelist",
							"item": [
								{
									"name": "/client/participants/whitelist get whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{global-whitelist-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist delete participant whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
										},
										"url": {
											"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{global-whitelist-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "1.Exchange DO from participant1 to non-whitelisted Participant",
							"item": [
								{
									"name": "1.OFI(participant1) request quote",
									"item": [
										{
											"name": "/client/quotes/request",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
															"setTimeout(1000)",
															"postman.setNextRequest('OFI get quotes1')"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"time_expire\": 1644775314,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{participant2-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant2_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.OFI(participant1) get quote from request_id (No participant is available)",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.0 RFI query quotes from quote_id",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.RFI(participant2) callback receive quote request, agree to do exchange, sign to exchange transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
														"exec": [
															"",
															"let obj = {",
															"    \"account_name_receive\": \"issuing\",",
															"    \"account_name_send\": \"issuing\",",
															"    \"exchange_rate\": 0.6046602,",
															"    \"limit_max\": 1000,",
															"    \"quote_id\": pm.environment.get(\"quote_id\"),",
															"    \"quote_request\": {",
															"        \"time_expire\": 1644516034,",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
															"        ",
															"    },",
															"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
															"    \"time_expire\": 1644516034,",
															"    \"time_start\": 1544516034",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
															"pm.globals.set(\"variable_key\", \"variable_value\");",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant2-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "4.RFI(participant2) post envelope",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "5.OFI(participant1) get quotes check RFI already pose signed envelope",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(2);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "6.RFI(participant2) callback receive RFI response, sign transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															"let obj = {",
															"   \"account_name_receive\":\"issuing\",",
															"   \"account_name_send\":\"issuing\",",
															"   \"amount\":1,",
															"   \"quote\":   {",
															"      \"account_name_receive\":\"issuing\",",
															"      \"account_name_send\":\"issuing\",",
															"      \"exchange_rate\":0.6046602,",
															"      \"limit_max\":1000,",
															"      \"quote_id\":pm.environment.get(\"quote_id\"),",
															"      \"quote_request\": {",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"        \"time_expire\": 1644516034",
															"    },",
															"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
															"      \"time_expire\":1644516034,",
															"      \"time_start\":1544516034",
															"   }",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant1-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.OFI(participant1) sending exchange",
									"item": [
										{
											"name": "/client/exchange",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"exchange"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "8.OFI(participant1) check exchang successfull status:4",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}?",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.Sendging OFI from participant1 to non-whitelisted Participant",
							"item": [
								{
									"name": "0. Sending a payment (DO) to the RFI without adequate gas",
									"item": [
										{
											"name": "1.participant1 Sending fee request",
											"item": [
												{
													"name": "/client/fees/{{participant1_id}}",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DO\",\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"{{participant1-asset}}\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant1_id}}",
															"host": [
																"{{global-fee-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"fees",
																"{{participant1_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.sending a payment to the RFI(participant2)",
											"item": [
												{
													"name": "/transactions/send",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"pacs.008.001.07\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQxPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmRlZmF1bHQ8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxQbXRUcEluZj4KICAgICAgICAgICAgICAgIDxTdmNMdmw+CiAgICAgICAgICAgICAgICAgICAgPFBydHJ5PnN0cm9uZ2hvbGQ8L1BydHJ5PgogICAgICAgICAgICAgICAgPC9TdmNMdmw+CiAgICAgICAgICAgIDwvUG10VHBJbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNBQjAwMDwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDE8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MjwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxDZHRUcmZUeEluZj4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEluc3RySWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L0luc3RySWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5VU0REQTI1MDIyMDE5VFBUUFRQVFA5OTkwMDAwMDAwMDAwMzwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPlVTRERBMjUwMjIwMTlUUFRQVFBUUDk5OTAwMDAwMDAwMDAzPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgICAgICA8SW50ckJrU3R0bG1BbXQgQ2N5PSJVU0QiPjE8L0ludHJCa1N0dGxtQW10PgogICAgICAgICAgICA8SW50ckJrU3R0bG1EdD4yMDE1LTA5LTI5PC9JbnRyQmtTdHRsbUR0PgogICAgICAgICAgICA8WGNoZ1JhdGU+MS4yPC9YY2hnUmF0ZT4KICAgICAgICAgICAgPENocmdCcj5DUkVEPC9DaHJnQnI+CiAgICAgICAgICAgIDxDaHJnc0luZj4KICAgICAgICAgICAgICAgIDxBbXQgQ2N5PSJVU0QiPjAuMTwvQW10PgogICAgICAgICAgICAgICAgPEFndD4KICAgICAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICA8L0FndD4KICAgICAgICAgICAgPC9DaHJnc0luZj4KICAgICAgICAgICAgPERidHI+CiAgICAgICAgICAgICAgICA8Tm0+QUJDIENvcnBvcmF0aW9uPC9ObT4KICAgICAgICAgICAgICAgIDxQc3RsQWRyPgogICAgICAgICAgICAgICAgICAgIDxTdHJ0Tm0+VGltZXMgU3F1YXJlPC9TdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgPEJsZGdOYj43PC9CbGRnTmI+CiAgICAgICAgICAgICAgICAgICAgPFBzdENkPk5ZIDEwMDM2PC9Qc3RDZD4KICAgICAgICAgICAgICAgICAgICA8VHduTm0+TmV3IFlvcms8L1R3bk5tPgogICAgICAgICAgICAgICAgICAgIDxDdHJ5PlVTPC9DdHJ5PgogICAgICAgICAgICAgICAgPC9Qc3RsQWRyPgogICAgICAgICAgICA8L0RidHI+CiAgICAgICAgICAgIDxEYnRyQWNjdD4KICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPjAwMTI1NTc0OTk5PC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICA8L0RidHJBY2N0PgogICAgICAgICAgICA8RGJ0ckFndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNERTEwMTwvQklDRkk+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvRGJ0ckFndD4KICAgICAgICAgICAgPENkdHJBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0NkdHJBZ3Q+CiAgICAgICAgICAgIDxDZHRyPgogICAgICAgICAgICAgICAgPE5tPkRFRiBFbGVjdHJvbmljczwvTm0+CiAgICAgICAgICAgICAgICA8UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8U3RydE5tPk1hcmsgTGFuZTwvU3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxCbGRnTmI+NTU8L0JsZGdOYj4KICAgICAgICAgICAgICAgICAgICA8UHN0Q2Q+RUMzUjdORTwvUHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPFR3bk5tPkxvbmRvbjwvVHduTm0+CiAgICAgICAgICAgICAgICAgICAgPEN0cnk+R0I8L0N0cnk+CiAgICAgICAgICAgICAgICAgICAgPEFkckxpbmU+Q29ybiBFeGNoYW5nZSA1dGggRmxvb3I8L0FkckxpbmU+CiAgICAgICAgICAgICAgICA8L1BzdGxBZHI+CiAgICAgICAgICAgIDwvQ2R0cj4KICAgICAgICAgICAgPENkdHJBY2N0PgogICAgICAgICAgICAgICAgPElkPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+MjM2ODM3MDc5OTQyMTU8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgIDwvQ2R0ckFjY3Q+CiAgICAgICAgPC9DZHRUcmZUeEluZj4KICAgIDwvRklUb0ZJQ3N0bXJDZHRUcmY+CjwvRG9jdW1lbnQ+\"\n}"
														},
														"url": {
															"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
															"host": [
																"{{participant1-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"send"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.Receiving a DO payment from an OFI without adequate gas",
									"item": [
										{
											"name": "0. query participants get receive account",
											"item": [
												{
													"name": "/client/participants",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?country_code={{participant2_country_code}}&asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"participants"
															],
															"query": [
																{
																	"key": "country_code",
																	"value": "{{participant2_country_code}}"
																},
																{
																	"key": "asset_code",
																	"value": "{{participant2-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant2_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "1. receive payment from OFI",
											"item": [
												{
													"name": "/transactions/reply",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIyMjIyMkFBQVdXV1dXNzc3MDAwMDAwMDIyMjU8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dETzwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+aWJtdHdvPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmlzc3Vpbmc8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5pYm10d288L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPmlibW9uZTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HRFFaUVlIVzZJWDdFR1JPUlA1QzJKM0FLMlI2RVZCRzNNQUNINlJORVVXNUdOVkRCUzJKS1NJQjwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExMjwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPk5aRERPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMTEyPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+TlpERE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAxMTI8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExMjwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
														},
														"url": {
															"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
															"host": [
																"{{participant2-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"reply"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.check RFI account balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant2-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant2_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "6.Sending a DO/DA amount to an RFI that exceeds the trustline limit",
					"item": [
						{
							"name": "1.Sending DA amount exceeds the trustline limit",
							"item": [
								{
									"name": "0. Sending a payment (DA) to the RFI with amount:200",
									"item": [
										{
											"name": "1.participant1 Sending fee request",
											"item": [
												{
													"name": "/client/fees/{{participant1_id}}",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DA\",\n        \"asset_code\": \"USD\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"USD\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant1_id}}",
															"host": [
																"{{global-fee-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"fees",
																"{{participant1_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.sending a payment to the RFI(participant2) manager account and amount:200",
											"item": [
												{
													"name": "/transactions/send",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"pacs.008.001.07\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQxPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmRlZmF1bHQ8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxQbXRUcEluZj4KICAgICAgICAgICAgICAgIDxTdmNMdmw+CiAgICAgICAgICAgICAgICAgICAgPFBydHJ5PnN0cm9uZ2hvbGQ8L1BydHJ5PgogICAgICAgICAgICAgICAgPC9TdmNMdmw+CiAgICAgICAgICAgIDwvUG10VHBJbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNBQjAwMDwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDE8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MjwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxDZHRUcmZUeEluZj4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEluc3RySWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L0luc3RySWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5VU0REQTI1MDIyMDE5VFBUUFRQVFA5OTkwMDAwMDAwMDAwMzwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPlVTRERBMjUwMjIwMTlUUFRQVFBUUDk5OTAwMDAwMDAwMDAzPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgICAgICA8SW50ckJrU3R0bG1BbXQgQ2N5PSJVU0QiPjE8L0ludHJCa1N0dGxtQW10PgogICAgICAgICAgICA8SW50ckJrU3R0bG1EdD4yMDE1LTA5LTI5PC9JbnRyQmtTdHRsbUR0PgogICAgICAgICAgICA8WGNoZ1JhdGU+MS4yPC9YY2hnUmF0ZT4KICAgICAgICAgICAgPENocmdCcj5DUkVEPC9DaHJnQnI+CiAgICAgICAgICAgIDxDaHJnc0luZj4KICAgICAgICAgICAgICAgIDxBbXQgQ2N5PSJVU0QiPjAuMTwvQW10PgogICAgICAgICAgICAgICAgPEFndD4KICAgICAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICA8L0FndD4KICAgICAgICAgICAgPC9DaHJnc0luZj4KICAgICAgICAgICAgPERidHI+CiAgICAgICAgICAgICAgICA8Tm0+QUJDIENvcnBvcmF0aW9uPC9ObT4KICAgICAgICAgICAgICAgIDxQc3RsQWRyPgogICAgICAgICAgICAgICAgICAgIDxTdHJ0Tm0+VGltZXMgU3F1YXJlPC9TdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgPEJsZGdOYj43PC9CbGRnTmI+CiAgICAgICAgICAgICAgICAgICAgPFBzdENkPk5ZIDEwMDM2PC9Qc3RDZD4KICAgICAgICAgICAgICAgICAgICA8VHduTm0+TmV3IFlvcms8L1R3bk5tPgogICAgICAgICAgICAgICAgICAgIDxDdHJ5PlVTPC9DdHJ5PgogICAgICAgICAgICAgICAgPC9Qc3RsQWRyPgogICAgICAgICAgICA8L0RidHI+CiAgICAgICAgICAgIDxEYnRyQWNjdD4KICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPjAwMTI1NTc0OTk5PC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICA8L0RidHJBY2N0PgogICAgICAgICAgICA8RGJ0ckFndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNERTEwMTwvQklDRkk+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvRGJ0ckFndD4KICAgICAgICAgICAgPENkdHJBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0NkdHJBZ3Q+CiAgICAgICAgICAgIDxDZHRyPgogICAgICAgICAgICAgICAgPE5tPkRFRiBFbGVjdHJvbmljczwvTm0+CiAgICAgICAgICAgICAgICA8UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8U3RydE5tPk1hcmsgTGFuZTwvU3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxCbGRnTmI+NTU8L0JsZGdOYj4KICAgICAgICAgICAgICAgICAgICA8UHN0Q2Q+RUMzUjdORTwvUHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPFR3bk5tPkxvbmRvbjwvVHduTm0+CiAgICAgICAgICAgICAgICAgICAgPEN0cnk+R0I8L0N0cnk+CiAgICAgICAgICAgICAgICAgICAgPEFkckxpbmU+Q29ybiBFeGNoYW5nZSA1dGggRmxvb3I8L0FkckxpbmU+CiAgICAgICAgICAgICAgICA8L1BzdGxBZHI+CiAgICAgICAgICAgIDwvQ2R0cj4KICAgICAgICAgICAgPENkdHJBY2N0PgogICAgICAgICAgICAgICAgPElkPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+MjM2ODM3MDc5OTQyMTU8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgIDwvQ2R0ckFjY3Q+CiAgICAgICAgPC9DZHRUcmZUeEluZj4KICAgIDwvRklUb0ZJQ3N0bXJDZHRUcmY+CjwvRG9jdW1lbnQ+\"\n}"
														},
														"url": {
															"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
															"host": [
																"{{participant1-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"send"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.1RFI manager account receiving DA payment from OFI",
									"item": [
										{
											"name": "0. query participants get receive account",
											"item": [
												{
													"name": "/client/participants",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?country_code={{participant2_country_code}}&asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"participants"
															],
															"query": [
																{
																	"key": "country_code",
																	"value": "{{participant2_country_code}}"
																},
																{
																	"key": "asset_code",
																	"value": "{{participant2-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant2_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "1. receive payment from OFI",
											"item": [
												{
													"name": "/transactions/reply",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIyMjIyMkFBQVdXV1dXNzc3MDAwMDAwMDIyMjU8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dETzwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+aWJtdHdvPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmlzc3Vpbmc8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5pYm10d288L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPmlibW9uZTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HRFFaUVlIVzZJWDdFR1JPUlA1QzJKM0FLMlI2RVZCRzNNQUNINlJORVVXNUdOVkRCUzJKS1NJQjwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExMjwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPk5aRERPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMTEyPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+TlpERE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAxMTI8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExMjwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
														},
														"url": {
															"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
															"host": [
																"{{participant2-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"reply"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.check RFI manager account balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} manager",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/manager?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"manager"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{anchor-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{anchor_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.Sending DO amount exceeds the trustline limit",
							"item": [
								{
									"name": "0. Sending a payment (DO) to the RFI with amount 200",
									"item": [
										{
											"name": "1.participant1 Sending fee request",
											"item": [
												{
													"name": "/client/fees/{{participant1_id}}",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DO\",\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"{{participant1-asset}}\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant1_id}}",
															"host": [
																"{{global-fee-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"fees",
																"{{participant1_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.sending a payment to the RFI(participant2), and amount:200",
											"item": [
												{
													"name": "/transactions/send",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"pacs.008.001.07\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQxPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmRlZmF1bHQ8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxQbXRUcEluZj4KICAgICAgICAgICAgICAgIDxTdmNMdmw+CiAgICAgICAgICAgICAgICAgICAgPFBydHJ5PnN0cm9uZ2hvbGQ8L1BydHJ5PgogICAgICAgICAgICAgICAgPC9TdmNMdmw+CiAgICAgICAgICAgIDwvUG10VHBJbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNBQjAwMDwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDE8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MjwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxDZHRUcmZUeEluZj4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEluc3RySWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L0luc3RySWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5VU0REQTI1MDIyMDE5VFBUUFRQVFA5OTkwMDAwMDAwMDAwMzwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPlVTRERBMjUwMjIwMTlUUFRQVFBUUDk5OTAwMDAwMDAwMDAzPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgICAgICA8SW50ckJrU3R0bG1BbXQgQ2N5PSJVU0QiPjE8L0ludHJCa1N0dGxtQW10PgogICAgICAgICAgICA8SW50ckJrU3R0bG1EdD4yMDE1LTA5LTI5PC9JbnRyQmtTdHRsbUR0PgogICAgICAgICAgICA8WGNoZ1JhdGU+MS4yPC9YY2hnUmF0ZT4KICAgICAgICAgICAgPENocmdCcj5DUkVEPC9DaHJnQnI+CiAgICAgICAgICAgIDxDaHJnc0luZj4KICAgICAgICAgICAgICAgIDxBbXQgQ2N5PSJVU0QiPjAuMTwvQW10PgogICAgICAgICAgICAgICAgPEFndD4KICAgICAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICA8L0FndD4KICAgICAgICAgICAgPC9DaHJnc0luZj4KICAgICAgICAgICAgPERidHI+CiAgICAgICAgICAgICAgICA8Tm0+QUJDIENvcnBvcmF0aW9uPC9ObT4KICAgICAgICAgICAgICAgIDxQc3RsQWRyPgogICAgICAgICAgICAgICAgICAgIDxTdHJ0Tm0+VGltZXMgU3F1YXJlPC9TdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgPEJsZGdOYj43PC9CbGRnTmI+CiAgICAgICAgICAgICAgICAgICAgPFBzdENkPk5ZIDEwMDM2PC9Qc3RDZD4KICAgICAgICAgICAgICAgICAgICA8VHduTm0+TmV3IFlvcms8L1R3bk5tPgogICAgICAgICAgICAgICAgICAgIDxDdHJ5PlVTPC9DdHJ5PgogICAgICAgICAgICAgICAgPC9Qc3RsQWRyPgogICAgICAgICAgICA8L0RidHI+CiAgICAgICAgICAgIDxEYnRyQWNjdD4KICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPjAwMTI1NTc0OTk5PC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICA8L0RidHJBY2N0PgogICAgICAgICAgICA8RGJ0ckFndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNERTEwMTwvQklDRkk+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvRGJ0ckFndD4KICAgICAgICAgICAgPENkdHJBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0NkdHJBZ3Q+CiAgICAgICAgICAgIDxDZHRyPgogICAgICAgICAgICAgICAgPE5tPkRFRiBFbGVjdHJvbmljczwvTm0+CiAgICAgICAgICAgICAgICA8UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8U3RydE5tPk1hcmsgTGFuZTwvU3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxCbGRnTmI+NTU8L0JsZGdOYj4KICAgICAgICAgICAgICAgICAgICA8UHN0Q2Q+RUMzUjdORTwvUHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPFR3bk5tPkxvbmRvbjwvVHduTm0+CiAgICAgICAgICAgICAgICAgICAgPEN0cnk+R0I8L0N0cnk+CiAgICAgICAgICAgICAgICAgICAgPEFkckxpbmU+Q29ybiBFeGNoYW5nZSA1dGggRmxvb3I8L0FkckxpbmU+CiAgICAgICAgICAgICAgICA8L1BzdGxBZHI+CiAgICAgICAgICAgIDwvQ2R0cj4KICAgICAgICAgICAgPENkdHJBY2N0PgogICAgICAgICAgICAgICAgPElkPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+MjM2ODM3MDc5OTQyMTU8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgIDwvQ2R0ckFjY3Q+CiAgICAgICAgPC9DZHRUcmZUeEluZj4KICAgIDwvRklUb0ZJQ3N0bXJDZHRUcmY+CjwvRG9jdW1lbnQ+\"\n}"
														},
														"url": {
															"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
															"host": [
																"{{participant1-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"send"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.Receiving a DO payment from an OFI",
									"item": [
										{
											"name": "0. query participants get receiving account",
											"item": [
												{
													"name": "/client/participants",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?country_code={{participant2_country_code}}&asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
															"host": [
																"{{participant2-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"participants"
															],
															"query": [
																{
																	"key": "country_code",
																	"value": "{{participant2_country_code}}"
																},
																{
																	"key": "asset_code",
																	"value": "{{participant2-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant2_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "1. receive payment from OFI",
											"item": [
												{
													"name": "/transactions/reply",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p2-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIyMjIyMkFBQVdXV1dXNzc3MDAwMDAwMDIyMjU8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dETzwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+aWJtdHdvPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmlzc3Vpbmc8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5pYm10d288L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPmlibW9uZTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HRFFaUVlIVzZJWDdFR1JPUlA1QzJKM0FLMlI2RVZCRzNNQUNINlJORVVXNUdOVkRCUzJKS1NJQjwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExMjwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPk5aRERPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMTEyPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+TlpERE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAxMTI8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExMjwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
														},
														"url": {
															"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
															"host": [
																"{{participant2-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"reply"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.check RFI account balance",
											"item": [
												{
													"name": "/client/balances/accounts/{account_name} issuing",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
															"host": [
																"{{participant1-api-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"balances",
																"accounts",
																"issuing"
															],
															"query": [
																{
																	"key": "asset_code",
																	"value": "{{participant1-asset}}"
																},
																{
																	"key": "issuer_id",
																	"value": "{{participant1_id}}"
																}
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "7.Sending a payment with insufficient funds",
					"item": [
						{
							"name": "1.Sending DA amount with insufficient funds",
							"item": [
								{
									"name": "0.check RFI manager account balance",
									"item": [
										{
											"name": "/client/balances/accounts/{account_name} manager",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/manager?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"manager"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1. check participant1 whitelist",
									"item": [
										{
											"name": "/client/participants/whitelist get whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist delete participant whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist add participant2",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2. Sending a payment (DA) to the RFI",
									"item": [
										{
											"name": "1.participant1 Sending fee request",
											"item": [
												{
													"name": "/client/fees/{{participant1_id}}",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DA\",\n        \"asset_code\": \"USD\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"USD\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant1_id}}",
															"host": [
																"{{global-fee-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"fees",
																"{{participant1_id}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "2.sending a payment to the RFI(participant2) manager account and amount:200",
											"item": [
												{
													"name": "/transactions/send",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{p1-jwt-token}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"message_type\": \"pacs.008.001.07\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+VVNEREEwMjA0MjAxOU5aTE5aTEdGMDAxMDAwMDAwMDAwMTY8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQxPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPm1hbmFnZXI8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxQbXRUcEluZj4KICAgICAgICAgICAgICAgIDxTdmNMdmw+CiAgICAgICAgICAgICAgICAgICAgPFBydHJ5PmlibWFuY2hvcjwvUHJ0cnk+CiAgICAgICAgICAgICAgICA8L1N2Y0x2bD4KICAgICAgICAgICAgPC9QbXRUcEluZj4KICAgICAgICAgICAgPEluc3RnQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0FCMDAwPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RnQWd0PgogICAgICAgICAgICA8SW5zdGRBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQyPC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvSW5zdGRBZ3Q+CiAgICAgICAgPC9HcnBIZHI+CiAgICAgICAgPENkdFRyZlR4SW5mPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8SW5zdHJJZD5VU0REQTAyMDQyMDE5TlpMTlpMR0YwMDEwMDAwMDAwMDAxNjwvSW5zdHJJZD4KICAgICAgICAgICAgICAgIDxFbmRUb0VuZElkPlVTRERBMDIwNDIwMTlOWkxOWkxHRjAwMTAwMDAwMDAwMDE2PC9FbmRUb0VuZElkPgogICAgICAgICAgICAgICAgPFR4SWQ+VVNEREEwMjA0MjAxOU5aTE5aTEdGMDAxMDAwMDAwMDAwMTY8L1R4SWQ+CiAgICAgICAgICAgIDwvUG10SWQ+CiAgICAgICAgICAgIDxJbnRyQmtTdHRsbUFtdCBDY3k9IlVTRCI+OTc8L0ludHJCa1N0dGxtQW10PgogICAgICAgICAgICA8SW50ckJrU3R0bG1EdD4yMDE1LTA5LTI5PC9JbnRyQmtTdHRsbUR0PgogICAgICAgICAgICA8WGNoZ1JhdGU+MS4yPC9YY2hnUmF0ZT4KICAgICAgICAgICAgPENocmdCcj5DUkVEPC9DaHJnQnI+CiAgICAgICAgICAgIDxDaHJnc0luZj4KICAgICAgICAgICAgICAgIDxBbXQgQ2N5PSJVU0QiPjI8L0FtdD4KICAgICAgICAgICAgICAgIDxBZ3Q+CiAgICAgICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICAgICAgPC9BZ3Q+CiAgICAgICAgICAgIDwvQ2hyZ3NJbmY+CiAgICAgICAgICAgIDxEYnRyPgogICAgICAgICAgICAgICAgPE5tPkFCQyBDb3Jwb3JhdGlvbjwvTm0+CiAgICAgICAgICAgICAgICA8UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8U3RydE5tPlRpbWVzIFNxdWFyZTwvU3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxCbGRnTmI+NzwvQmxkZ05iPgogICAgICAgICAgICAgICAgICAgIDxQc3RDZD5OWSAxMDAzNjwvUHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPFR3bk5tPk5ldyBZb3JrPC9Ud25ObT4KICAgICAgICAgICAgICAgICAgICA8Q3RyeT5VUzwvQ3RyeT4KICAgICAgICAgICAgICAgIDwvUHN0bEFkcj4KICAgICAgICAgICAgPC9EYnRyPgogICAgICAgICAgICA8RGJ0ckFjY3Q+CiAgICAgICAgICAgICAgICA8SWQ+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD4wMDEyNTU3NDk5OTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9JZD4KICAgICAgICAgICAgPC9EYnRyQWNjdD4KICAgICAgICAgICAgPERidHJBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VFdEQUJDREUxMDE8L0JJQ0ZJPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0RidHJBZ3Q+CiAgICAgICAgICAgIDxDZHRyQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9DZHRyQWd0PgogICAgICAgICAgICA8Q2R0cj4KICAgICAgICAgICAgICAgIDxObT5ERUYgRWxlY3Ryb25pY3M8L05tPgogICAgICAgICAgICAgICAgPFBzdGxBZHI+CiAgICAgICAgICAgICAgICAgICAgPFN0cnRObT5NYXJrIExhbmU8L1N0cnRObT4KICAgICAgICAgICAgICAgICAgICA8QmxkZ05iPjU1PC9CbGRnTmI+CiAgICAgICAgICAgICAgICAgICAgPFBzdENkPkVDM1I3TkU8L1BzdENkPgogICAgICAgICAgICAgICAgICAgIDxUd25ObT5Mb25kb248L1R3bk5tPgogICAgICAgICAgICAgICAgICAgIDxDdHJ5PkdCPC9DdHJ5PgogICAgICAgICAgICAgICAgICAgIDxBZHJMaW5lPkNvcm4gRXhjaGFuZ2UgNXRoIEZsb29yPC9BZHJMaW5lPgogICAgICAgICAgICAgICAgPC9Qc3RsQWRyPgogICAgICAgICAgICA8L0NkdHI+CiAgICAgICAgICAgIDxDZHRyQWNjdD4KICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPjIzNjgzNzA3OTk0MjE1PC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICA8L0NkdHJBY2N0PgogICAgICAgIDwvQ2R0VHJmVHhJbmY+CiAgICA8L0ZJVG9GSUNzdG1yQ2R0VHJmPgo8L0RvY3VtZW50Pg==\"\n}"
														},
														"url": {
															"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
															"host": [
																"{{participant1-send-url}}"
															],
															"path": [
																"{{service-version}}",
																"client",
																"transactions",
																"send"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "3.RFI manager account receiving DA payment from OFI",
											"item": [
												{
													"name": "0. query participants get receive account",
													"item": [
														{
															"name": "/client/participants",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p2-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?",
																	"host": [
																		"{{participant2-api-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"participants"
																	],
																	"query": [
																		{
																			"key": "country_code",
																			"value": "{{participant2_country_code}}",
																			"disabled": true
																		},
																		{
																			"key": "asset_code",
																			"value": "{{participant2-asset}}",
																			"disabled": true
																		},
																		{
																			"key": "issuer_id",
																			"value": "{{participant2_id}}",
																			"disabled": true
																		}
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "1. receive payment from OFI",
													"item": [
														{
															"name": "/transactions/reply",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p2-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json",
																		"disabled": true
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIyMjIyMkFBQVdXV1dXNzc3MDAwMDAwMDEyMzA8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE5LTAzLTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQyPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPm1hbmFnZXI8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0FVU0FHRjAwMjwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDI8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HQ1RBSEFSRFRMTk9GQ1FOT0pTNlNSWE5DVFdUQkhPWTZCSlFTT1I3QTVLUldKNElNQUtXSjNENDwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5VU0REQTAyMDQyMDE5TlpMTlpMR0YwMDEwMDAwMDAwMDAxNTwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPlVTRERBMDIwNDIwMTlOWkxOWkxHRjAwMTAwMDAwMDAwMDE1PC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+VVNEREEwMjA0MjAxOU5aTE5aTEdGMDAxMDAwMDAwMDAwMTU8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5VU0REQTAyMDQyMDE5TlpMTlpMR0YwMDEwMDAwMDAwMDAxNTwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
																},
																"url": {
																	"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/reply",
																	"host": [
																		"{{participant2-send-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"transactions",
																		"reply"
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												},
												{
													"name": "2.check RFI manager account balance",
													"item": [
														{
															"name": "/client/balances/accounts/{account_name} manager",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{p2-jwt-token}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Content-Type",
																		"name": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/manager?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
																	"host": [
																		"{{participant2-api-url}}"
																	],
																	"path": [
																		"{{service-version}}",
																		"client",
																		"balances",
																		"accounts",
																		"manager"
																	],
																	"query": [
																		{
																			"key": "asset_code",
																			"value": "{{anchor-asset}}"
																		},
																		{
																			"key": "issuer_id",
																			"value": "{{anchor_id}}"
																		}
																	]
																}
															},
															"response": []
														}
													],
													"_postman_isSubFolder": true
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "8.Quote Request for DAs without sufficient funds",
					"item": [
						{
							"name": "0.check RFI manager account balance",
							"item": [
								{
									"name": "/client/balances/accounts/{account_name} manager",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/manager?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"balances",
												"accounts",
												"manager"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "{{anchor-asset}}"
												},
												{
													"key": "issuer_id",
													"value": "{{anchor_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "1. check participant1 whitelist",
							"item": [
								{
									"name": "/client/participants/whitelist get whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{global-whitelist-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist delete participant whitelist",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
										},
										"url": {
											"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{global-whitelist-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/participants/whitelist add participant2",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
										},
										"url": {
											"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
											"host": [
												"{{global-whitelist-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"whitelist"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "1.Exchange DA  from participant1 to participant2",
							"item": [
								{
									"name": "1.OFI(participant1) request quote",
									"item": [
										{
											"name": "/client/quotes/request",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
															"setTimeout(1000)",
															"postman.setNextRequest('OFI get quotes1')"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"time_expire\": 1644775314,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{anchor-asset}}\",\n        \"asset_type\": \"DA\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{anchor-asset2}}\",\n        \"asset_type\": \"DA\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.OFI(participant1) get quote from request_id",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.0 RFI query quotes from quote_id",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.RFI(participant2) callback receive quote request, agree to do exchange, sign to exchange transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
														"exec": [
															"",
															"let obj = {",
															"    \"account_name_receive\": \"manager\",",
															"    \"account_name_send\": \"manager\",",
															"    \"exchange_rate\": 0.6046602,",
															"    \"limit_max\": 1000,",
															"    \"quote_id\": pm.environment.get(\"quote_id\"),",
															"    \"quote_request\": {",
															"        \"time_expire\": 1644516034,",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"anchor-asset\"),",
															"                   \"asset_type\": \"DA\",",
															"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"anchor-asset2\"),",
															"                   \"asset_type\": \"DA\",",
															"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
															"  },",
															"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
															"        ",
															"    },",
															"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
															"    \"time_expire\": 1644516034,",
															"    \"time_start\": 1544516034",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
															"pm.globals.set(\"variable_key\", \"variable_value\");",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant2-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "4.RFI(participant2) post envelope",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "5.OFI(participant1) get quotes check RFI already pose signed envelope",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(2);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "6.RFI(participant2) callback receive RFI response, sign transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															"let obj = {",
															"   \"account_name_receive\":\"manager\",",
															"   \"account_name_send\":\"manager\",",
															"   \"amount\":200,",
															"   \"quote\":   {",
															"      \"account_name_receive\":\"manager\",",
															"      \"account_name_send\":\"manager\",",
															"      \"exchange_rate\":0.6046602,",
															"      \"limit_max\":1000,",
															"      \"quote_id\":pm.environment.get(\"quote_id\"),",
															"      \"quote_request\": {",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"anchor-asset\"),",
															"                   \"asset_type\": \"DA\",",
															"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"anchor-asset2\"),",
															"                   \"asset_type\": \"DA\",",
															"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
															"  },",
															"        \"time_expire\": 1644516034",
															"    },",
															"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
															"      \"time_expire\":1644516034,",
															"      \"time_start\":1544516034",
															"   }",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant1-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.OFI(participant1) sending exchange",
									"item": [
										{
											"name": "/client/exchange",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"exchange"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "8.OFI(participant1) check exchang successfull status:4",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}?",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "9.Quote Exception",
					"item": [
						{
							"name": "1.Acting on an expired quote",
							"item": [
								{
									"name": "1.OFI(participant1) request quote",
									"item": [
										{
											"name": "/client/quotes/request",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
															"setTimeout(1000)",
															"postman.setNextRequest('OFI get quotes1')"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"time_expire\": 1659029498,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{participant2-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant2_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.OFI(participant1) get quote from request_id",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.0 RFI query quotes from quote_id",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.RFI(participant2) callback receive quote request, agree to do exchange, sign to exchange transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
														"exec": [
															"",
															"let obj = {",
															"    \"account_name_receive\": \"issuing\",",
															"    \"account_name_send\": \"issuing\",",
															"    \"exchange_rate\": 0.6046602,",
															"    \"limit_max\": 10,",
															"    \"quote_id\": pm.environment.get(\"quote_id\"),",
															"    \"quote_request\": {",
															"        \"time_expire\": 1659029498,",
															"        \"limit_max\": 90,",
															"        \"limit_min\": 20,",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
															"        ",
															"    },",
															"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
															"    \"time_expire\": 1659029498,",
															"    \"time_start\": 1559029091",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
															"pm.globals.set(\"variable_key\", \"variable_value\");",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant2-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "4.RFI(participant2) post envelope",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "5.OFI(participant1) get quotes check RFI already pose signed envelope",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"postman.setEnvironmentVariable(\"quote_response\", jsonData[0].quote_response)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(2);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "6.RFI(participant2) callback receive RFI response, sign transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															"let obj = {",
															"   \"account_name_receive\":\"issuing\",",
															"   \"account_name_send\":\"issuing\",",
															"   \"amount\":1,",
															"   \"quote\":   {",
															"      \"account_name_receive\":\"issuing\",",
															"      \"account_name_send\":\"issuing\",",
															"      \"exchange_rate\":0.6046602,",
															"      \"limit_max\":1000,",
															"      \"quote_id\":pm.environment.get(\"quote_id\"),",
															"      \"quote_request\": {",
															"        \"limit_max\": 90,",
															"        \"limit_min\": 20,",
															"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"        \"time_expire\": 1659029498",
															"    },",
															"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
															"      \"time_expire\":1659029498,",
															"      \"time_start\":1559029091",
															"   }",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant1-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.OFI(participant1) sending exchange",
									"item": [
										{
											"name": "/client/exchange",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"exchange"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "8.OFI(participant1) check exchang successfull status:4",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}?",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.Acting on an quote anoutside the limits",
							"item": [
								{
									"name": "1.OFI(participant1) request quote",
									"item": [
										{
											"name": "/client/quotes/request",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
															"setTimeout(1000)",
															"postman.setNextRequest('OFI get quotes1')"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"time_expire\": 1666666666,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{participant2-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant2_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.OFI(participant1) get quote from request_id",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.0 RFI query quotes from quote_id",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.RFI(participant2) callback receive quote request, agree to do exchange, sign to exchange transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
														"exec": [
															"",
															"let obj = {",
															"    \"account_name_receive\": \"issuing\",",
															"    \"account_name_send\": \"issuing\",",
															"    \"exchange_rate\": 0.6046602,",
															"    \"limit_max\": 30,",
															"    \"quote_id\": pm.environment.get(\"quote_id\"),",
															"    \"quote_request\": {",
															"        \"time_expire\": 1666666666,",
															"        \"limit_max\": 90,",
															"        \"limit_min\": 20,",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
															"        ",
															"    },",
															"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
															"    \"time_expire\": 1644516034,",
															"    \"time_start\": 1544516034",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
															"pm.globals.set(\"variable_key\", \"variable_value\");",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant2-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "4.RFI(participant2) post envelope",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "5.OFI(participant1) get quotes check RFI already pose signed envelope",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(2);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "6.RFI(participant2) callback receive RFI response, sign transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															"let obj = {",
															"   \"account_name_receive\":\"issuing\",",
															"   \"account_name_send\":\"issuing\",",
															"   \"amount\":200,",
															"   \"quote\":   {",
															"      \"account_name_receive\":\"issuing\",",
															"      \"account_name_send\":\"issuing\",",
															"      \"exchange_rate\":0.6046602,",
															"      \"limit_max\":30,",
															"      \"quote_id\":pm.environment.get(\"quote_id\"),",
															"      \"quote_request\": {",
															"        \"limit_max\": 90,",
															"        \"limit_min\": 20,",
															"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"        \"time_expire\": 1666666666",
															"    },",
															"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
															"      \"time_expire\":1644516034,",
															"      \"time_start\":1544516034",
															"   }",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant1-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.OFI(participant1) sending exchange",
									"item": [
										{
											"name": "/client/exchange",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"exchange"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "8.OFI(participant1) check exchang successfull status:4",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}?",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "3.Acting on an quote provided by a non-whitelisted participant",
							"item": [
								{
									"name": "0. check participant1 whitelist",
									"item": [
										{
											"name": "/client/participants/whitelist get whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/participants/whitelist delete participant whitelist",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
													"host": [
														"{{global-whitelist-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"participants",
														"whitelist"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "1.OFI(participant1) request quote",
									"item": [
										{
											"name": "/client/quotes/request",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
															"setTimeout(1000)",
															"postman.setNextRequest('OFI get quotes1')"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"time_expire\": 1644775314,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{participant1-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant1_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{participant2-asset}}\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"{{participant2_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "2.OFI(participant1) get quote from request_id",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.0 RFI query quotes from quote_id",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "3.RFI(participant2) callback receive quote request, agree to do exchange, sign to exchange transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
														"exec": [
															"",
															"let obj = {",
															"    \"account_name_receive\": \"issuing\",",
															"    \"account_name_send\": \"issuing\",",
															"    \"exchange_rate\": 0.6046602,",
															"    \"limit_max\": 1000,",
															"    \"quote_id\": pm.environment.get(\"quote_id\"),",
															"    \"quote_request\": {",
															"        \"time_expire\": 1644516034,",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
															"        ",
															"    },",
															"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
															"    \"time_expire\": 1644516034,",
															"    \"time_start\": 1544516034",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
															"pm.globals.set(\"variable_key\", \"variable_value\");",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant2-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "4.RFI(participant2) post envelope",
									"item": [
										{
											"name": "/client/quotes/{{quote_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
														"exec": [
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"{{quote_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "5.OFI(participant1) get quotes check RFI already pose signed envelope",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(2);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "6.RFI(participant2) callback receive RFI response, sign transaction",
									"item": [
										{
											"name": "/client/sign",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															"let obj = {",
															"   \"account_name_receive\":\"issuing\",",
															"   \"account_name_send\":\"issuing\",",
															"   \"amount\":1,",
															"   \"quote\":   {",
															"      \"account_name_receive\":\"issuing\",",
															"      \"account_name_send\":\"issuing\",",
															"      \"exchange_rate\":0.6046602,",
															"      \"limit_max\":1000,",
															"      \"quote_id\":pm.environment.get(\"quote_id\"),",
															"      \"quote_request\": {",
															"        \"limit_max\": 2000,",
															"        \"limit_min\": 1,",
															"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
															"        \"source_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
															"               },",
															"               \"target_asset\": {",
															"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
															"                   \"asset_type\": \"DO\",",
															"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
															"  },",
															"        \"time_expire\": 1644516034",
															"    },",
															"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
															"      \"time_expire\":1644516034,",
															"      \"time_start\":1544516034",
															"   }",
															"}",
															"",
															"let objJsonStr = JSON.stringify(obj);",
															"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
															"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
															"pm.test(\"response is ok\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
													"host": [
														"{{participant1-crypto-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"sign"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "7.OFI(participant1) sending exchange",
									"item": [
										{
											"name": "/client/exchange",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
												},
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"exchange"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "8.OFI(participant1) check exchang successfull status:4",
									"item": [
										{
											"name": "/client/quotes/request/{{request_id}}?",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
															"setTimeout(foo,300)",
															"function foo(){",
															"pm.test(\"quote status update to 1\", function () {",
															"    pm.expect(jsonData[0].status).to.equal(1);",
															"});",
															"    ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
													"host": [
														"{{global-quote-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"quotes",
														"request",
														"{{request_id}}"
													],
													"query": [
														{
															"key": "Authorization",
															"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "10.Issuing an invalid digital obligation",
					"item": [
						{
							"name": "participant1 issue DO name TEST not avaible",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets?asset_code=TEST&asset_type=DO",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "TEST"
												},
												{
													"key": "asset_type",
													"value": "DO"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "11.Redeeming Digital Assets without sufficient funds",
					"item": [
						{
							"name": "1. return DA",
							"item": [
								{
									"name": "/client/transactions/settle/da",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_name\": \"manager\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"anchor_id\": \"{{anchor_id}}\",\n    \"amount\": 10,\n    \"transaction_note\": \"note\",\n    \"creditor\": {\n        \"customer\": {\n            \"account\": {\n                \"account_number\": \"123213\",\n                \"account_type\": \"checking\",\n                \"routing_number\": \"w4345\"\n            },\n            \"name\": \"Maria\",\n            \"address\": {\n                \"building_number\": \"20681\",\n                \"country\": \"us\",\n                \"postal_code\": \"92811\",\n                \"street\": \"Balestier road\",\n                \"city\": \"san jose\",\n                \"state\": \"ca\"\n            },\n            \"id\": \"123\"\n        },\n        \"institution\": {\n            \"participant_id\": \"tempo\",\n            \"name\": \"Bank of America\"\n        },\n        \"payout_point\": {\n            \"type\": \"FinancialInstitute\",\n            \"name\": \"Tempo\",\n            \"currencies_accepted\": [\n                \"USD\"\n            ],\n            \"routing_number\": \"123232424\",\n            \"image\": \"\",\n            \"url\": \"\",\n            \"telephone\": \"07-418 6258 / 6276\",\n            \"member_of\": [\n                \"Bank\"\n            ],\n            \"address\": {\n                \"building_number\": \"20681\",\n                \"country\": \"US\",\n                \"postal_code\": \"92811\",\n                \"street\": \"Balestier road\",\n                \"city\": \"san jose\",\n                \"state\": \"ca\"\n            },\n            \"geo\": {\n                \"latitude\": 1.8482097,\n                \"longitude\": 102.93248110000002\n            },\n            \"categories\": [\n                {\n                    \"name\": \"delivery\",\n                    \"options\": [\n                        {\n                            \"description\": \"Deliver USD to home address\",\n                            \"terms\": \"Limit of 1,000 USD\"\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"agency_pickup\",\n                    \"options\": [\n                        {\n                            \"description\": \"Pick-up USD from kiosk\",\n                            \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                        }\n                    ]\n                }\n            ],\n            \"opening_hours\": [\n                {\n                    \"day_of_week\": [\n                        \"Monday\",\n                        \"Tuesday\",\n                        \"Wednesday\",\n                        \"Thursday\"\n                    ],\n                    \"opens\": \"09:15\",\n                    \"closes\": \"16:30\"\n                },\n                {\n                    \"day_of_week\": [\n                        \"Friday\"\n                    ],\n                    \"opens\": \"09:15\",\n                    \"closes\": \"16:00\"\n                }\n            ]\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/transactions/settle/da",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"settle",
												"da"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b6288461-d70e-45dc-8381-73855336b100",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "22ad3534-bedb-4867-8230-eebbf9a7c3f9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}