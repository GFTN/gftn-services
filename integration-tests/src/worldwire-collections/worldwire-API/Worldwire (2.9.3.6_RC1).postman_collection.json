{
	"info": {
		"_postman_id": "e6197736-68c8-4d5c-ab3c-08629096adea",
		"name": "Worldwire (2.9.3.6_RC1)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0.0.0 request JWT",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "Step 1 {{root}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti1\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{xiid}}",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"{{env_version}}\",\n    \"acc\":[\"issuing\",\"default\"],\n    \"ver\": \"2.9.0.2\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"219.74.15.207\",\n        \"202.135.245.2\"\n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n    \t\"/v1/admin/pr\",\n    \t\"/v1/admin/pr/domain\",\n    \t\"/v1/admin/pr/country\",\n    \t\"/v1/onboarding/accounts\",\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/client/assets\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/client/transactions/settle/do\",\n        \"/v1/client/transactions/settle/da\",\n        \"/v1/client/payout\",\n        \"/v1/client/service_check\",\n        \"/v1/client/accounts\",\n        \"/v1/client/assets/participants\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{root}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{xiid}}"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti1}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{root}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p1-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{xiid}}"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti1}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{root}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p1-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{root}}/auth/jwt/refresh",
									"host": [
										"{{root}}"
									],
									"path": [
										"auth",
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{root}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/api/v1/onboarding/operatingaccount\",\n\t\"ip\": \"100.96.2.5\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "Step 1 {{root}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti2\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{xiid}}",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"{{env_version}}\",\n    \"acc\":[\"issuing\",\"default\"],\n    \"ver\": \"2.9.0.2\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"219.74.15.207\",\n        \"202.135.245.2\"\n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n    \t\"/v1/admin/pr\",\n    \t\"/v1/onboarding/accounts\",\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/client/assets\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/client/transactions/settle/do\",\n        \"/v1/client/transactions/settle/da\",\n        \"/v1/client/payout\",\n        \"/v1/client/accounts\",\n        \"/v1/client/assets/participants\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{participant2_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{root}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{xiid}}"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti2}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{root}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p2-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{xiid}}"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti2}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{root}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p2-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{root}}/auth/jwt/refresh",
									"host": [
										"{{root}}"
									],
									"path": [
										"auth",
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{root}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/v1/onboarding/operatingaccount\",\n\t\"ip\": \"100.96.2.5\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "Step 1 {{root}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti3\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "-LPmrF0Qgg6fshzLc48i",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"{{env_version}}\",\n    \"acc\":[\"issuing\"],\n    \"ver\": \"2.9.0.2\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"219.74.15.207\",\n        \"202.135.245.2\"\n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/client/assets\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/anchor/trust\",\n        \"/v1/anchor/fundings/instruction\",\n        \"/v1/anchor/fundings/send\",\n        \"/v1/client/balances/da\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{anchor_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{root}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "-LPmrF0Qgg6fshzLc48i"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti3}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{root}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"anchor-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "-LPmrF0Qgg6fshzLc48i"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti3}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{root}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"anchor-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{root}}/auth/jwt/refresh",
									"host": [
										"{{root}}"
									],
									"path": [
										"auth",
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{root}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/v1/onboarding/operatingaccount\",\n\t\"ip\": \"100.96.2.5\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "0.0 onboarding",
			"item": [
				{
					"name": "onboard anchor",
					"item": [
						{
							"name": "/admin/pr",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{anchor_id}}\",\n    \"bic\": \"USAUSAGF001\",\n    \"country_code\": \"{{anchor_country_code}}\",\n    \"role\": \"IS\",\n    \"status\": \"inactive\",\n    \"url_callback\": \"https://api.stronghold.co/v1/venues\"\n}"
								},
								"url": {
									"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
									"host": [
										"{{global-pr-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"pr"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr/{participant_id}/status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"active\"}"
								},
								"url": {
									"raw": "{{global-pr-url}}/{{service-version}}/gftn/pr/{{anchor_id}}/status",
									"host": [
										"{{global-pr-url}}"
									],
									"path": [
										"{{service-version}}",
										"gftn",
										"pr",
										"{{anchor_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/register",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"address\": \"{{anchor_pkey}}\"}"
								},
								"url": {
									"raw": "{{global-anchor-url}}/{{service-version}}/admin/anchor/{{anchor_id}}/register",
									"host": [
										"{{global-anchor-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"register"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant1",
					"item": [
						{
							"name": "/admin/pr/{participant_id}/status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"active\"}"
								},
								"url": {
									"raw": "{{global-pr-url}}/{{service-version}}/admin/pr/{{participant1_id}}/status",
									"host": [
										"{{global-pr-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"pr",
										"{{participant1_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr/{participant_id}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bic\": \"{{participant1_bic}}\",\n    \"country_code\": \"{{participant1_country_code}}\",\n    \"id\": \"{{participant1_id}}\",\n    \"operating_accounts\": [],\n    \"role\": \"MM\",\n    \"status\": \"active\",\n    \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n}"
								},
								"url": {
									"raw": "{{global-pr-url}}/{{service-version}}/admin/pr/{{participant1_id}}/status",
									"host": [
										"{{global-pr-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"pr",
										"{{participant1_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"bic\": \"{{participant1_bic}}\",\n        \"country_code\": \"{{participant1_country_code}}\",\n        \"id\": \"{{participant1_id}}\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n    }"
								},
								"url": {
									"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
									"host": [
										"{{global-pr-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"pr"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/admin/pr/{participant_id}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"bic\": \"{{participant2_bic}}\",\n        \"country_code\": \"{{participant2_country_code}}\",\n        \"id\": \"{{participant2_id}}\",\n        \"operating_accounts\":[],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant2-callback-url}}/v1/callback\"\n    }"
								},
								"url": {
									"raw": "{{global-pr-url}}/{{service-version}}/admin/pr/{{participant1_id}}",
									"host": [
										"{{global-pr-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"pr",
										"{{participant1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr/{participant_id}/status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\"\n}"
								},
								"url": {
									"raw": "{{global-pr-url}}/{{service-version}}/admin/pr/{{participant2_id}}/status",
									"host": [
										"{{global-pr-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"pr",
										"{{participant2_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"bic\": \"{{participant2_bic}}\",\n        \"country_code\": \"{{participant2_country_code}}\",\n        \"id\": \"{{participant2_id}}\",\n        \"operating_accounts\":[],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant2-callback-url}}/v1/callback\"\n    }"
								},
								"url": {
									"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
									"host": [
										"{{global-pr-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"pr"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "/admin/pr",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{global-pr-url}}/{{service-version}}/admin/pr",
							"host": [
								"{{global-pr-url}}"
							],
							"path": [
								"{{service-version}}",
								"admin",
								"pr"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0. create Accounts",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/onboarding/operatingaccount/{account_name}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/operatingaccount/default",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"onboarding",
										"operatingaccount",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/onboarding/issuingaccount",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/issuingaccount",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"onboarding",
										"issuingaccount"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/onboarding/operatingaccount/{account_name}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-api-url}}/{{service-version}}/onboarding/operatingaccount/default",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"onboarding",
										"operatingaccount",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/onboarding/issuingaccount",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-api-url}}/{{service-version}}/onboarding/issuingaccount",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"onboarding",
										"issuingaccount"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "0.1 get account",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/onboarding/accounts/{account_name} default",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/accounts/default",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"onboarding",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/onboarding/accounts/{account_name} issuing",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/onboarding/operatingaccount/issuing",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"onboarding",
										"operatingaccount",
										"issuing"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/onboarding/accounts/{account_name} default",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-api-url}}/{{service-version}}/onboarding/accounts/default",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"onboarding",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/onboarding/accounts/{account_name} issuing",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-api-url}}/{{service-version}}/onboarding/accounts/issuing",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"onboarding",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "1. issue assets",
			"item": [
				{
					"name": "- create a digital obligation",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets?asset_code=NZDDO&asset_type=DO",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "NZDDO"
												},
												{
													"key": "asset_type",
													"value": "DO"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets?asset_code=FJDDO&asset_type=DO",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "FJDDO"
												},
												{
													"key": "asset_type",
													"value": "DO"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets EUR DA",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-anchor-url}}/{{service-version}}/admin/anchor/{{anchor_id}}/onboard/assets?asset_code=EUR&asset_type=DA",
									"host": [
										"{{global-anchor-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"onboard",
										"assets"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "EUR"
										},
										{
											"key": "asset_type",
											"value": "DA"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets USD DA",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-anchor-url}}/{{service-version}}/admin/anchor/{{anchor_id}}/onboard/assets?asset_code=USD&asset_type=DA",
									"host": [
										"{{global-anchor-url}}"
									],
									"path": [
										"{{service-version}}",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"onboard",
										"assets"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USD"
										},
										{
											"key": "asset_type",
											"value": "DA"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "2. get assets",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/assets - asset issue by WW",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/assets",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/accounts/{account_name} issuing - trusted asset",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/issuing",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"assets",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/accounts/{account_name} default - trusted asset",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/default",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"assets",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/issued",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/issued",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"assets",
										"issued"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/client/assets - asset issue by WW",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-api-url}}/{{service-version}}/client/assets",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/issued",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/issued",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"assets",
										"issued"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/accounts/{account_name} default - trusted asset",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/default",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"assets",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/accounts/{account_name} issuing - trusted asset",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/issuing",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"assets",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "3. Get participants",
			"item": [
				{
					"name": "- retrieve a specific participant",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/participants",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/participants/{{participant1_id}}",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"{{participant1_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/participants",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/participants/{{participant2_id}}",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants",
												"{{participant2_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- list all participants",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/participants",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/participants?",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants"
											],
											"query": [
												{
													"key": "country_code",
													"value": "{{participant1_country_code}}",
													"disabled": true
												},
												{
													"key": "asset_code",
													"value": "NZDDO",
													"disabled": true
												},
												{
													"key": "issuer_id",
													"value": "{{participant1_id}}",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/participants",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/participants?country_code={{participant2_country_code}}&asset_code=FJDDO&issuer_id={{participant2_id}}",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"participants"
											],
											"query": [
												{
													"key": "country_code",
													"value": "{{participant2_country_code}}"
												},
												{
													"key": "asset_code",
													"value": "FJDDO"
												},
												{
													"key": "issuer_id",
													"value": "{{participant2_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "4. whitelist",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/participants/whitelist add participant2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist add anchor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{anchor_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/client/whitelist/participants",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist add participant1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist add anchor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{anchor_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "/client/participants/whitelist participant1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist participant2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-whitelist-url}}/{{service-version}}/client/participants/whitelist",
									"host": [
										"{{global-whitelist-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "5. trust assets",
			"item": [
				{
					"name": "DO",
					"item": [
						{
							"name": "request",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\": \"{{participant2_id}}\",\n      \"limit\": 9999\n }"
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=FJDDO",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "FJDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\": \"{{participant1_id}}\",\n      \"limit\": 9999\n }"
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=NZDDO",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "NZDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "allow",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\": \"{{participant2_id}}\",\n      \"limit\": 9999\n }"
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/trust?permission=allow&asset_code=NZDDO",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "NZDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\": \"issuing\",\n      \"participant_id\":\"{{participant1_id}}\",\n      \"limit\": 9999\n }"
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/trust?permission=allow&asset_code=FJDDO",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "FJDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DA",
					"item": [
						{
							"name": "request",
							"item": [
								{
									"name": "participant1 request trust to anchor",
									"item": [
										{
											"name": "/client/trust USD DA default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=USD",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "USD"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust EUR DA default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\":\"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=EUR",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "EUR"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust USD DA issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=USD",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "USD"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust EUR DA issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\":\"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=EUR",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "EUR"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2 request trust to anchor",
									"item": [
										{
											"name": "/client/trust EUR DA issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\":\"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=EUR",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "EUR"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust EUR DA default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\":\"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=EUR",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "EUR"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust USD DA default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\":\"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=USD",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "USD"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust USD DA issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n      \"account_name\":\"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\":4000 \n    \n }"
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/trust?permission=request&asset_code=USD",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "request"
														},
														{
															"key": "asset_code",
															"value": "USD"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "allow",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "allow trust EUR DA participant1 default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"account_name\":\"default\",\r\n\t\"participant_id\": \"{{participant1_id}}\",\r\n\t\"limit\":4000\t\r\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code=EUR&anchor_id={{anchor_id}}",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "EUR"
														},
														{
															"key": "anchor_id",
															"value": "{{anchor_id}}"
														},
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust USD DA participant1 issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"account_name\":\"issuing\",\r\n\t\"participant_id\": \"{{participant1_id}}\",\r\n\t\"limit\":4000\t\r\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code=USD&anchor_id={{anchor_id}}",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "USD"
														},
														{
															"key": "anchor_id",
															"value": "{{anchor_id}}"
														},
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust USD DA participant1 default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"account_name\":\"default\",\r\n\t\"participant_id\": \"{{participant1_id}}\",\r\n\t\"limit\":4000\t\r\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code=USD&anchor_id={{anchor_id}}",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "USD"
														},
														{
															"key": "anchor_id",
															"value": "{{anchor_id}}"
														},
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust EUR DA participant1 issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"account_name\":\"issuing\",\r\n\t\"participant_id\": \"{{participant1_id}}\",\r\n\t\"limit\":4000\t\r\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code=EURDA&anchor_id={{anchor_id}}",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "EURDA"
														},
														{
															"key": "anchor_id",
															"value": "{{anchor_id}}"
														},
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "allow trust EUR DA participant2 issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"account_name\":\"issuing\",\r\n\t\"participant_id\": \"{{participant2_id}}\",\r\n\t\"limit\":4000\t\r\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code=EUR&anchor_id={{anchor_id}}",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "EUR"
														},
														{
															"key": "anchor_id",
															"value": "{{anchor_id}}"
														},
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust USD participant2 default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"account_name\":\"default\",\r\n\t\"participant_id\": \"{{participant2_id}}\",\r\n\t\"limit\":4000\t\r\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code=USD&anchor_id={{anchor_id}}",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "USD"
														},
														{
															"key": "anchor_id",
															"value": "{{anchor_id}}"
														},
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust USD participant2 issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"account_name\":\"issuing\",\r\n\t\"participant_id\": \"{{participant2_id}}\",\r\n\t\"limit\":4000\t\r\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code=USD&anchor_id={{anchor_id}}",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "USD"
														},
														{
															"key": "anchor_id",
															"value": "{{anchor_id}}"
														},
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust EUR DA participant2 default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"account_name\":\"default\",\r\n\t\"participant_id\": \"{{participant2_id}}\",\r\n\t\"limit\":4000\t\r\n}"
												},
												"url": {
													"raw": "{{global-anchor-url}}/{{service-version}}/anchor/trust?permission=allow&asset_code=EUR&anchor_id={{anchor_id}}",
													"host": [
														"{{global-anchor-url}}"
													],
													"path": [
														"{{service-version}}",
														"anchor",
														"trust"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow"
														},
														{
															"key": "asset_code",
															"value": "EUR"
														},
														{
															"key": "anchor_id",
															"value": "{{anchor_id}}"
														},
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "6. get asset",
			"item": [
				{
					"name": "- list all assets",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- list trusted assets from a specific account",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets/accounts/{account_name} issuing",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/issuing",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/accounts/{account_name} default",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/accounts/default",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"default"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets/accounts/{account_name} issuing",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/issuing",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/accounts/{account_name} default",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/accounts/default",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"accounts",
												"default"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- list your issued assets",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/issued",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/issued",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- list a participant's assets",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets/participants/{participant_id}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/participants/{{participant1_id}}?type=both",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"participants",
												"{{participant1_id}}"
											],
											"query": [
												{
													"key": "type",
													"value": "both"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets/participants/{participant_id}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/participants/{{participant2_id}}?type=both",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"participants",
												"{{participant2_id}}"
											],
											"query": [
												{
													"key": "type",
													"value": "both"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "7. exchange",
			"item": [
				{
					"name": "- 0 exchange NZDDO FJDDO",
					"item": [
						{
							"name": "1.OFI request quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
											"setTimeout(1000)",
											"postman.setNextRequest('OFI get quotes1')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"time_expire\": 1644775314,\n  \"limit_max\": 90,\n  \"limit_min\": 20,\n               \"source_asset\": {\n                   \"asset_code\": \"NZDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"FJDDO\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  },\n  \"ofi_id\": \"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.OFI get quotes1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(1);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3.[cryptoservice] RFI quote response signing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
										"exec": [
											"",
											"let obj = {",
											"    \"account_name_receive\": \"issuing\",",
											"    \"account_name_send\": \"issuing\",",
											"    \"exchange_rate\": 0.6046602,",
											"    \"limit_max\": 1000,",
											"    \"quote_id\": pm.environment.get(\"quote_id\"),",
											"    \"quote_request\": {",
											"        \"time_expire\": 1644516034,",
											"        \"limit_max\": 2000,",
											"        \"limit_min\": 1,",
											"        \"source_asset\": {",
											"                   \"asset_code\": \"NZDDO\",",
											"                   \"asset_type\": \"DO\",",
											"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
											"               },",
											"               \"target_asset\": {",
											"                   \"asset_code\": \"FJDDO\",",
											"                   \"asset_type\": \"DO\",",
											"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
											"  },",
											"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
											"        ",
											"    },",
											"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
											"    \"time_expire\": 1644516034,",
											"    \"time_start\": 1544516034",
											"}",
											"",
											"let objJsonStr = JSON.stringify(obj);",
											"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
											"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
											"pm.globals.set(\"variable_key\", \"variable_value\");",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
								},
								"url": {
									"raw": "https://{{participant2-crypto-url}}/{{service-version}}/client/sign",
									"protocol": "https",
									"host": [
										"{{participant2-crypto-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.RFI post quote envelope Base64",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quote\":  \"{{objJsonB64QuoteR}}\",\n    \"signature\":\"{{signed_payload_RFI}}\"\n    }"
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"{{quote_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.OFI get quotes2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(2);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.[cryptoservice] OFI exchange request signing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
										"exec": [
											"let obj = {",
											"   \"account_name_receive\":\"issuing\",",
											"   \"account_name_send\":\"issuing\",",
											"   \"amount\":1,",
											"   \"quote\":   {",
											"      \"account_name_receive\":\"issuing\",",
											"      \"account_name_send\":\"issuing\",",
											"      \"exchange_rate\":0.6046602,",
											"      \"limit_max\":1000,",
											"      \"quote_id\":pm.environment.get(\"quote_id\"),",
											"      \"quote_request\": {",
											"        \"limit_max\": 2000,",
											"        \"limit_min\": 1,",
											"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
											"        \"source_asset\": {",
											"                   \"asset_code\": \"NZDDO\",",
											"                   \"asset_type\": \"DO\",",
											"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
											"               },",
											"               \"target_asset\": {",
											"                   \"asset_code\": \"FJDDO\",",
											"                   \"asset_type\": \"DO\",",
											"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
											"  },",
											"        \"time_expire\": 1644516034",
											"    },",
											"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
											"      \"time_expire\":1644516034,",
											"      \"time_start\":1544516034",
											"   }",
											"}",
											"",
											"let objJsonStr = JSON.stringify(obj);",
											"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
											"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"account_name\": \"issuing\",\n \"payload\" : \"{{objJsonB64ExchangeR}}\"}"
								},
								"url": {
									"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
									"host": [
										"{{participant1-crypto-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "7.OFI execute exchange request Base64",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"exchange\":\"{{objJsonB64ExchangeR}}\",\n    \"signature\":\"{{signed_payload_OFI}}\"\n    }"
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"exchange"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.OFI get quotes3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(1);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- 1 exchange USD EUR",
					"item": [
						{
							"name": "1.OFI request quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
											"setTimeout(1000)",
											"postman.setNextRequest('OFI get quotes1')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"time_expire\": 1644775314,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"USD\",\n        \"asset_type\": \"DA\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"EUR\",\n        \"asset_type\": \"DA\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.OFI get quotes1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(1);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3.[cryptoservice] RFI quote response signing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
										"exec": [
											"",
											"let obj = {",
											"    \"account_name_receive\": \"default\",",
											"    \"account_name_send\": \"default\",",
											"    \"exchange_rate\": 0.6046602,",
											"    \"limit_max\": 1000,",
											"    \"quote_id\": pm.environment.get(\"quote_id\"),",
											"    \"quote_request\": {",
											"        \"time_expire\": 1644516034,",
											"        \"limit_max\": 2000,",
											"        \"limit_min\": 1,",
											"        \"source_asset\": {",
											"                   \"asset_code\": \"USD\",",
											"                   \"asset_type\": \"DA\",",
											"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
											"               },",
											"               \"target_asset\": {",
											"                   \"asset_code\": \"EUR\",",
											"                   \"asset_type\": \"DA\",",
											"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
											"  },",
											"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
											"        ",
											"    },",
											"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
											"    \"time_expire\": 1644516034,",
											"    \"time_start\": 1544516034",
											"}",
											"",
											"let objJsonStr = JSON.stringify(obj);",
											"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
											"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
											"pm.globals.set(\"variable_key\", \"variable_value\");",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"account_name\": \"default\",\n \"payload\" : \"{{objJsonB64QuoteR}}\"}"
								},
								"url": {
									"raw": "{{participant2-crypto-url}}/{{service-version}}/client/sign",
									"host": [
										"{{participant2-crypto-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.RFI post quote envelope Base64",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quote\":  \"{{objJsonB64QuoteR}}\",\n    \"signature\":\"{{signed_payload_RFI}}\"\n    }"
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"{{quote_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.OFI get quotes2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(2);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.[cryptoservice] OFI exchange request signing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
										"exec": [
											"let obj = {",
											"   \"account_name_receive\":\"default\",",
											"   \"account_name_send\":\"default\",",
											"   \"amount\":1,",
											"   \"quote\":   {",
											"      \"account_name_receive\":\"default\",",
											"      \"account_name_send\":\"default\",",
											"      \"exchange_rate\":0.6046602,",
											"      \"limit_max\":1000,",
											"      \"quote_id\":pm.environment.get(\"quote_id\"),",
											"      \"quote_request\": {",
											"        \"limit_max\": 2000,",
											"        \"limit_min\": 1,",
											"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
											"        \"source_asset\": {",
											"                   \"asset_code\": \"USD\",",
											"                   \"asset_type\": \"DA\",",
											"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
											"               },",
											"               \"target_asset\": {",
											"                   \"asset_code\": \"EUR\",",
											"                   \"asset_type\": \"DA\",",
											"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
											"  },",
											"        \"time_expire\": 1644516034",
											"    },",
											"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
											"      \"time_expire\":1644516034,",
											"      \"time_start\":1544516034",
											"   }",
											"}",
											"",
											"let objJsonStr = JSON.stringify(obj);",
											"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
											"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"account_name\": \"default\",\n \"payload\" : \"{{objJsonB64ExchangeR}}\"}"
								},
								"url": {
									"raw": "{{participant1-crypto-url}}/{{service-version}}/client/sign",
									"host": [
										"{{participant1-crypto-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "7.OFI execute exchange request Base64",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"exchange\":\"{{objJsonB64ExchangeR}}\",\n    \"signature\":\"{{signed_payload_OFI}}\"\n    }"
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/exchange",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"exchange"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.OFI get quotes3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(1);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}?",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fe485642-b64d-46af-9134-9eaaf01fb2c6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ab510973-c4fd-4b89-bb84-304d055c2e67",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "8. payment",
			"item": [
				{
					"name": "DO",
					"item": [
						{
							"name": "participant1 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"message_type\": \"pacs.008.001.07\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+TlpERE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAxMTQ8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dETzwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+aWJtb25lPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmlzc3Vpbmc8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxQbXRUcEluZj4KICAgICAgICAgICAgICAgIDxTdmNMdmw+CiAgICAgICAgICAgICAgICAgICAgPFBydHJ5PmlibW9uZTwvUHJ0cnk+CiAgICAgICAgICAgICAgICA8L1N2Y0x2bD4KICAgICAgICAgICAgPC9QbXRUcEluZj4KICAgICAgICAgICAgPEluc3RnQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0FCMDAwPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPmlibW9uZTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RnQWd0PgogICAgICAgICAgICA8SW5zdGRBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+aWJtdHdvPC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvSW5zdGRBZ3Q+CiAgICAgICAgPC9HcnBIZHI+CiAgICAgICAgPENkdFRyZlR4SW5mPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8SW5zdHJJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExNDwvSW5zdHJJZD4KICAgICAgICAgICAgICAgIDxFbmRUb0VuZElkPk5aRERPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMTE0PC9FbmRUb0VuZElkPgogICAgICAgICAgICAgICAgPFR4SWQ+TlpERE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAxMTQ8L1R4SWQ+CiAgICAgICAgICAgIDwvUG10SWQ+CiAgICAgICAgICAgIDxJbnRyQmtTdHRsbUFtdCBDY3k9Ik5aRERPIj4xPC9JbnRyQmtTdHRsbUFtdD4KICAgICAgICAgICAgPEludHJCa1N0dGxtRHQ+MjAxNS0wOS0yOTwvSW50ckJrU3R0bG1EdD4KICAgICAgICAgICAgPFhjaGdSYXRlPjEuMjwvWGNoZ1JhdGU+CiAgICAgICAgICAgIDxDaHJnQnI+Q1JFRDwvQ2hyZ0JyPgogICAgICAgICAgICA8Q2hyZ3NJbmY+CiAgICAgICAgICAgICAgICA8QW10IENjeT0iTlpERE8iPjI8L0FtdD4KICAgICAgICAgICAgICAgIDxBZ3Q+CiAgICAgICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICAgICAgPC9BZ3Q+CiAgICAgICAgICAgIDwvQ2hyZ3NJbmY+CiAgICAgICAgICAgIDxEYnRyPgogICAgICAgICAgICAgICAgPE5tPkFCQyBDb3Jwb3JhdGlvbjwvTm0+CiAgICAgICAgICAgICAgICA8UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8U3RydE5tPlRpbWVzIFNxdWFyZTwvU3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxCbGRnTmI+NzwvQmxkZ05iPgogICAgICAgICAgICAgICAgICAgIDxQc3RDZD5OWSAxMDAzNjwvUHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPFR3bk5tPk5ldyBZb3JrPC9Ud25ObT4KICAgICAgICAgICAgICAgICAgICA8Q3RyeT5VUzwvQ3RyeT4KICAgICAgICAgICAgICAgIDwvUHN0bEFkcj4KICAgICAgICAgICAgPC9EYnRyPgogICAgICAgICAgICA8RGJ0ckFjY3Q+CiAgICAgICAgICAgICAgICA8SWQ+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD4wMDEyNTU3NDk5OTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9JZD4KICAgICAgICAgICAgPC9EYnRyQWNjdD4KICAgICAgICAgICAgPERidHJBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VFdEQUJDREUxMDE8L0JJQ0ZJPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0RidHJBZ3Q+CiAgICAgICAgICAgIDxDZHRyQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9DZHRyQWd0PgogICAgICAgICAgICA8Q2R0cj4KICAgICAgICAgICAgICAgIDxObT5ERUYgRWxlY3Ryb25pY3M8L05tPgogICAgICAgICAgICAgICAgPFBzdGxBZHI+CiAgICAgICAgICAgICAgICAgICAgPFN0cnRObT5NYXJrIExhbmU8L1N0cnRObT4KICAgICAgICAgICAgICAgICAgICA8QmxkZ05iPjU1PC9CbGRnTmI+CiAgICAgICAgICAgICAgICAgICAgPFBzdENkPkVDM1I3TkU8L1BzdENkPgogICAgICAgICAgICAgICAgICAgIDxUd25ObT5Mb25kb248L1R3bk5tPgogICAgICAgICAgICAgICAgICAgIDxDdHJ5PkdCPC9DdHJ5PgogICAgICAgICAgICAgICAgICAgIDxBZHJMaW5lPkNvcm4gRXhjaGFuZ2UgNXRoIEZsb29yPC9BZHJMaW5lPgogICAgICAgICAgICAgICAgPC9Qc3RsQWRyPgogICAgICAgICAgICA8L0NkdHI+CiAgICAgICAgICAgIDxDZHRyQWNjdD4KICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPjIzNjgzNzA3OTk0MjE1PC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICA8L0NkdHJBY2N0PgogICAgICAgIDwvQ2R0VHJmVHhJbmY+CiAgICA8L0ZJVG9GSUNzdG1yQ2R0VHJmPgo8L0RvY3VtZW50Pg==\"\n}"
										},
										"url": {
											"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
											"host": [
												"{{participant1-send-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 receive",
							"item": [
								{
									"name": "/transactions/receive",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIyMjIyMkFBQVdXV1dXNzc3MDAwMDAwMDIyMjU8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dETzwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+aWJtdHdvPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmlzc3Vpbmc8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5pYm10d288L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPmlibW9uZTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HRFFaUVlIVzZJWDdFR1JPUlA1QzJKM0FLMlI2RVZCRzNNQUNINlJORVVXNUdOVkRCUzJKS1NJQjwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExNDwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPk5aRERPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMTE0PC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+TlpERE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAxMTQ8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5OWkRETzEzMjIwMTlGSklGSklHRjAwMTE1NTAwNTYxMDExNDwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
										},
										"url": {
											"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/receive",
											"host": [
												"{{participant2-send-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"receive"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DA",
					"item": [
						{
							"name": "participant1 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"message_type\": \"pacs.008.001.07\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDguMDAxLjA3Ij4KICAgIDxGSVRvRklDc3RtckNkdFRyZj4KICAgICAgICA8R3JwSGRyPgogICAgICAgICAgICA8TXNnSWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQxPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmRlZmF1bHQ8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxQbXRUcEluZj4KICAgICAgICAgICAgICAgIDxTdmNMdmw+CiAgICAgICAgICAgICAgICAgICAgPFBydHJ5PnN0cm9uZ2hvbGQ8L1BydHJ5PgogICAgICAgICAgICAgICAgPC9TdmNMdmw+CiAgICAgICAgICAgIDwvUG10VHBJbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNBQjAwMDwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDE8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MjwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxDZHRUcmZUeEluZj4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEluc3RySWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L0luc3RySWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5VU0REQTI1MDIyMDE5VFBUUFRQVFA5OTkwMDAwMDAwMDAwMzwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPlVTRERBMjUwMjIwMTlUUFRQVFBUUDk5OTAwMDAwMDAwMDAzPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgICAgICA8SW50ckJrU3R0bG1BbXQgQ2N5PSJVU0QiPjE8L0ludHJCa1N0dGxtQW10PgogICAgICAgICAgICA8SW50ckJrU3R0bG1EdD4yMDE1LTA5LTI5PC9JbnRyQmtTdHRsbUR0PgogICAgICAgICAgICA8WGNoZ1JhdGU+MS4yPC9YY2hnUmF0ZT4KICAgICAgICAgICAgPENocmdCcj5DUkVEPC9DaHJnQnI+CiAgICAgICAgICAgIDxDaHJnc0luZj4KICAgICAgICAgICAgICAgIDxBbXQgQ2N5PSJVU0QiPjAuMTwvQW10PgogICAgICAgICAgICAgICAgPEFndD4KICAgICAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlVTRFZXWFlaNzc3PC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICA8L0FndD4KICAgICAgICAgICAgPC9DaHJnc0luZj4KICAgICAgICAgICAgPERidHI+CiAgICAgICAgICAgICAgICA8Tm0+QUJDIENvcnBvcmF0aW9uPC9ObT4KICAgICAgICAgICAgICAgIDxQc3RsQWRyPgogICAgICAgICAgICAgICAgICAgIDxTdHJ0Tm0+VGltZXMgU3F1YXJlPC9TdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgPEJsZGdOYj43PC9CbGRnTmI+CiAgICAgICAgICAgICAgICAgICAgPFBzdENkPk5ZIDEwMDM2PC9Qc3RDZD4KICAgICAgICAgICAgICAgICAgICA8VHduTm0+TmV3IFlvcms8L1R3bk5tPgogICAgICAgICAgICAgICAgICAgIDxDdHJ5PlVTPC9DdHJ5PgogICAgICAgICAgICAgICAgPC9Qc3RsQWRyPgogICAgICAgICAgICA8L0RidHI+CiAgICAgICAgICAgIDxEYnRyQWNjdD4KICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPjAwMTI1NTc0OTk5PC9JZD4KICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICA8L0lkPgogICAgICAgICAgICA8L0RidHJBY2N0PgogICAgICAgICAgICA8RGJ0ckFndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5UV0RBQkNERTEwMTwvQklDRkk+CiAgICAgICAgICAgICAgICA8L0Zpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvRGJ0ckFndD4KICAgICAgICAgICAgPENkdHJBZ3Q+CiAgICAgICAgICAgICAgICA8RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8QklDRkk+VVNEVldYWVo3Nzc8L0JJQ0ZJPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0NkdHJBZ3Q+CiAgICAgICAgICAgIDxDZHRyPgogICAgICAgICAgICAgICAgPE5tPkRFRiBFbGVjdHJvbmljczwvTm0+CiAgICAgICAgICAgICAgICA8UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICA8U3RydE5tPk1hcmsgTGFuZTwvU3RydE5tPgogICAgICAgICAgICAgICAgICAgIDxCbGRnTmI+NTU8L0JsZGdOYj4KICAgICAgICAgICAgICAgICAgICA8UHN0Q2Q+RUMzUjdORTwvUHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgPFR3bk5tPkxvbmRvbjwvVHduTm0+CiAgICAgICAgICAgICAgICAgICAgPEN0cnk+R0I8L0N0cnk+CiAgICAgICAgICAgICAgICAgICAgPEFkckxpbmU+Q29ybiBFeGNoYW5nZSA1dGggRmxvb3I8L0FkckxpbmU+CiAgICAgICAgICAgICAgICA8L1BzdGxBZHI+CiAgICAgICAgICAgIDwvQ2R0cj4KICAgICAgICAgICAgPENkdHJBY2N0PgogICAgICAgICAgICAgICAgPElkPgogICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8SWQ+MjM2ODM3MDc5OTQyMTU8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgIDwvQ2R0ckFjY3Q+CiAgICAgICAgPC9DZHRUcmZUeEluZj4KICAgIDwvRklUb0ZJQ3N0bXJDZHRUcmY+CjwvRG9jdW1lbnQ+\"\n}"
										},
										"url": {
											"raw": "{{participant1-send-url}}/{{service-version}}/client/transactions/send",
											"host": [
												"{{participant1-send-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 receive",
							"item": [
								{
									"name": "/transactions/receive",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"message_type\": \"ibwf.001.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDEuMDAxLjAxIj4KICAgIDxGZWRDb21wUmVzPgogICAgICAgIDxHcnBIZHI+CiAgICAgICAgICAgIDxNc2dJZD5XV1dXVzIyMjIyMkFBQVdXV1dXNzc3MDAwMDAwMDIyMjU8L01zZ0lkPgogICAgICAgICAgICA8Q3JlRHRUbT4yMDE1LTA5LTI4VDE2OjAwOjAwPC9DcmVEdFRtPgogICAgICAgICAgICA8TmJPZlR4cz4xPC9OYk9mVHhzPgogICAgICAgICAgICA8U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8U3R0bG1NdGQ+V1dEQTwvU3R0bG1NdGQ+CiAgICAgICAgICAgICAgICA8U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWQ+cGFydGljaXBhbnQyPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPE5tPmRlZmF1bHQ8L05tPgogICAgICAgICAgICAgICAgPC9TdHRsbUFjY3Q+CiAgICAgICAgICAgIDwvU3R0bG1JbmY+CiAgICAgICAgICAgIDxJbnN0Z0FndD4KICAgICAgICAgICAgICAgIDxGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxCSUNGST5VU0RWV1hZWjc3NzwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgPE90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJZD5wYXJ0aWNpcGFudDI8L0lkPgogICAgICAgICAgICAgICAgICAgIDwvT3Rocj4KICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgPC9JbnN0Z0FndD4KICAgICAgICAgICAgPEluc3RkQWd0PgogICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgPEJJQ0ZJPlRXREFCQ0RFMTAxPC9CSUNGST4KICAgICAgICAgICAgICAgICAgICA8T3Rocj4KICAgICAgICAgICAgICAgICAgICAgICAgPElkPnBhcnRpY2lwYW50MTwvSWQ+CiAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICA8L0luc3RkQWd0PgogICAgICAgIDwvR3JwSGRyPgogICAgICAgIDxGZWRSZXM+CiAgICAgICAgICAgIDxBY2NJZD5HQ0cyS0VHRkpJTE9BV0VPQlhOT0dKVUU1WEVBUjZCN01XVldHN0ZYQ0pVSTZXTlhTTVdJQkxIWjwvQWNjSWQ+CiAgICAgICAgICAgIDxGZWRTdHM+QUNUQzwvRmVkU3RzPgogICAgICAgICAgICA8UG10SWQ+CiAgICAgICAgICAgICAgICA8RW5kVG9FbmRJZD5VU0REQTI1MDIyMDE5VFBUUFRQVFA5OTkwMDAwMDAwMDAwMzwvRW5kVG9FbmRJZD4KICAgICAgICAgICAgICAgIDxUeElkPlVTRERBMjUwMjIwMTlUUFRQVFBUUDk5OTAwMDAwMDAwMDAzPC9UeElkPgogICAgICAgICAgICA8L1BtdElkPgogICAgICAgIDwvRmVkUmVzPgogICAgICAgIDxDbXBSZXM+CiAgICAgICAgICAgIDxJbmZTdHM+QUNUQzwvSW5mU3RzPgogICAgICAgICAgICA8VHhuU3RzPkFDVEM8L1R4blN0cz4KICAgICAgICAgICAgPFBtdElkPgogICAgICAgICAgICAgICAgPEVuZFRvRW5kSWQ+VVNEREEyNTAyMjAxOVRQVFBUUFRQOTk5MDAwMDAwMDAwMDM8L0VuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8VHhJZD5VU0REQTI1MDIyMDE5VFBUUFRQVFA5OTkwMDAwMDAwMDAwMzwvVHhJZD4KICAgICAgICAgICAgPC9QbXRJZD4KICAgICAgICA8L0NtcFJlcz4KICAgIDwvRmVkQ29tcFJlcz4KPC9Eb2N1bWVudD4=\"\n}"
										},
										"url": {
											"raw": "{{participant2-send-url}}/{{service-version}}/client/transactions/receive",
											"host": [
												"{{participant2-send-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions",
												"receive"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "9. settle",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/transactions/settle/do",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 3,\n    \"asset_code\": \"NZDDO\",\n    \"end_to_end_id\": \"NZDDO1322019FJIFJIGF001155005610112\",\n    \"issuer_id\": \"ibmone\",\n    \"ofi_domain\": \"ibmone\",\n    \"ofi_sending_account_address\": \"GDWUMHUAG4H3XTPBRQU3RXYLIM3EIBJQYVWXRPX3X2DYMQ4AOFEZ56UE\",\n    \"ofi_sending_account_name\": \"issuing\",\n    \"rdo_end_to_end_id\": \" \",\n    \"rfi_domain\": \"ibmtwo\",\n    \"rfi_receiving_account_address\": \"GDQZQYHW6IX7EGRORP5C2J3AK2R6EVBG3MACH6RNEUW5GNVDBS2JKSIB\",\n    \"rfi_receiving_account_name\": \"issuing\",\n    \"status\": \"2\",\n    \"ledger_id\": \"f7584d625c8abcf988055424903246c843231750efb11134c3b3f98b2397bc0a\"\n}"
								},
								"url": {
									"raw": "{{participant1-rdo-url}}/{{service-version}}/client/transactions/settle/do",
									"host": [
										"{{participant1-rdo-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"transactions",
										"settle",
										"do"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/transactions/settle/da",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"default\",\n    \"asset_code\": \"USD\",\n    \"anchor_id\": \"stronghold\",\n    \"amount\": 10,\n    \"transaction_note\": \"note\",\n    \"creditor\": {\n        \"customer\": {\n            \"account\": {\n                \"account_number\": \"123213\",\n                \"account_type\": \"checking\",\n                \"routing_number\": \"w4345\"\n            },\n            \"name\": \"Maria\",\n            \"address\": {\n                \"building_number\": \"20681\",\n                \"country\": \"us\",\n                \"postal_code\": \"92811\",\n                \"street\": \"Balestier road\",\n                \"city\": \"san jose\",\n                \"state\": \"ca\"\n            },\n            \"id\": \"123\"\n        },\n        \"institution\": {\n            \"participant_id\": \"tempo\",\n            \"name\": \"Bank of America\"\n        },\n        \"payout_point\": {\n            \"type\": \"FinancialInstitute\",\n            \"name\": \"Tempo\",\n            \"currencies_accepted\": [\n                \"USD\"\n            ],\n            \"routing_number\": \"123232424\",\n            \"image\": \"\",\n            \"url\": \"\",\n            \"telephone\": \"07-418 6258 / 6276\",\n            \"member_of\": [\n                \"Bank\"\n            ],\n            \"address\": {\n                \"building_number\": \"20681\",\n                \"country\": \"US\",\n                \"postal_code\": \"92811\",\n                \"street\": \"Balestier road\",\n                \"city\": \"san jose\",\n                \"state\": \"ca\"\n            },\n            \"geo\": {\n                \"latitude\": 1.8482097,\n                \"longitude\": 102.93248110000002\n            },\n            \"categories\": [\n                {\n                    \"name\": \"delivery\",\n                    \"options\": [\n                        {\n                            \"description\": \"Deliver USD to home address\",\n                            \"terms\": \"Limit of 1,000 USD\"\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"agency_pickup\",\n                    \"options\": [\n                        {\n                            \"description\": \"Pick-up USD from kiosk\",\n                            \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                        }\n                    ]\n                }\n            ],\n            \"opening_hours\": [\n                {\n                    \"day_of_week\": [\n                        \"Monday\",\n                        \"Tuesday\",\n                        \"Wednesday\",\n                        \"Thursday\"\n                    ],\n                    \"opens\": \"09:15\",\n                    \"closes\": \"16:30\"\n                },\n                {\n                    \"day_of_week\": [\n                        \"Friday\"\n                    ],\n                    \"opens\": \"09:15\",\n                    \"closes\": \"16:00\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{participant1-api-url}}/v1/client/transactions/settle/da",
									"host": [
										"{{participant1-api-url}}"
									],
									"path": [
										"v1",
										"client",
										"transactions",
										"settle",
										"da"
									]
								}
							},
							"response": []
						},
						{
							"name": "/callback/transactions/do/{endtoendid}",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-rdo-client-url}}/{{service-version}}/callback/transactions/do/NZDDO1322019FJIFJIGF001155005610114",
									"host": [
										"{{participant1-rdo-client-url}}"
									],
									"path": [
										"{{service-version}}",
										"callback",
										"transactions",
										"do",
										"NZDDO1322019FJIFJIGF001155005610114"
									]
								}
							},
							"response": []
						},
						{
							"name": "/simulation/rdo/notify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 3,\n    \"asset_code\": \"NZDDO\",\n    \"end_to_end_id\": \"NZDDO1322019FJIFJIGF001155005610112\",\n    \"issuer_id\": \"ibmone\",\n    \"ofi_domain\": \"ibmone\",\n    \"ofi_sending_account_address\": \"GDWUMHUAG4H3XTPBRQU3RXYLIM3EIBJQYVWXRPX3X2DYMQ4AOFEZ56UE\",\n    \"ofi_sending_account_name\": \"issuing\",\n    \"rdo_end_to_end_id\": \" \",\n    \"rfi_domain\": \"ibmtwo\",\n    \"rfi_receiving_account_address\": \"GDQZQYHW6IX7EGRORP5C2J3AK2R6EVBG3MACH6RNEUW5GNVDBS2JKSIB\",\n    \"rfi_receiving_account_name\": \"issuing\",\n    \"status\": \"1\",\n    \"ledger_id\": \"f7584d625c8abcf988055424903246c843231750efb11134c3b3f98b2397bc0a\"\n}"
								},
								"url": {
									"raw": "https://ibmone.worldwire-qa.io/rdo-client/v1/simulation/rdo/notify",
									"protocol": "https",
									"host": [
										"ibmone",
										"worldwire-qa",
										"io"
									],
									"path": [
										"rdo-client",
										"v1",
										"simulation",
										"rdo",
										"notify"
									]
								}
							},
							"response": []
						},
						{
							"name": "https://ibmone.worldwire-qa.io/rdo-client/v1/callback/transactions/do",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 3,\n    \"asset_code\": \"NZDDO\",\n    \"end_to_end_id\": \"NZDDO1322019FJIFJIGF001155005610112\",\n    \"issuer_id\": \"ibmone\",\n    \"ofi_domain\": \"ibmone\",\n    \"ofi_sending_account_address\": \"GDWUMHUAG4H3XTPBRQU3RXYLIM3EIBJQYVWXRPX3X2DYMQ4AOFEZ56UE\",\n    \"ofi_sending_account_name\": \"issuing\",\n    \"rdo_end_to_end_id\": \" \",\n    \"rfi_domain\": \"ibmtwo\",\n    \"rfi_receiving_account_address\": \"GDQZQYHW6IX7EGRORP5C2J3AK2R6EVBG3MACH6RNEUW5GNVDBS2JKSIB\",\n    \"rfi_receiving_account_name\": \"issuing\",\n    \"status\": \"1\",\n    \"ledger_id\": \"b94d4a0721072322a2fcf30a8fa1e9a9f27b67172c72e977a401f3569f772602\"\n}"
								},
								"url": {
									"raw": "https://ibmone.worldwire-qa.io/rdo-client/v1/callback/transactions/do",
									"protocol": "https",
									"host": [
										"ibmone",
										"worldwire-qa",
										"io"
									],
									"path": [
										"rdo-client",
										"v1",
										"callback",
										"transactions",
										"do"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/client/transactions/settle/do",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 3,\n    \"asset_code\": \"NZDDO\",\n    \"end_to_end_id\": \"AAADO1322019FJIFJIGF001155005610111\",\n    \"issuer_id\": \"participant1\",\n    \"ofi_domain\": \"participant1\",\n    \"ofi_sending_account_address\": \"GB3IB2S7B7REZNRIATFZXC7TD2O2GQKZRL3RU5VM4VHBZRK3KP6NQG7N\",\n    \"ofi_sending_account_name\": \"issuing\",\n    \"rdo_end_to_end_id\": \" \",\n    \"rfi_domain\": \"participant2\",\n    \"rfi_receiving_account_address\": \"GBIHGU3GWE2LJ7Q2VHZ4O7BNFL2CROEPCZ7TCVH6T42H7JN4FS76ZG2Y\",\n    \"rfi_receiving_account_name\": \"issuing\",\n    \"status\": \"2\",\n    \"ledger_id\": \"30c02063dbf3f9084b249439d4ca05c2572322182db17b109d46a88803569637\"\n}"
								},
								"url": {
									"raw": "{{participant2-rdo-url}}/{{service-version}}/client/transactions/settle/do",
									"host": [
										"{{participant2-rdo-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"transactions",
										"settle",
										"do"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/transactions/settle/da",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"default\",\n    \"asset_code\": \"USD\",\n    \"anchor_id\": \"stronghold\",\n    \"amount\": 10,\n    \"transaction_note\": \"note\",\n    \"creditor\": {\n        \"customer\": {\n            \"account\": {\n                \"account_number\": \"123213\",\n                \"account_type\": \"checking\",\n                \"routing_number\": \"w4345\"\n            },\n            \"name\": \"Maria\",\n            \"address\": {\n                \"building_number\": \"20681\",\n                \"country\": \"us\",\n                \"postal_code\": \"92811\",\n                \"street\": \"Balestier road\",\n                \"city\": \"san jose\",\n                \"state\": \"ca\"\n            },\n            \"id\": \"123\"\n        },\n        \"institution\": {\n            \"participant_id\": \"tempo\",\n            \"name\": \"Bank of America\"\n        },\n        \"payout_point\": {\n            \"type\": \"FinancialInstitute\",\n            \"name\": \"Tempo\",\n            \"currencies_accepted\": [\n                \"USD\"\n            ],\n            \"routing_number\": \"123232424\",\n            \"image\": \"\",\n            \"url\": \"\",\n            \"telephone\": \"07-418 6258 / 6276\",\n            \"member_of\": [\n                \"Bank\"\n            ],\n            \"address\": {\n                \"building_number\": \"20681\",\n                \"country\": \"US\",\n                \"postal_code\": \"92811\",\n                \"street\": \"Balestier road\",\n                \"city\": \"san jose\",\n                \"state\": \"ca\"\n            },\n            \"geo\": {\n                \"latitude\": 1.8482097,\n                \"longitude\": 102.93248110000002\n            },\n            \"categories\": [\n                {\n                    \"name\": \"delivery\",\n                    \"options\": [\n                        {\n                            \"description\": \"Deliver USD to home address\",\n                            \"terms\": \"Limit of 1,000 USD\"\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"agency_pickup\",\n                    \"options\": [\n                        {\n                            \"description\": \"Pick-up USD from kiosk\",\n                            \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                        }\n                    ]\n                }\n            ],\n            \"opening_hours\": [\n                {\n                    \"day_of_week\": [\n                        \"Monday\",\n                        \"Tuesday\",\n                        \"Wednesday\",\n                        \"Thursday\"\n                    ],\n                    \"opens\": \"09:15\",\n                    \"closes\": \"16:30\"\n                },\n                {\n                    \"day_of_week\": [\n                        \"Friday\"\n                    ],\n                    \"opens\": \"09:15\",\n                    \"closes\": \"16:00\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{participant2-api-url}}/v1/client/transactions/settle/da",
									"host": [
										"{{participant2-api-url}}"
									],
									"path": [
										"v1",
										"client",
										"transactions",
										"settle",
										"da"
									]
								}
							},
							"response": []
						},
						{
							"name": "/callback/transactions/do/{endtoendid}",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-rdo-client-url}}/{{service-version}}/callback/transactions/do/AAADO1322019FJIFJIGF001155005610112",
									"host": [
										"{{participant2-rdo-client-url}}"
									],
									"path": [
										"{{service-version}}",
										"callback",
										"transactions",
										"do",
										"AAADO1322019FJIFJIGF001155005610112"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "10. fund DA",
			"item": [
				{
					"name": "/anchor/fundings/instruction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{anchor-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_name\": \"default\",\n    \"amount_funding\": 100,\n    \"anchor_id\": \"{{anchor_id}}\",\n    \"asset_code_issued\": \"{{anchor-asset}}\",\n    \"end_to_end_id\": \"32939\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"memo_transaction\": \"QA\"\n}"
						},
						"url": {
							"raw": "{{global-anchor-url}}/{{service-version}}/anchor/fundings/instruction",
							"host": [
								"{{global-anchor-url}}"
							],
							"path": [
								"{{service-version}}",
								"anchor",
								"fundings",
								"instruction"
							]
						}
					},
					"response": []
				},
				{
					"name": "/anchor/fundings/send",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{anchor-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_name\": \"default\",\n    \"amount_funding\": 100,\n    \"anchor_id\": \"{{anchor_id}}\",\n    \"asset_code_issued\": \"{{anchor-asset}}\",\n    \"end_to_end_id\": \"32939\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"memo_transaction\": \"QA\"\n}"
						},
						"url": {
							"raw": "{{global-anchor-url}}/{{service-version}}/anchor/fundings/send?funding_signed=&instruction_signed=AAAAADBist1%2FUDRt%2FAIElE6cb74Xfmr1%2BqvFcTdaCrRSkjC9AAAAZAAAQ5AAAAAeAAAAAAAAAAOpb9snNYjklUqKVEB1hkkvvq9JY66LmEUGoRaF0zVlBgAAAAEAAAABAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAQAAAABu0k4KZpErlzp1cmLGioi2PG5JPSHcHIEvz%2Bt6DxO63QAAAAFVU0QAAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAHc1lAAAAAAAAAAAATReBpUAAABA8AlAvqATnfTCJzLLZD%2FEben67%2F6mviCOAQdNB61gK2Tn9GB%2FDXwsN5%2FchGSez2OgEcrz0B0bGnQm%2F1ze%2F7hGBw%3D%3D",
							"host": [
								"{{global-anchor-url}}"
							],
							"path": [
								"{{service-version}}",
								"anchor",
								"fundings",
								"send"
							],
							"query": [
								{
									"key": "funding_signed",
									"value": ""
								},
								{
									"key": "instruction_signed",
									"value": "AAAAADBist1%2FUDRt%2FAIElE6cb74Xfmr1%2BqvFcTdaCrRSkjC9AAAAZAAAQ5AAAAAeAAAAAAAAAAOpb9snNYjklUqKVEB1hkkvvq9JY66LmEUGoRaF0zVlBgAAAAEAAAABAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAQAAAABu0k4KZpErlzp1cmLGioi2PG5JPSHcHIEvz%2Bt6DxO63QAAAAFVU0QAAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAHc1lAAAAAAAAAAAATReBpUAAABA8AlAvqATnfTCJzLLZD%2FEben67%2F6mviCOAQdNB61gK2Tn9GB%2FDXwsN5%2FchGSez2OgEcrz0B0bGnQm%2F1ze%2F7hGBw%3D%3D"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "- get transactions",
					"item": [
						{
							"name": "partiicipant1",
							"item": [
								{
									"name": "/client/transactions",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/transactions?query_type=DATE_RANGE&query_data&start_date=2018-01-01&end_date=2020-12-30",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions"
											],
											"query": [
												{
													"key": "query_type",
													"value": "DATE_RANGE"
												},
												{
													"key": "query_data",
													"value": null
												},
												{
													"key": "start_date",
													"value": "2018-01-01"
												},
												{
													"key": "end_date",
													"value": "2020-12-30"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "partiicipant2",
							"item": [
								{
									"name": "/client/transactions",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/transactions?query_type=DATE_RANGE&query_data&start_date=2018-01-01&end_date=2020-12-30",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"transactions"
											],
											"query": [
												{
													"key": "query_type",
													"value": "DATE_RANGE"
												},
												{
													"key": "query_data",
													"value": null
												},
												{
													"key": "start_date",
													"value": "2018-01-01"
												},
												{
													"key": "end_date",
													"value": "2020-12-30"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- get payout point",
					"item": [
						{
							"name": "/client/payout",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-payout-url}}/{{service-version}}/client/payout?receive_mode=delivery&receive_mode=cash_pickup",
									"host": [
										"{{global-payout-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"payout"
									],
									"query": [
										{
											"key": "receive_mode",
											"value": "delivery"
										},
										{
											"key": "receive_mode",
											"value": "cash_pickup"
										},
										{
											"key": "city",
											"value": "north EAST",
											"disabled": true
										},
										{
											"key": "state",
											"value": "tw",
											"disabled": true
										},
										{
											"key": "street",
											"value": "changI",
											"disabled": true
										},
										{
											"key": "country",
											"value": "SG",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- get asset",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-api-url}}/{{service-version}}/client/assets/issued",
											"host": [
												"{{participant1-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets/issued",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-api-url}}/{{service-version}}/client/assets",
											"host": [
												"{{participant2-api-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"assets"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- get balance",
					"item": [
						{
							"name": "- retrieve an account balance",
							"item": [
								{
									"name": "particiapnt1",
									"item": [
										{
											"name": "/client/balances/accounts/{account_name} default EURDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/default?asset_code=EURDA&issuer_id={{anchor_id}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"default"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "EURDA"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} default USDDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/default?asset_code=USDDA&issuer_id={{anchor_id}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"default"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "USDDA"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing FJDDO",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code=FJDDO&issuer_id={{participant2_id}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "FJDDO"
														},
														{
															"key": "issuer_id",
															"value": "{{participant2_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing USDDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code=USDDA&issuer_id={{anchor_id}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "USDDA"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing EURDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{participant1_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "particiapnt2",
									"item": [
										{
											"name": "/client/balances/accounts/{account_name} issuing NZDDO",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code=NZDDO&issuer_id={{participant1_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "NZDDO"
														},
														{
															"key": "issuer_id",
															"value": "{{participant1_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} default EURDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/default?asset_code=EURDA&issuer_id={{anchor_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"default"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "EURDA"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} default USDDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/default?asset_code=USDDA&issuer_id={{anchor_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"default"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "USDDA"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing EURDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code=EURDA&issuer_id={{anchor_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "EURDA"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing USDDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/accounts/issuing?asset_code=USDDA&issuer_id={{anchor_id}}",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "USDDA"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "- retrieve your digital obligation balance",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/balances/do",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-api-url}}/{{service-version}}/client/balances/do?asset_code={{participant1-asset}}",
													"host": [
														"{{participant1-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"do"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/balances/do",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-api-url}}/{{service-version}}/client/balances/do?asset_code=NZDDO",
													"host": [
														"{{participant2-api-url}}"
													],
													"path": [
														"{{service-version}}",
														"client",
														"balances",
														"do"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "NZDDO"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- list all quotes from a specific request",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/quotes/requests/{{request_id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
											"host": [
												"{{global-quote-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"request",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/quotes/requests/{{request_id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/request/{{request_id}}",
											"host": [
												"{{global-quote-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"quotes",
												"request",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- get fee",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/callback/fees",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request_id\":\"23982398\",\n    \"participant_id\":\"{{anchor_id}}\",\n    \"asset_settlement\":{\n        \"asset_type\":\"DA\",\n        \"asset_code\":\"USD\",\n        \"issuer_id\":\"{{anchor_id}}\"\n    },\n    \"amount_settlement\":1935.83,\n    \"asset_payout\":\"USD\",\n        \"payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{participant1-callback-url}}/{{service-version}}/callback/fees",
											"host": [
												"{{participant1-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"fees"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/fees/{{participant1_id}}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DA\",\n        \"asset_code\": \"USD\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"USD\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant1_id}}",
											"host": [
												"{{global-fee-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"fees",
												"{{participant1_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/callback/fees",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request_id\":\"23982398\",\n    \"participant_id\":\"{{anchor_id}}\",\n    \"asset_settlement\":{\n        \"asset_type\":\"DA\",\n        \"asset_code\":\"USD\",\n        \"issuer_id\":\"{{anchor_id}}\"\n    },\n    \"amount_settlement\":1935.83,\n    \"asset_payout\":\"USD\",\n        \"payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{participant2-callback-url}}/{{service-version}}/callback/fees",
											"host": [
												"{{participant2-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"fees"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/fees/{{participant1_id}}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DA\",\n        \"asset_code\": \"USD\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"USD\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{global-fee-url}}/{{service-version}}/client/fees/{{participant1_id}}",
											"host": [
												"{{global-fee-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"fees",
												"{{participant1_id}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8f5520f7-dc8e-4f1f-a488-869eae8458fb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "15501611-1e4a-4598-96c1-709969128a7b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "CALLBACK",
			"item": [
				{
					"name": "- retrieve ledger cursor",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/callback/accounts/{account_name}/cursor",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"country_code\": \"NZ\",\n    \"asset_code\": \"NZDDO\",\n    \"issuer_id\": \"{{participant1_id}}\"\n}"
										},
										"url": {
											"raw": "{{participant1-callback-url}}/{{service-version}}/callback/accounts/issuing/cursor",
											"host": [
												"{{participant1-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"accounts",
												"issuing",
												"cursor"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/callback/accounts/{account_name}/cursor",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"country_code\": \"NZ\",\n    \"asset_code\": \"NZDDO\",\n    \"issuer_id\": \"{{participant1_id}}\"\n}"
										},
										"url": {
											"raw": "{{participant2-callback-url}}/{{service-version}}/callback/accounts/issuing/cursor",
											"host": [
												"{{participant2-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"accounts",
												"issuing",
												"cursor"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- receive a transaction",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/callback/transactions/receive",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDIuMDAxLjA5Ij4KCTxGSVRvRklQbXRTdHNScHQ+CgkJPEdycEhkcj4KCQkJPE1zZ0lkPkFBQURPMDUwMzIwMTlXT1JMRFdJUkUwMDA1MTY1MTYzMjQ1PC9Nc2dJZD4KCQkJPENyZUR0VG0+MjAxOS0wMy0wNVQxMDoyNzoxNzwvQ3JlRHRUbT4KCQkJPEluc3RnQWd0PgoJCQkJPEZpbkluc3RuSWQ+CgkJCQkJPEJJQ0ZJPldPUkxEV0lSRTAwPC9CSUNGST4KCQkJCTwvRmluSW5zdG5JZD4KCQkJPC9JbnN0Z0FndD4KCQkJPEluc3RkQWd0PgoJCQkJPEZpbkluc3RuSWQ+CgkJCQkJPEJJQ0ZJPnBhcnRpY2lwYW50MTwvQklDRkk+CgkJCQk8L0Zpbkluc3RuSWQ+CgkJCTwvSW5zdGRBZ3Q+CgkJPC9HcnBIZHI+CgkJPFR4SW5mQW5kU3RzPgoJCQk8T3JnbmxFbmRUb0VuZElkPkFBQURPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMTExPC9PcmdubEVuZFRvRW5kSWQ+CgkJCTxPcmdubFR4SWQ+QUFBRE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAxMTE8L09yZ25sVHhJZD4KCQkJPFR4U3RzPkFDVEM8L1R4U3RzPgoJCQk8U3RzUnNuSW5mPgoJCQkJPFJzbj4KCQkJCQk8Q2Q+MTEwMTwvQ2Q+CgkJCQkJPFBydHJ5PlRyYW5zYWN0aW9uIHN1Y2Nlc3NmdWxseSB2YWxpZGF0ZWQgYnkgV29ybGQgV2lyZTwvUHJ0cnk+CgkJCQk8L1Jzbj4KCQkJPC9TdHNSc25JbmY+CgkJPC9UeEluZkFuZFN0cz4KCTwvRklUb0ZJUG10U3RzUnB0Pgo8L0RvY3VtZW50Pg==\",\n    \"message_type\": \"pacs.002.001.09\"\n}"
										},
										"url": {
											"raw": "{{participant1-callback-url}}/{{service-version}}/callback/transactions/receive",
											"host": [
												"{{participant1-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"transactions",
												"receive"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/callback/transactions/receive",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERvY3VtZW50IHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDIuMDAxLjA5Ij4KCTxGSVRvRklQbXRTdHNScHQ+CgkJPEdycEhkcj4KCQkJPE1zZ0lkPkFBQURPMDUwMzIwMTlXT1JMRFdJUkUwMDA1MTY1MTYzMjQ1PC9Nc2dJZD4KCQkJPENyZUR0VG0+MjAxOS0wMy0wNVQxMDoyNzoxNzwvQ3JlRHRUbT4KCQkJPEluc3RnQWd0PgoJCQkJPEZpbkluc3RuSWQ+CgkJCQkJPEJJQ0ZJPldPUkxEV0lSRTAwPC9CSUNGST4KCQkJCTwvRmluSW5zdG5JZD4KCQkJPC9JbnN0Z0FndD4KCQkJPEluc3RkQWd0PgoJCQkJPEZpbkluc3RuSWQ+CgkJCQkJPEJJQ0ZJPnBhcnRpY2lwYW50MTwvQklDRkk+CgkJCQk8L0Zpbkluc3RuSWQ+CgkJCTwvSW5zdGRBZ3Q+CgkJPC9HcnBIZHI+CgkJPFR4SW5mQW5kU3RzPgoJCQk8T3JnbmxFbmRUb0VuZElkPkFBQURPMTMyMjAxOUZKSUZKSUdGMDAxMTU1MDA1NjEwMTExPC9PcmdubEVuZFRvRW5kSWQ+CgkJCTxPcmdubFR4SWQ+QUFBRE8xMzIyMDE5RkpJRkpJR0YwMDExNTUwMDU2MTAxMTE8L09yZ25sVHhJZD4KCQkJPFR4U3RzPkFDVEM8L1R4U3RzPgoJCQk8U3RzUnNuSW5mPgoJCQkJPFJzbj4KCQkJCQk8Q2Q+MTEwMTwvQ2Q+CgkJCQkJPFBydHJ5PlRyYW5zYWN0aW9uIHN1Y2Nlc3NmdWxseSB2YWxpZGF0ZWQgYnkgV29ybGQgV2lyZTwvUHJ0cnk+CgkJCQk8L1Jzbj4KCQkJPC9TdHNSc25JbmY+CgkJPC9UeEluZkFuZFN0cz4KCTwvRklUb0ZJUG10U3RzUnB0Pgo8L0RvY3VtZW50Pg==\",\n    \"message_type\": \"pacs.002.001.09\"\n}"
										},
										"url": {
											"raw": "{{participant2-callback-url}}/{{service-version}}/callback/transactions/receive",
											"host": [
												"{{participant2-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"transactions",
												"receive"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- submit incoming quote request notification",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/callback/quotes/request",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quote_id\": \"\",\n    \"quote_request\": {\n        \"time_expire\": 1644775314,\n        \"limit_max\": 90,\n        \"limit_min\": 20,\n        \"source_asset\": {\n            \"asset_code\": \"NZDDO\",\n            \"asset_type\": \"DO\",\n            \"issuer_id\": \"{{participant1_id}}\"\n        },\n        \"target_asset\": {\n            \"asset_code\": \"FJDDO\",\n            \"asset_type\": \"DO\",\n            \"issuer_id\": \"{{participant2_id}}\"\n        },\n        \"ofi_id\": \"{{participant1_id}}\"\n    }\n}"
										},
										"url": {
											"raw": "{{participant1-callback-url}}/{{service-version}}/callback/quotes/request",
											"host": [
												"{{participant1-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"quotes",
												"request"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/callback/quotes/request",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"quote_id\": \"\",\n    \"quote_request\": {\n        \"time_expire\": 1644775314,\n        \"limit_max\": 90,\n        \"limit_min\": 20,\n        \"source_asset\": {\n            \"asset_code\": \"NZDDO\",\n            \"asset_type\": \"DO\",\n            \"issuer_id\": \"{{participant1_id}}\"\n        },\n        \"target_asset\": {\n            \"asset_code\": \"FJDDO\",\n            \"asset_type\": \"DO\",\n            \"issuer_id\": \"{{participant2_id}}\"\n        },\n        \"ofi_id\": \"{{participant1_id}}\"\n    }\n}"
										},
										"url": {
											"raw": "{{participant2-callback-url}}/{{service-version}}/callback/quotes/request",
											"host": [
												"{{participant2-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"quotes",
												"request"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- receive a ledger transaction",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/callback/ledger/notification",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_name\": \"issuing\",\n    \"transaction_id\": \"NZDDO1322019FJIFJIGF001155005610122\",\n    \"transaction_memp\": \"XX\",\n    \"transaction_reference\": \"OOO\"\n}"
										},
										"url": {
											"raw": "{{participant1-callback-url}}/{{service-version}}/callback/ledger/notification",
											"host": [
												"{{participant1-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"ledger",
												"notification"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/callback/ledger/notification",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_name\": \"issuing\",\n    \"transaction_id\": \"NZDDO1322019FJIFJIGF001155005610122\",\n    \"transaction_memp\": \"XX\",\n    \"transaction_reference\": \"OOO\"\n}"
										},
										"url": {
											"raw": "{{participant2-callback-url}}/{{service-version}}/callback/ledger/notification",
											"host": [
												"{{participant2-callback-url}}"
											],
											"path": [
												"{{service-version}}",
												"callback",
												"ledger",
												"notification"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "MANAGE",
			"item": [
				{
					"name": "- reset cursor location on a specific account",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/accounts/{account_name}/{cursor}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-payment-url}}/{{service-version}}/client/accounts/default/now",
											"host": [
												"{{participant1-payment-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"accounts",
												"default",
												"now"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/accounts/{account_name}/{cursor}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-payment-url}}/{{service-version}}/client/accounts/default/now",
											"host": [
												"{{participant2-payment-url}}"
											],
											"path": [
												"{{service-version}}",
												"client",
												"accounts",
												"default",
												"now"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "- cancel a specific quote",
					"item": [
						{
							"name": "/client/quotes/{{quote_id}}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\"delete_all_quotes\":false,\n        \"time_expire_rfi\": {\n        \t\"operator\": \"gt\", \n\t\t\t\"threshold\":0\n        },\n\t\t\"status\": {\n\t\t\t\"operator\": \"lt\", \n\t\t\t\"threshold\":99\n\t\t\t},\n\t\t\"exchange_rate\": {\n\t\t\t\"operator\": \"lt\", \n\t\t\t\"threshold\":10\n\t\t\t},\n\t\t\"rfi_id\": \"{{participant2_id}}\",\n        \"source_asset\": {\n            \"asset_code\": \"NZDDO\",\n            \"issuer_id\": \"{{participant1_id}}\",\n            \"asset_type\": \"DO\"\n        },\n        \"target_asset\": {\n            \"asset_code\": \"FJDDO\",\n            \"issuer_id\": \"{{participant2_id}}\",\n            \"asset_type\": \"DO\"\n        }\n\t}"
								},
								"url": {
									"raw": "{{global-quote-url}}/{{service-version}}/client/quotes/{{quote_id}}",
									"host": [
										"{{global-quote-url}}"
									],
									"path": [
										"{{service-version}}",
										"client",
										"quotes",
										"{{quote_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fbd1cfd6-ad06-46e7-b95b-e4e4e5ccbd06",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "82010faf-9dc0-438a-b523-1602466613b5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}