{
	"info": {
		"_postman_id": "d69d01a7-177c-4111-8dcd-87b95db7eac9",
		"name": "Worldwire (2.11.1)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0.0.0 request JWT",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "Step 1 {{global-auth-url}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti1\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ii1MbmNITmJaUFc4V0VYRUt1TlRKLjEtNDEifQ.eyJhY2MiOlsiaXNzdWluZyIsImRlZmF1bHQiXSwidmVyIjoiMi45LjMuMTNfUkMxIiwiaXBzIjpbIjIwMi4xMzUuMjQ1LjM5IiwiMjAyLjEzNS4yNDUuNCIsIjIxOS43NC4xNS4yMDciLCIyMDIuMTM1LjI0NS4yIiwiMTI1LjE4LjkuMjAiLCIxNjkuNjMuMTQwLjEwNiIsIjIwMi4xMzUuMjQ1LjM1Il0sImVudiI6ImVrc3FhIiwiZW5wIjpbIi92MS9hZG1pbi9wciIsIi92MS9hZG1pbi9wci9kb21haW4iLCIvdjEvYW5jaG9yL2FkZHJlc3MiLCIvdjEvYW5jaG9yL2Fzc2V0cy9pc3N1ZWQiLCIvdjEvYW5jaG9yL2Z1bmRpbmdzL2luc3RydWN0aW9uIiwiL3YxL2FuY2hvci9mdW5kaW5ncy9zZW5kIiwiL3YxL2FuY2hvci90cnVzdCIsIi92MS9jbGllbnQvYWNjb3VudHMiLCIvdjEvY2xpZW50L2Fzc2V0cyIsIi92MS9jbGllbnQvYXNzZXRzL2FjY291bnRzIiwiL3YxL2NsaWVudC9hc3NldHMvaXNzdWVkIiwiL3YxL2NsaWVudC9hc3NldHMvcGFydGljaXBhbnRzIiwiL3YxL2NsaWVudC9iYWxhbmNlcy9hY2NvdW50cyIsIi92MS9jbGllbnQvYmFsYW5jZXMvZG8iLCIvdjEvY2xpZW50L2V4Y2hhbmdlIiwiL3YxL2NsaWVudC9mZWVzIiwiL3YxL2NsaWVudC9tZXNzYWdlIiwiL3YxL2NsaWVudC9wYXJ0aWNpcGFudHMiLCIvdjEvY2xpZW50L3BhcnRpY2lwYW50cy93aGl0ZWxpc3QiLCIvdjEvY2xpZW50L3BheW91dCIsIi92MS9jbGllbnQvcXVvdGVzIiwiL3YxL2NsaWVudC9xdW90ZXMvcmVxdWVzdCIsIi92MS9jbGllbnQvc2lnbiIsIi92MS9jbGllbnQvdG9rZW4vcmVmcmVzaCIsIi92MS9jbGllbnQvdHJhbnNhY3Rpb25zIiwiL3YxL2NsaWVudC90cmFuc2FjdGlvbnMvcmVwbHkiLCIvdjEvY2xpZW50L3RyYW5zYWN0aW9ucy9zZW5kIiwiL3YxL2NsaWVudC90cmFuc2FjdGlvbnMvc2V0dGxlL2RhIiwiL3YxL2NsaWVudC90cmFuc2FjdGlvbnMvc2V0dGxlL2RvIiwiL3YxL2NsaWVudC90cnVzdCIsIi92MS9vbmJvYXJkaW5nL2FjY291bnRzIl0sIm4iOjAsImlhdCI6MTU2NzI2NTIyOSwibmJmIjoxNTY3MjY1MjM0LCJleHAiOjE1Njc1MjQ0MjksImF1ZCI6ImxhcGFydGljaXBhbnQxIiwic3ViIjoiLUxuYlJGR3dMSEJRU0dDWVQyX3AiLCJqdGkiOiItTG5jSDdtQ2lsMUwzc2JJNVRoLSJ9.5aqO2YYVwpXFSXhXYkXgMd6kSXTO_tfiAfbChWMCdkU",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{p1-xiid}}",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									},
									{
										"key": "x-verify-code",
										"value": "874540",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"eksqa\",\n    \"acc\": [\n        \"issuing\",\n        \"default\",\n        \"admin\",\n        \"manager\",\n        \"viewer\",\n        \"default1\",\n        \"default2\",\n        \"default3\",\n        \"default4\",\n        \"default5\",\n        \"default6\",\n        \"default7\",\n        \"default8\",\n        \"default9\",\n        \"default10\",\n        \"default11\",\n        \"default12\",\n        \"default13\",\n        \"default14\",\n        \"default15\",\n        \"default16\",\n        \"default17\",\n        \"default18\",\n        \"default19\",\n        \"default20\"\n    ],\n    \"ver\": \"2.9.3.13_RC1\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"219.74.15.207\",\n        \"202.135.245.2\",\n        \"125.18.9.20\",\n        \"169.63.140.106\",\n        \"202.135.245.35\",\n        \"202.135.245.3\",\n        \"27.104.245.116\",\n        \"202.135.245.40\"\n        \n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n        \"/v1/admin/pr\",\n        \"/v1/admin/pr/domain\",\n        \"/v1/admin/pr/country\",\n        \"/v1/onboarding/accounts\",\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/onboarding/accounts\",\n        \"/v1/client/assets\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/client/transactions/settle/do\",\n        \"/v1/client/transactions/settle/da\",\n        \"/v1/client/payout\",\n        \"/v1/client/service_check\",\n        \"/v1/client/accounts\",\n        \"/v1/client/assets/participants\",\n        \"/v1/admin/payout\",\n        \"/v1/client/account/sweep\",\n        \"/v1/client/fees/request\",\n        \"/v1/client/fees/response\",\n        \"/v1/client/message\",\n        \"/v1/client/payload/sign\",\n        \"/client/transactions/redeem\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{global-auth-url}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{p1-xiid}}"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									},
									{
										"key": "x-verify-code",
										"value": "342555",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti1}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{global-auth-url}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p1-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{p1-xiid}}"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									},
									{
										"key": "x-verify-code",
										"value": "904925",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti1}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{global-auth-url}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p1-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/refresh",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{global-auth-url}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/api/v1/onboarding/operatingaccount\",\n\t\"ip\": \"100.96.2.5\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "Step 1 {{global-auth-url}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti2\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{p2-xiid}}",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									},
									{
										"key": "x-verify-code",
										"value": "874540",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"{{env_version}}\",\n    \"acc\": [\n        \"issuing\",\n        \"default\",\n        \"admin\",\n        \"manager\",\n        \"viewer\",\n        \"default1\",\n        \"default2\",\n        \"default3\",\n        \"default4\",\n        \"default5\",\n        \"default6\",\n        \"default7\",\n        \"default8\",\n        \"default9\",\n        \"default10\",\n        \"default11\",\n        \"default12\",\n        \"default13\",\n        \"default14\",\n        \"default15\",\n        \"default16\",\n        \"default17\",\n        \"default18\",\n        \"default19\",\n        \"default20\"\n    ],\n    \"ver\": \"2.9.3.13_RC1\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"219.74.15.207\",\n        \"202.135.245.2\",\n        \"125.18.9.20\",\n        \"169.63.140.106\",\n        \"202.135.245.35\",\n        \"202.135.245.3\",\n        \"27.104.245.116\",\n        \"202.135.245.40\"\n        \n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n        \"/v1/admin/pr\",\n        \"/v1/admin/pr/domain\",\n        \"/v1/admin/pr/country\",\n        \"/v1/onboarding/accounts\",\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/onboarding/accounts\",\n        \"/v1/client/assets\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/client/transactions/settle/do\",\n        \"/v1/client/transactions/settle/da\",\n        \"/v1/client/payout\",\n        \"/v1/client/service_check\",\n        \"/v1/client/accounts\",\n        \"/v1/client/assets/participants\",\n        \"/v1/admin/payout\",\n        \"/v1/client/account/sweep\",\n        \"/v1/client/fees/request\",\n        \"/v1/client/fees/response\",\n        \"/v1/client/message\",\n        \"/v1/client/payload/sign\",\n        \"/client/transactions/redeem\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{participant2_id}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{global-auth-url}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{p2-xiid}}"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									},
									{
										"key": "x-verify-code",
										"value": "342555",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti2}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{global-auth-url}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p2-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{p2-xiid}}"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									},
									{
										"key": "x-verify-code",
										"value": "769130",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti2}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{global-auth-url}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"p2-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-auth-url}}/auth/jwt/refresh",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"auth",
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{global-auth-url}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/v1/onboarding/operatingaccount\",\n\t\"ip\": \"100.96.2.5\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "Step 1 {{global-auth-url}}/auth/jwt/request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b1df23-8661-4d12-8007-edc4aee038a3",
										"exec": [
											"",
											"  var str = responseBody;",
											"  var res = str.split(\": \");",
											"postman.setEnvironmentVariable(\"auth_jti3\",  res[1].replace(\"\\\"\", \"\"))",
											"setTimeout(1000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{anchor-xiid}}",
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"type": "text"
									},
									{
										"warning": "Value contains invalid newline characters.",
										"key": "x-verify-code",
										"value": "867736",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"{{env_version}}\",\n    \"acc\": [\n        \"issuing\"\n    ],\n    \"ver\": \"2.9.3.14_RC1\",\n    \"ips\": [\n        \"202.135.245.39\",\n        \"202.135.245.4\",\n        \"219.74.15.207\",\n        \"202.135.245.2\",\n        \"125.18.9.20\",\n        \"169.63.140.106\",\n        \"202.135.245.35\",\n        \"36.226.251.220\",\n        \"39.12.202.15\",\n        \"202.135.245.3\",\n        \"202.135.245.4\",\n        \"27.104.245.116\",\n        \"202.135.245.40\"\n    ],\n    \"env\": \"{{env_version}}\",\n    \"enp\": [\n        \"/v1/admin/pr\",\n        \"/v1/onboarding/accounts\",\n        \"/v1/admin/anchor/{{anchor_id}}/onboard/assets\",\n        \"/v1/admin/anchor/{{anchor_id}}/register\",\n        \"/v1/onboarding/issuingaccount\",\n        \"/v1/onboarding/operatingaccount\",\n        \"/v1/client/assets\",\n        \"/v1/client/participants/whitelist\",\n        \"/v1/client/trust\",\n        \"/v1/client/assets/accounts\",\n        \"/v1/client/accounts\",\n        \"/v1/client/transactions/send\",\n        \"/v1/client/transactions/receive\",\n        \"/v1/client/transactions\",\n        \"/v1/client/participants\",\n        \"/v1/client/fees\",\n        \"/v1/client/balances/accounts\",\n        \"/v1/client/balances/do\",\n        \"/v1/client/sign\",\n        \"/v1/client/quotes/request\",\n        \"/v1/client/quotes\",\n        \"/v1/client/exchange\",\n        \"/v1/anchor/trust\",\n        \"/v1/anchor/fundings/instruction\",\n        \"/v1/anchor/fundings/send\",\n        \"/v1/anchor/participants\",\n        \"/v1/client/balances/da\",\n        \"/v1/client/payload/sign\",\n        \"/v1/client/message\",\n        \"/v1/client/transactions/redeem\",\n        \"/v1/anchor/assets/issued\",\n        \"/v1/anchor/assets/redeem\",\n        \"/v1/anchor/address\",\n        \"/v1/anchor/participants\"\n    ],\n    \"jti\": \"someRandomId1\",\n    \"aud\": \"{{anchor_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/request",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"request"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 2.1 {{global-auth-url}}/auth/jwt/approve",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{anchor-xiid}}"
									},
									{
										"description": "Must be a different user from the one who created the request. login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid2}}"
									},
									{
										"key": "x-verify-code",
										"value": "342555",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti3}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/approve",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"approve"
									]
								},
								"description": "Approve a request to generate a JWT Token. This is the 2nd admin to approve. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers. Requires use of IBM Verify 2FA to approve and complete the request."
							},
							"response": []
						},
						{
							"name": "Step 3 {{global-auth-url}}/auth/jwt/generate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e89558a1-d1f8-4611-8868-b4b8e8268428",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"anchor-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "Hong Kong Bank (Fake Bank in firebase)",
										"key": "x-iid",
										"type": "text",
										"value": "{{anchor-xiid}}"
									},
									{
										"description": "login to next.worldwire.io and navigate to next.worldwire.io/fid",
										"key": "x-fid",
										"type": "text",
										"value": "{{au_fid1}}"
									},
									{
										"key": "x-verify-code",
										"value": "941747",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jti\": \"{{auth_jti3}}\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/generate",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"generate"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.1 {{global-auth-url}}/auth/jwt/refesh",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3a88863-c558-4f14-83ec-19527fbe1859",
										"exec": [
											"",
											"",
											"  var str = responseBody;",
											"  var res = str.split(\"\\\"\");",
											"//   str=str.replace(\"\\\"\", \"\");",
											"postman.setEnvironmentVariable(\"anchor-jwt-token\",  res[1])",
											"setTimeout(1000)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-auth-url}}/auth/jwt/refresh",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"auth",
										"jwt",
										"refresh"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						},
						{
							"name": "Step 4.2 (optional) {{global-auth-url}}/auth/jwt/verify",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"endpoint\": \"/v1/onboarding/operatingaccount\",\n\t\"ip\": \"100.96.2.5\",\n\t\"account\": \"issuing\"\n}"
								},
								"url": {
									"raw": "{{global-auth-url}}/jwt/verify",
									"host": [
										"{{global-auth-url}}"
									],
									"path": [
										"jwt",
										"verify"
									]
								},
								"description": "Used to create a request for a approval to generate a JWT Token. Make sure that you use a valid iid (=institutionId) and fid (firebase custom auth token) in headers."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "0.0 onboarding",
			"item": [
				{
					"name": "onboard anchor",
					"item": [
						{
							"name": "/admin/pr",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{anchor_id}}\",\n    \"bic\": \"USAUSAGF001\",\n    \"country_code\": \"{{anchor_country_code}}\",\n    \"role\": \"IS\",\n    \"status\": \"inactive\",\n    \"url_callback\": \"https://api.stronghold.co/v1/venues\"\n}"
								},
								"url": {
									"raw": "{{global-url}}/global/pr/v1/admin/pr",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"admin",
										"pr"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr/{participant_id}/status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"active\"}"
								},
								"url": {
									"raw": "{{global-url}}/global/pr/v1/gftn/pr/{{anchor_id}}/status",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"gftn",
										"pr",
										"{{anchor_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/register",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"address\": \"{{anchor_pkey}}\"}"
								},
								"url": {
									"raw": "{{global-url}}/global/anchor/v1/admin/anchor/{{anchor_id}}/register",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"register"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant1",
					"item": [
						{
							"name": "/admin/pr/{participant_id}/status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{p1-xiid}}",
										"type": "text"
									},
									{
										"key": "x-fid",
										"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjI5NGNlMzNhNWQ3MmI0NjYyNzI3ZGFiYmRhNzVjZjg4Y2Y5OTg4MGUiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcWF0d28tMjUxMDA3IiwiYXVkIjoicWF0d28tMjUxMDA3IiwiYXV0aF90aW1lIjoxNTY5ODk2Njg0LCJ1c2VyX2lkIjoiVlc2dzlXRE9zTVNYeTEzcFRwejJQNXZDSHR4MSIsInN1YiI6IlZXNnc5V0RPc01TWHkxM3BUcHoyUDV2Q0h0eDEiLCJpYXQiOjE1Njk4OTY3MTAsImV4cCI6MTU2OTkwMDMxMCwiZW1haWwiOiJydWJ5Y2hAc2cuaWJtLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJydWJ5Y2hAc2cuaWJtLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6ImN1c3RvbSJ9fQ.hHIqNrv8pMKb3qjLypRpsf5c1Sa1icZ_DlmRc_Hts2VtsNo1eTR4V_CXqxkhdISU30PY31QM8RhGD1aWBNgzN_SK4-0YUVi-37m4ip7B9dA64zvqWFnkxQ6h2FHHFf54mUAelmIPk-uAfr_mlmu0-oRub3IPfyPfCC-xMhS5JlVjX9w8vAQIJOKDiUrRoVp68cIR9PPSwFb-e68Dhdeu5ORFr1Nf0VaQdGfSWL3C-UjzxOIPS4hAYrMlfmGVa9WhOqftRPOqwE1aFM_c9nJB19t07serpE3gQKmN31_MMs1y8Gk3Grv-jp7dCijhnZdtI3y_gr2FSs7L1iE_SFiK0Q",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"status\":\"active\"}"
								},
								"url": {
									"raw": "{{global-url}}/global/pr/v1/admin/pr/{{participant1_id}}/status",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"admin",
										"pr",
										"{{participant1_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr/{participant_id}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bic\": \"{{participant1_bic}}\",\n    \"country_code\": \"{{participant1_country_code}}\",\n    \"id\": \"{{participant1_id}}\",\n    \"operating_accounts\": [],\n    \"role\": \"MM\",\n    \"status\": \"active\",\n    \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n}"
								},
								"url": {
									"raw": "{{global-url}}/global/pr/v1/admin/pr/{{participant1_id}}/status",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"admin",
										"pr",
										"{{participant1_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"bic\": \"{{participant1_bic}}\",\n        \"country_code\": \"{{participant1_country_code}}\",\n        \"id\": \"{{participant1_id}}\",\n        \"operating_accounts\": [],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant1-callback-url}}/v1/callback\"\n    }"
								},
								"url": {
									"raw": "{{global-url}}/global/pr/v1/admin/pr",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"admin",
										"pr"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/admin/pr/{participant_id}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"bic\": \"{{participant2_bic}}\",\n        \"country_code\": \"{{participant2_country_code}}\",\n        \"id\": \"{{participant2_id}}\",\n        \"operating_accounts\":[],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant2-callback-url}}/v1/callback\"\n    }"
								},
								"url": {
									"raw": "{{global-url}}/global/pr/v1/admin/pr/{{participant1_id}}",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"admin",
										"pr",
										"{{participant1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr/{participant_id}/status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\"\n}"
								},
								"url": {
									"raw": "{{global-url}}/global/pr/v1/admin/pr/{{participant2_id}}/status",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"admin",
										"pr",
										"{{participant2_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/pr",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"bic\": \"{{participant2_bic}}\",\n        \"country_code\": \"{{participant2_country_code}}\",\n        \"id\": \"{{participant2_id}}\",\n        \"operating_accounts\":[],\n        \"role\": \"MM\",\n        \"status\": \"inactive\",\n        \"url_callback\": \"{{participant2-callback-url}}/v1/callback\"\n    }"
								},
								"url": {
									"raw": "{{global-url}}/global/pr/v1/admin/pr",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"admin",
										"pr"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "/admin/pr",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{global-url}}/global/pr/v1/admin/pr",
							"host": [
								"{{global-url}}"
							],
							"path": [
								"global",
								"pr",
								"v1",
								"admin",
								"pr"
							]
						}
					},
					"response": []
				},
				{
					"name": "/internal/pr",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{global-url}}/global/pr/v1/admin/pr",
							"host": [
								"{{global-url}}"
							],
							"path": [
								"global",
								"pr",
								"v1",
								"admin",
								"pr"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "0. create Accounts",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/admin/accounts/{account_name}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f9e813e-f8fa-4c97-83ba-f2f0031553bd",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"msg\", jsonData.msg)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "x-fid",
										"value": "{{au_fid1}}",
										"type": "text"
									},
									{
										"key": "x-iid",
										"value": "{{p1-xiid}}",
										"type": "text"
									},
									{
										"key": "X-PERMISSION",
										"value": "request",
										"type": "text"
									},
									{
										"key": "x-request",
										"value": "{{msg}}",
										"type": "text"
									},
									{
										"key": "X-fid",
										"value": "{{au_fid2}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PERMISSION",
										"value": "approve",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/admin/accounts/default2",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"admin",
										"accounts",
										"default2"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/accounts/issuing",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/admin/accounts/issuing",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"admin",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/admin/accounts/{account_name}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/onboarding/accounts/default",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"onboarding",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/accounts/issuing",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/admin/accounts/issuing",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"admin",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "register anchor account to WW",
					"item": [
						{
							"name": "/admin/anchor/{anchor_domain}/register",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"address\": \"GC5IFHJSP2OR5XEPF72N6HPUWIPBGYT7NXAWM7JB6RDZOQRULYDJKPQF\"}"
								},
								"url": {
									"raw": "{{anchor-url}}/global/anchor/v1/admin/anchor/{{anchor_id}}/register",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"register"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "0.1 get account",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/onboarding/accounts/{account_name} default",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/onboarding/accounts/default",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"onboarding",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/onboarding/accounts/{account_name} issuing",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/onboarding/accounts/issuing",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"onboarding",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/onboarding/accounts/{account_name} default",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/onboarding/accounts/default",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"onboarding",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/onboarding/accounts/{account_name} issuing",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/onboarding/accounts/issuing",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"onboarding",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "{{anchor-url}}/global/anchor/v1/anchor/address?name=issuing*{{anchor_id}}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{anchor-url}}/global/anchor/v1/anchor/address?name=issuing*{{anchor_id}}",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"anchor",
										"address"
									],
									"query": [
										{
											"key": "name",
											"value": "issuing*{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "1. issue assets",
			"item": [
				{
					"name": "- create a digital obligation",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets?asset_code={{participant1-asset}}&asset_type=DO",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "{{participant1-asset}}"
												},
												{
													"key": "asset_type",
													"value": "DO"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets?asset_code={{participant2-asset}}&asset_type=DO",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets"
											],
											"query": [
												{
													"key": "asset_code",
													"value": "{{participant2-asset}}"
												},
												{
													"key": "asset_type",
													"value": "DO"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets EUR DA",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{anchor-url}}/global/anchor/v1/admin/anchor/{{anchor_id}}/onboard/assets?asset_code=EUR&asset_type=DA",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"onboard",
										"assets"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "EUR"
										},
										{
											"key": "asset_type",
											"value": "DA"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets USD DA",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{anchor-url}}/global/anchor/v1/admin/anchor/{{anchor_id}}/onboard/assets?asset_code=USD&asset_type=DA",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"admin",
										"anchor",
										"{{anchor_id}}",
										"onboard",
										"assets"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USD"
										},
										{
											"key": "asset_type",
											"value": "DA"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "2. get assets",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/assets - asset issue by WW",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/assets",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/accounts/{account_name} issuing - trusted asset",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/assets/accounts/issuing",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"assets",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/accounts/{account_name} default - trusted asset",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/assets/accounts/default",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"assets",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/issued",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/assets/issued",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"assets",
										"issued"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/client/assets - asset issue by WW",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/assets",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/issued",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/assets/issued",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"assets",
										"issued"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/accounts/{account_name} default - trusted asset",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/assets/accounts/default",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"assets",
										"accounts",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/assets/accounts/{account_name} issuing - trusted asset",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/assets/accounts/issuing",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"assets",
										"accounts",
										"issuing"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "/admin/anchor/{anchor_domain}/onboard/assets DA Copy",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{anchor-url}}/global/anchor/v1/admin/anchor/assets/issued/{{anchor_id}}",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"admin",
										"anchor",
										"assets",
										"issued",
										"{{anchor_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{anchor-url}}/global/anchor/v1/anchor/assets/issued",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{anchor-url}}/global/anchor/v1/anchor/assets/issued/{{anchor_id}}",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"anchor",
										"assets",
										"issued",
										"{{anchor_id}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "/admin/anchor/{anchor_domain}/onboard/assets DA Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{anchor-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{anchor-url}}/global/anchor/v1/admin/anchor/assets/issued/laanchor2",
							"host": [
								"{{anchor-url}}"
							],
							"path": [
								"global",
								"anchor",
								"v1",
								"admin",
								"anchor",
								"assets",
								"issued",
								"laanchor2"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "3. Get participants",
			"item": [
				{
					"name": "- retrieve a specific participant",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/participants",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/participants/{{participant1_id}}",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"participants",
												"{{participant1_id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/participants",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/participants/{{participant2_id}}",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"participants",
												"{{participant2_id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- list all participants",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/participants",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/participants?",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"participants"
											],
											"query": [
												{
													"key": "country_code",
													"value": "{{participant1_country_code}}",
													"disabled": true
												},
												{
													"key": "asset_code",
													"value": "NZDDO",
													"disabled": true
												},
												{
													"key": "issuer_id",
													"value": "{{participant1_id}}",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/participants",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/participants?country_code={{participant2_country_code}}&asset_code=FJDDO&issuer_id={{participant2_id}}",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"participants"
											],
											"query": [
												{
													"key": "country_code",
													"value": "{{participant2_country_code}}"
												},
												{
													"key": "asset_code",
													"value": "FJDDO"
												},
												{
													"key": "issuer_id",
													"value": "{{participant2_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{{anchor-url}}/global/anchor/v1/anchor/participants",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{anchor-url}}/global/anchor/v1/anchor/participants",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"anchor",
										"participants"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "4. whitelist",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/participants/whitelist add participant2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/javascript",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}",
									"options": {
										"raw": {
											"language": "javascript"
										}
									}
								},
								"url": {
									"raw": "{{participant1-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist add anchor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{anchor_id}}\"\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/client/whitelist/participants",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant2-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist add participant1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist add anchor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{anchor_id}}\"\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "/client/participants/whitelist participant1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{anchor-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist participant2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"participant_id\":\"{{participant2_id}}\"\n}"
								},
								"url": {
									"raw": "{{anchor-url}}/global/whitelist/v1/client/participants/whitelist",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"whitelist",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/participants/whitelist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{anchor-url}}/global/whitelit/v1/client/participants/whitelist",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"whitelit",
										"v1",
										"client",
										"participants",
										"whitelist"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "5. trust assets",
			"item": [
				{
					"name": "DO",
					"item": [
						{
							"name": "request",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/trust",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "297ba4b2-8551-4757-8b0f-8314230778e7",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"msg\", jsonData.msg)"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-iid",
														"name": "Content-Type",
														"value": "{{p1-xiid}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "x-fid",
														"value": "{{au_fid1}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "x-fid",
														"value": "{{au_fid2}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "x-pid",
														"value": "{{participant1_id}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "x-permission",
														"value": "request",
														"type": "text",
														"disabled": true
													},
													{
														"key": "x-permission",
														"value": "approve",
														"type": "text",
														"disabled": true
													},
													{
														"key": "x-request",
														"value": "{{msg}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "Content-Type",
														"value": "{{p1-xiid}}",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{participant2-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\",\n    \"limit\": 9999\n}"
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{participant1-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"limit\": 9999\n}"
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "allow",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{participant1-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/trust",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{participant2-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DA",
					"item": [
						{
							"name": "request",
							"item": [
								{
									"name": "participant1 request trust to anchor",
									"item": [
										{
											"name": "/client/trust USD DA default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 5000\n}"
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust EUR DA default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust USD DA issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 9000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust EUR DA issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2 request trust to anchor",
									"item": [
										{
											"name": "/client/trust EUR DA issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust EUR DA default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 4000\n}"
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust USD DA default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 5000\n}"
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/trust USD DA issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"request\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"limit\": 9000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/trust",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"trust"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "allow",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "allow trust EUR DA participant1 default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{anchor-url}}/global/anchor/v1/anchor/trust/{{anchor_id}}?",
													"host": [
														"{{anchor-url}}"
													],
													"path": [
														"global",
														"anchor",
														"v1",
														"anchor",
														"trust",
														"{{anchor_id}}"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust USD DA participant1 issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{anchor-url}}/global/anchor/v1/anchor/trust/{{anchor_id}}?",
													"host": [
														"{{anchor-url}}"
													],
													"path": [
														"global",
														"anchor",
														"v1",
														"anchor",
														"trust",
														"{{anchor_id}}"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust USD DA participant1 default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"USD\",\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{anchor-url}}/global/anchor/v1/anchor/trust/{{anchor_id}}?",
													"host": [
														"{{anchor-url}}"
													],
													"path": [
														"global",
														"anchor",
														"v1",
														"anchor",
														"trust",
														"{{anchor_id}}"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust EUR DA participant1 issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant1_id}}\"\n}"
												},
												"url": {
													"raw": "{{anchor-url}}/global/anchor/v1/anchor/trust/{{anchor_id}}?",
													"host": [
														"{{anchor-url}}"
													],
													"path": [
														"global",
														"anchor",
														"v1",
														"anchor",
														"trust",
														"{{anchor_id}}"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "allow trust EUR DA participant2 issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{anchor-url}}/global/anchor/v1/anchor/trust/{{anchor_id}}?",
													"host": [
														"{{anchor-url}}"
													],
													"path": [
														"global",
														"anchor",
														"v1",
														"anchor",
														"trust",
														"{{anchor_id}}"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust USD participant2 default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{anchor-url}}/global/anchor/v1/anchor/trust/{{anchor_id}}?",
													"host": [
														"{{anchor-url}}"
													],
													"path": [
														"global",
														"anchor",
														"v1",
														"anchor",
														"trust",
														"{{anchor_id}}"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust USD participant2 issuing",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset}}\",\n    \"account_name\": \"issuing\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{anchor-url}}/global/anchor/v1/anchor/trust/{{anchor_id}}?",
													"host": [
														"{{anchor-url}}"
													],
													"path": [
														"global",
														"anchor",
														"v1",
														"anchor",
														"trust",
														"{{anchor_id}}"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "allow trust EUR DA participant2 default",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{anchor-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permission\": \"allow\",\n    \"asset_code\": \"{{anchor-asset2}}\",\n    \"account_name\": \"default\",\n    \"participant_id\": \"{{participant2_id}}\"\n}"
												},
												"url": {
													"raw": "{{anchor-url}}/global/anchor/v1/anchor/trust/{{anchor_id}}?",
													"host": [
														"{{anchor-url}}"
													],
													"path": [
														"global",
														"anchor",
														"v1",
														"anchor",
														"trust",
														"{{anchor_id}}"
													],
													"query": [
														{
															"key": "permission",
															"value": "allow",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "6. get asset",
			"item": [
				{
					"name": "- list all assets",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- list trusted assets from a specific account",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets/accounts/{account_name} issuing",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets/accounts/issuing",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/accounts/{account_name} default",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets/accounts/default",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"accounts",
												"default"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets/accounts/{account_name} issuing",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets/accounts/issuing",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/accounts/{account_name} default",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets/accounts/default",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"accounts",
												"default"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- list your issued assets",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets/issued",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/participants/{{participant1_id}}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets/participants/{{participant1_id}}?type=both",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"participants",
												"{{participant1_id}}"
											],
											"query": [
												{
													"key": "type",
													"value": "issued",
													"disabled": true
												},
												{
													"key": "type",
													"value": "trusted",
													"disabled": true
												},
												{
													"key": "type",
													"value": "both"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets/issued",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/participants/{{participant1_id}}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets/participants/{{participant2_id}}?type=issued",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"participants",
												"{{participant2_id}}"
											],
											"query": [
												{
													"key": "type",
													"value": "issued"
												},
												{
													"key": "type",
													"value": "trusted",
													"disabled": true
												},
												{
													"key": "type",
													"value": "both",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- list a participant's assets",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets/participants/{participant_id}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets/participants/{{participant1_id}}?type=issued",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"participants",
												"{{participant1_id}}"
											],
											"query": [
												{
													"key": "type",
													"value": "issued",
													"description": "issued,both,trusted"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets/participants/{participant_id}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets/participants/{{participant2_id}}?type=both",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"participants",
												"{{participant2_id}}"
											],
											"query": [
												{
													"key": "type",
													"value": "both"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "7. exchange",
			"item": [
				{
					"name": "- 0 exchange NZDDO FJDDO",
					"item": [
						{
							"name": "1.OFI request quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
											"setTimeout(1000)",
											"postman.setNextRequest('OFI get quotes1')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"time_expire\": 1644775314,\n  \"limit_max\": 900,\n  \"limit_min\": 20,\n               \"source_asset\": {\n                   \"asset_code\": \"{{participant1-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"{{participant2-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  },\n  \"ofi_id\": \"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/global/pr/v1/client/quotes/request",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"client",
										"quotes",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.OFI get quotes1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(1);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/global/quotes/v1/client/quotes/request/{{request_id}}?",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3.[cryptoservice] RFI quote response signing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
										"exec": [
											"",
											"let obj = {",
											"    \"account_name_receive\": \"issuing\",",
											"    \"account_name_send\": \"issuing\",",
											"    \"exchange_rate\": 1,",
											"    \"limit_max\": 900,",
											"    \"quote_id\": pm.environment.get(\"quote_id\"),",
											"    \"quote_request\": {",
											"        \"time_expire\": 1644775314,",
											"        \"limit_max\": 900,",
											"        \"limit_min\": 20,",
											"        \"source_asset\": {",
											"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
											"                   \"asset_type\": \"DO\",",
											"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
											"               },",
											"               \"target_asset\": {",
											"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
											"                   \"asset_type\": \"DO\",",
											"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
											"  },",
											"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
											"        ",
											"    },",
											"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
											"    \"time_expire\": 1644775314,",
											"    \"time_start\": 1544516034",
											"}",
											"",
											"let objJsonStr = JSON.stringify(obj);",
											"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
											"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
											"pm.globals.set(\"variable_key\", \"variable_value\");",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64QuoteR}}\"\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/local/crypto/v1/client/sign",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"crypto",
										"v1",
										"client",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.RFI post quote envelope Base64",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/global/quotes/v1/client/quotes/{{quote_id}}",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"{{quote_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.OFI get quotes2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(2);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-url}}/global/quotes/v1/client/quotes/request/{{request_id}}",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.[cryptoservice] OFI exchange request signing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
										"exec": [
											"let obj = {",
											"   \"account_name_receive\":\"issuing\",",
											"   \"account_name_send\":\"issuing\",",
											"   \"amount\":1,",
											"   \"quote\":   {",
											"      \"account_name_receive\":\"issuing\",",
											"      \"account_name_send\":\"issuing\",",
											"      \"exchange_rate\":1,",
											"      \"limit_max\":900,",
											"      \"quote_id\":pm.environment.get(\"quote_id\"),",
											"      \"quote_request\": {",
											"        \"limit_max\": 900,",
											"        \"limit_min\": 20,",
											"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
											"        \"source_asset\": {",
											"                   \"asset_code\": pm.environment.get(\"participant1-asset\"),",
											"                   \"asset_type\": \"DO\",",
											"                   \"issuer_id\": pm.environment.get(\"participant1_id\")",
											"               },",
											"               \"target_asset\": {",
											"                   \"asset_code\": pm.environment.get(\"participant2-asset\"),",
											"                   \"asset_type\": \"DO\",",
											"                   \"issuer_id\": pm.environment.get(\"participant2_id\")",
											"  },",
											"        \"time_expire\": 1644775314",
											"    },",
											"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
											"      \"time_expire\":1644775314,",
											"      \"time_start\":1544516034",
											"   }",
											"}",
											"",
											"let objJsonStr = JSON.stringify(obj);",
											"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
											"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/local/crypto/v1/client/sign",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"crypto",
										"v1",
										"client",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "7.OFI execute exchange request Base64",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/global/quotes/v1/client/exchange",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"exchange"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.OFI get quotes3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(1);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{global-url}}/global/quotes/v1/client/quotes/request/{{request_id}}?",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- 1 exchange USD EUR",
					"item": [
						{
							"name": "1.OFI request quote",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ecb0d31-6c5e-48c5-9812-fac852708b44",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"request_id\", jsonData.request_id)",
											"setTimeout(1000)",
											"postman.setNextRequest('OFI get quotes1')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"time_expire\": 1644775314,\n    \"limit_max\": 90,\n    \"limit_min\": 20,\n    \"source_asset\": {\n        \"asset_code\": \"{{anchor-asset}}\",\n        \"asset_type\": \"DA\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"target_asset\": {\n        \"asset_code\": \"{{anchor-asset2}}\",\n        \"asset_type\": \"DA\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"ofi_id\": \"{{participant1_id}}\"\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/global/quotes/v1/client/quotes/request",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.OFI get quotes1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(1);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/global/quotes/v1/client/quotes/request/{{request_id}}?",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3.[cryptoservice] RFI quote response signing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "61af4148-ef31-4bdc-90b1-57479988b2ff",
										"exec": [
											"",
											"let obj = {",
											"    \"account_name_receive\": \"default\",",
											"    \"account_name_send\": \"default\",",
											"    \"exchange_rate\": 0.6046602,",
											"    \"limit_max\": 1000,",
											"    \"quote_id\": pm.environment.get(\"quote_id\"),",
											"    \"quote_request\": {",
											"        \"time_expire\": 1644516034,",
											"        \"limit_max\": 90,",
											"        \"limit_min\": 20,",
											"        \"source_asset\": {",
											"                   \"asset_code\": pm.environment.get(\"anchor-asset\"),",
											"                   \"asset_type\": \"DA\",",
											"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
											"               },",
											"               \"target_asset\": {",
											"                   \"asset_code\": pm.environment.get(\"anchor-asset2\"),",
											"                   \"asset_type\": \"DA\",",
											"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
											"  },",
											"  \"ofi_id\": pm.environment.get(\"participant1_id\")",
											"        ",
											"    },",
											"    \"rfi_id\": pm.environment.get(\"participant2_id\"),",
											"    \"time_expire\": 1644516034,",
											"    \"time_start\": 1544516034",
											"}",
											"",
											"let objJsonStr = JSON.stringify(obj);",
											"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
											"postman.setEnvironmentVariable(\"objJsonB64QuoteR\", objJsonB64)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8a199bb0-b45e-4c66-9704-a1be8f270832",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"signed_payload_RFI\", jsonData.transaction_signed);",
											"pm.globals.set(\"variable_key\", \"variable_value\");",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"account_name\": \"default\",\n \"payload\" : \"{{objJsonB64QuoteR}}\"}"
								},
								"url": {
									"raw": "{{participant2-url}}/local/crypto/v1/client/sign",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"crypto",
										"v1",
										"client",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.RFI post quote envelope Base64",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3b6f749-08cc-44e8-94ea-a5b4316b5b00",
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"quote\": \"{{objJsonB64QuoteR}}\",\n    \"signature\": \"{{signed_payload_RFI}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{participant2-url}}/global/quotes/v1/client/quotes/{{quote_id}}",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"{{quote_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.OFI get quotes2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(2);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-url}}/global/quotes/v1/client/quotes/request/{{request_id}}",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.[cryptoservice] OFI exchange request signing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
										"exec": [
											"let obj = {",
											"   \"account_name_receive\":\"default\",",
											"   \"account_name_send\":\"default\",",
											"   \"amount\":1,",
											"   \"quote\":   {",
											"      \"account_name_receive\":\"default\",",
											"      \"account_name_send\":\"default\",",
											"      \"exchange_rate\":0.6046602,",
											"      \"limit_max\":1000,",
											"      \"quote_id\":pm.environment.get(\"quote_id\"),",
											"      \"quote_request\": {",
											"        \"limit_max\": 90,",
											"        \"limit_min\": 20,",
											"        \"ofi_id\": pm.environment.get(\"participant1_id\"),",
											"        \"source_asset\": {",
											"                   \"asset_code\": pm.environment.get(\"anchor-asset\"),",
											"                   \"asset_type\": \"DA\",",
											"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
											"               },",
											"               \"target_asset\": {",
											"                   \"asset_code\": pm.environment.get(\"anchor-asset2\"),",
											"                   \"asset_type\": \"DA\",",
											"                   \"issuer_id\": pm.environment.get(\"anchor_id\")",
											"  },",
											"        \"time_expire\": 1644516034",
											"    },",
											"      \"rfi_id\":pm.environment.get(\"participant2_id\"),",
											"      \"time_expire\":1644516034,",
											"      \"time_start\":1544516034",
											"   }",
											"}",
											"",
											"let objJsonStr = JSON.stringify(obj);",
											"let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");",
											"postman.setEnvironmentVariable(\"objJsonB64ExchangeR\", objJsonB64)",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0d49afd4-8c0c-4e1a-9129-9fa134cabe07",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"signed_payload_OFI\", jsonData.transaction_signed);",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"default\",\n    \"payload\": \"{{objJsonB64ExchangeR}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{participant1-url}}/global/pr/v1/client/sign",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"pr",
										"v1",
										"client",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "7.OFI execute exchange request Base64",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2dcf8ea-53bd-4d4e-bfd9-18626447f504",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "71074b94-e190-4f78-9e2e-be4c0e0afdf0",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData.status_exchange).to.equal(\"OK\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"exchange\": \"{{objJsonB64ExchangeR}}\",\n    \"signature\": \"{{signed_payload_OFI}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{participant1-url}}/global/quotes/v1/client/exchange",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"exchange"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.OFI get quotes3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
											"setTimeout(foo,300)",
											"function foo(){",
											"pm.test(\"quote status update to 1\", function () {",
											"    pm.expect(jsonData[0].status).to.equal(1);",
											"});",
											"    ",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{global-url}}/global/quotes/v1/client/quotes/request/{{request_id}}?",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"quotes",
										"v1",
										"client",
										"quotes",
										"request",
										"{{request_id}}"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": " - 2 quoteFilter",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/quotes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"DeleteAllQuotes\": false,\n    \"status\": {\n        \"operator\": \"eq\",\n        \"threshold\": 2\n    },\n    \"exchange_rate\": {\n        \"operator\": \"lt\",\n        \"threshold\": 10\n    },\n    \"ofi_id\": \"{{participant1_id}}\",\n    \"rfi_id\": \"{{participant2_id}}\",\n    \"source_asset\": {\n                   \"asset_code\": \"{{participant1-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"{{participant2-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant1-url}}/global/quotes/v1/client/quotes?",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"global",
												"quotes",
												"v1",
												"client",
												"quotes"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/quotes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"DeleteAllQuotes\": false,\n    \"status\": {\n        \"operator\": \"eq\",\n        \"threshold\": 2\n    },\n    \"exchange_rate\": {\n        \"operator\": \"lt\",\n        \"threshold\": 10\n    },\n    \"ofi_id\": \"{{participant1_id}}\",\n    \"rfi_id\": \"{{participant2_id}}\",\n    \"source_asset\": {\n                   \"asset_code\": \"{{participant1-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"{{participant2-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/global/quotes/v1/client/quotes?",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"global",
												"quotes",
												"v1",
												"client",
												"quotes"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- 3 Delete quotes",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/quotes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"DeleteAllQuotes\": false,\n    \"status\": {\n        \"operator\": \"eq\",\n        \"threshold\": 2\n    },\n    \"exchange_rate\": {\n        \"operator\": \"lt\",\n        \"threshold\": 10\n    },\n    \"ofi_id\": \"{{participant1_id}}\",\n    \"rfi_id\": \"{{participant2_id}}\",\n    \"source_asset\": {\n                   \"asset_code\": \"{{participant1-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"{{participant2-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant1-url}}/global/quotes/v1/client/quotes?",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"global",
												"quotes",
												"v1",
												"client",
												"quotes"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/quotes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"DeleteAllQuotes\": false,\n    \"status\": {\n        \"operator\": \"eq\",\n        \"threshold\": 2\n    },\n    \"exchange_rate\": {\n        \"operator\": \"lt\",\n        \"threshold\": 10\n    },\n    \"ofi_id\": \"{{participant1_id}}\",\n    \"rfi_id\": \"{{participant2_id}}\",\n    \"source_asset\": {\n                   \"asset_code\": \"{{participant1-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant1_id}}\"\n               },\n               \"target_asset\": {\n                   \"asset_code\": \"{{participant2-asset}}\",\n                   \"asset_type\": \"DO\",\n                   \"issuer_id\": \"{{participant2_id}}\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/global/quotes/v1/client/quotes?",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"global",
												"quotes",
												"v1",
												"client",
												"quotes"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- 4 Get quotes",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/quotes/{quote_id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant1-url}}/global/quotes/v1/client/quotes/{{quote_id}}?",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"global",
												"quotes",
												"v1",
												"client",
												"quotes",
												"{{quote_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/quotes/{quote_id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/global/quotes/v1/client/quotes/{{quote_id}}?",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"global",
												"quotes",
												"v1",
												"client",
												"quotes",
												"{{quote_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fe485642-b64d-46af-9134-9eaaf01fb2c6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ab510973-c4fd-4b89-bb84-304d055c2e67",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "8.0 sign payload",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/payload/sign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "768dbc69-5980-4d15-8e8c-558423d29027",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"ofi_signed_msg\", jsonData.payload_with_signature)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"issuing\",\n    \"payload\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4gPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIHhtbG5zOmNjdD0idXJuOmlzbzpzdGQ6aXNvOjIwMDIyOnRlY2g6eHNkOnBhY3MuMDA4LjAwMS4wNyIgeG1sbnM6aGVhZD0idXJuOmlzbzpzdGQ6aXNvOjIwMDIyOnRlY2g6eHNkOmhlYWQuMDAxLjAwMS4wMSI+ICAgPEFwcEhkcj4gICAgIDxoZWFkOkZyPiAgICAgICA8aGVhZDpGSUlkPiAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+ICAgICAgICAgICA8aGVhZDpCSUNGST5TR1BUVEVTVDAwMzwvaGVhZDpCSUNGST4gICAgICAgICAgIDxoZWFkOk90aHI+ICAgICAgICAgICAgIDxoZWFkOklkPnRlc3RwYXJ0aWNpcGFudDNkZXY8L2hlYWQ6SWQ+ICAgICAgICAgICA8L2hlYWQ6T3Rocj4gICAgICAgICA8L2hlYWQ6RmluSW5zdG5JZD4gICAgICAgPC9oZWFkOkZJSWQ+ICAgICA8L2hlYWQ6RnI+ICAgICA8aGVhZDpUbz4gICAgICAgPGhlYWQ6RklJZD4gICAgICAgICA8aGVhZDpGaW5JbnN0bklkPiAgICAgICAgICAgPGhlYWQ6QklDRkk+V09STERXSVJFMDA8L2hlYWQ6QklDRkk+ICAgICAgICAgICA8aGVhZDpPdGhyPiAgICAgICAgICAgICA8aGVhZDpJZD5XVzwvaGVhZDpJZD4gICAgICAgICAgIDwvaGVhZDpPdGhyPiAgICAgICAgIDwvaGVhZDpGaW5JbnN0bklkPiAgICAgICA8L2hlYWQ6RklJZD4gICAgIDwvaGVhZDpUbz4gICAgIDxoZWFkOkJpek1zZ0lkcj5CMjAxOTEyMTdTR1BUVEVTVDAwM0JBQTc1MjI1NzU8L2hlYWQ6Qml6TXNnSWRyPiAgICAgPGhlYWQ6TXNnRGVmSWRyPnBhY3MuMDA4LjAwMS4wNzwvaGVhZDpNc2dEZWZJZHI+ICAgICA8aGVhZDpDcmVEdD4yMDE5LTEyLTE3VDAyOjE1OjEwWjwvaGVhZDpDcmVEdD4gICA8L0FwcEhkcj4gICA8RklUb0ZJQ3N0bXJDZHRUcmY+ICAgICA8Y2N0OkdycEhkcj4gICAgICAgPGNjdDpNc2dJZD5TR0RETzE3MTIyMDE5U0dQVFRFU1QwMDM3Njc3NjExMDc4MzwvY2N0Ok1zZ0lkPiAgICAgICA8Y2N0OkNyZUR0VG0+MjAxOS0xMi0xN1QwMjoxNToxMDwvY2N0OkNyZUR0VG0+ICAgICAgIDxjY3Q6TmJPZlR4cz4xPC9jY3Q6TmJPZlR4cz4gICAgICAgPGNjdDpTdHRsbUluZj4gICAgICAgICA8Y2N0OlN0dGxtTXRkPldXRE88L2NjdDpTdHRsbU10ZD4gICAgICAgICA8Y2N0OlN0dGxtQWNjdD4gICAgICAgICAgIDxjY3Q6SWQ+ICAgICAgICAgICAgIDxjY3Q6T3Rocj4gICAgICAgICAgICAgICA8Y2N0OklkPnRlc3RwYXJ0aWNpcGFudDNkZXY8L2NjdDpJZD4gICAgICAgICAgICAgPC9jY3Q6T3Rocj4gICAgICAgICAgIDwvY2N0OklkPiAgICAgICAgICAgPGNjdDpObT5pc3N1aW5nPC9jY3Q6Tm0+ICAgICAgICAgPC9jY3Q6U3R0bG1BY2N0PiAgICAgICA8L2NjdDpTdHRsbUluZj4gICAgICAgPGNjdDpQbXRUcEluZj4gICAgICAgICA8Y2N0OlN2Y0x2bD4gICAgICAgICAgIDxjY3Q6UHJ0cnk+dGVzdHBhcnRpY2lwYW50M2RldjwvY2N0OlBydHJ5PiAgICAgICAgIDwvY2N0OlN2Y0x2bD4gICAgICAgPC9jY3Q6UG10VHBJbmY+ICAgICAgIDxjY3Q6SW5zdGdBZ3Q+ICAgICAgICAgPGNjdDpGaW5JbnN0bklkPiAgICAgICAgICAgPGNjdDpCSUNGST5TR1BUVEVTVDAwMzwvY2N0OkJJQ0ZJPiAgICAgICAgICAgPGNjdDpPdGhyPiAgICAgICAgICAgICA8Y2N0OklkPnRlc3RwYXJ0aWNpcGFudDNkZXY8L2NjdDpJZD4gICAgICAgICAgIDwvY2N0Ok90aHI+ICAgICAgICAgPC9jY3Q6RmluSW5zdG5JZD4gICAgICAgPC9jY3Q6SW5zdGdBZ3Q+ICAgICAgIDxjY3Q6SW5zdGRBZ3Q+ICAgICAgICAgPGNjdDpGaW5JbnN0bklkPiAgICAgICAgICAgPGNjdDpCSUNGST5TR1BUVEVTVDAwNDwvY2N0OkJJQ0ZJPiAgICAgICAgICAgPGNjdDpPdGhyPiAgICAgICAgICAgICA8Y2N0OklkPnRlc3RwYXJ0aWNpcGFudDRkZXY8L2NjdDpJZD4gICAgICAgICAgIDwvY2N0Ok90aHI+ICAgICAgICAgPC9jY3Q6RmluSW5zdG5JZD4gICAgICAgPC9jY3Q6SW5zdGRBZ3Q+ICAgICA8L2NjdDpHcnBIZHI+ICAgICA8Y2N0OkNkdFRyZlR4SW5mPiAgICAgICA8Y2N0OlBtdElkPiAgICAgICAgIDxjY3Q6SW5zdHJJZD5TR0RETzIwMTkxMjE3U0dQVFRFU1QwMDNCNTY2NjUzMTcyMDwvY2N0Okluc3RySWQ+ICAgICAgICAgPGNjdDpFbmRUb0VuZElkPlNHRERPMTcxMjIwMTlTR1BUVEVTVDAwMzc2Nzc2MTEwNzgzPC9jY3Q6RW5kVG9FbmRJZD4gICAgICAgICA8Y2N0OlR4SWQ+U0dERE8xNzEyMjAxOVNHUFRURVNUMDAzNzY3NzYxMTA3ODM8L2NjdDpUeElkPiAgICAgICA8L2NjdDpQbXRJZD4gICAgICAgPGNjdDpJbnRyQmtTdHRsbUFtdCBDY3k9IlNHRERPIj4yPC9jY3Q6SW50ckJrU3R0bG1BbXQ+ICAgICAgIDxjY3Q6SW50ckJrU3R0bG1EdD4yMDE5LTEyLTE3PC9jY3Q6SW50ckJrU3R0bG1EdD4gICAgICAgPGNjdDpJbnN0ZEFtdCBDY3k9IlNHRERPIj4yPC9jY3Q6SW5zdGRBbXQ+ICAgICAgIDxjY3Q6WGNoZ1JhdGU+MTwvY2N0OlhjaGdSYXRlPiAgICAgICA8Y2N0OkNocmdCcj5ERUJUPC9jY3Q6Q2hyZ0JyPiAgICAgICA8Y2N0OkNocmdzSW5mPiAgICAgICAgIDxjY3Q6QW10IENjeT0iU0dERE8iPjAuMTwvY2N0OkFtdD4gICAgICAgICA8Y2N0OkFndD4gICAgICAgICAgIDxjY3Q6RmluSW5zdG5JZD4gICAgICAgICAgICAgPGNjdDpCSUNGST5TR1BUVEVTVDAwNDwvY2N0OkJJQ0ZJPiAgICAgICAgICAgICA8Y2N0Ok90aHI+ICAgICAgICAgICAgICAgPGNjdDpJZD50ZXN0cGFydGljaXBhbnQzZGV2PC9jY3Q6SWQ+ICAgICAgICAgICAgIDwvY2N0Ok90aHI+ICAgICAgICAgICA8L2NjdDpGaW5JbnN0bklkPiAgICAgICAgIDwvY2N0OkFndD4gICAgICAgPC9jY3Q6Q2hyZ3NJbmY+ICAgICAgIDxjY3Q6RGJ0cj4gICAgICAgICA8Y2N0Ok5tPkFCQzwvY2N0Ok5tPiAgICAgICAgIDxjY3Q6UHN0bEFkcj4gICAgICAgICAgIDxjY3Q6U3RydE5tPlRpbWVzIFNxdWFyZTwvY2N0OlN0cnRObT4gICAgICAgICAgIDxjY3Q6QmxkZ05iPjc8L2NjdDpCbGRnTmI+ICAgICAgICAgICA8Y2N0OlBzdENkPk5ZIDEwMDM2PC9jY3Q6UHN0Q2Q+ICAgICAgICAgICA8Y2N0OlR3bk5tPk5ldyBZb3JrPC9jY3Q6VHduTm0+ICAgICAgICAgICA8Y2N0OkN0cnk+VVM8L2NjdDpDdHJ5PiAgICAgICAgIDwvY2N0OlBzdGxBZHI+ICAgICAgIDwvY2N0OkRidHI+ICAgICAgIDxjY3Q6RGJ0ckFndD4gICAgICAgICA8Y2N0OkZpbkluc3RuSWQ+ICAgICAgICAgICA8Y2N0OkJJQ0ZJPlNHUFRURVNUMDAzPC9jY3Q6QklDRkk+ICAgICAgICAgICA8Y2N0Ok90aHI+ICAgICAgICAgICAgIDxjY3Q6SWQ+dGVzdHBhcnRpY2lwYW50M2RldjwvY2N0OklkPiAgICAgICAgICAgPC9jY3Q6T3Rocj4gICAgICAgICA8L2NjdDpGaW5JbnN0bklkPiAgICAgICA8L2NjdDpEYnRyQWd0PiAgICAgICA8Y2N0OkNkdHJBZ3Q+ICAgICAgICAgPGNjdDpGaW5JbnN0bklkPiAgICAgICAgICAgPGNjdDpCSUNGST5TR1BUVEVTVDAwNDwvY2N0OkJJQ0ZJPiAgICAgICAgICAgPGNjdDpPdGhyPiAgICAgICAgICAgICA8Y2N0OklkPnRlc3RwYXJ0aWNpcGFudDRkZXY8L2NjdDpJZD4gICAgICAgICAgIDwvY2N0Ok90aHI+ICAgICAgICAgPC9jY3Q6RmluSW5zdG5JZD4gICAgICAgPC9jY3Q6Q2R0ckFndD4gICAgICAgPGNjdDpDZHRyPiAgICAgICAgIDxjY3Q6Tm0+REVGPC9jY3Q6Tm0+ICAgICAgICAgPGNjdDpQc3RsQWRyPiAgICAgICAgICAgPGNjdDpTdHJ0Tm0+TWFyayBMYW5lPC9jY3Q6U3RydE5tPiAgICAgICAgICAgPGNjdDpCbGRnTmI+NTU8L2NjdDpCbGRnTmI+ICAgICAgICAgICA8Y2N0OlBzdENkPkVDM1I3TkU8L2NjdDpQc3RDZD4gICAgICAgICAgIDxjY3Q6VHduTm0+TG9uZG9uPC9jY3Q6VHduTm0+ICAgICAgICAgICA8Y2N0OkN0cnk+R0I8L2NjdDpDdHJ5PiAgICAgICAgICAgPGNjdDpBZHJMaW5lPkNvcm4gRXhjaGFuZ2UgNXRoIEZsb29yPC9jY3Q6QWRyTGluZT4gICAgICAgICA8L2NjdDpQc3RsQWRyPiAgICAgICA8L2NjdDpDZHRyPiAgICAgICA8Y2N0OlNwbG10cnlEYXRhPiAgICAgICAgIDxjY3Q6UGxjQW5kTm0+cGF5b3V0PC9jY3Q6UGxjQW5kTm0+ICAgICAgICAgPGNjdDpFbnZscD4gICAgICAgICAgIDxjY3Q6SWQ+MTIzPC9jY3Q6SWQ+ICAgICAgICAgPC9jY3Q6RW52bHA+ICAgICAgIDwvY2N0OlNwbG10cnlEYXRhPiAgICAgICA8Y2N0OlNwbG10cnlEYXRhPiAgICAgICAgIDxjY3Q6UGxjQW5kTm0+ZmVlPC9jY3Q6UGxjQW5kTm0+ICAgICAgICAgPGNjdDpFbnZscD4gICAgICAgICAgIDxjY3Q6SWQ+NDU2PC9jY3Q6SWQ+ICAgICAgICAgPC9jY3Q6RW52bHA+ICAgICAgIDwvY2N0OlNwbG10cnlEYXRhPiAgICAgPC9jY3Q6Q2R0VHJmVHhJbmY+ICAgPC9GSVRvRklDc3RtckNkdFRyZj4gPC9NZXNzYWdlPg==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{participant1-url}}/local/crypto/v1/client/payload/sign",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"crypto",
										"v1",
										"client",
										"payload",
										"sign"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/client/payload/sign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2278cab-c832-4452-b21d-3797a7034576",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"rfi_signed_msg\", jsonData.payload_with_signature)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_name\": \"default\",\n    \"payload\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIAogICB4bWxuczp1dGE9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpjYW10LjAyNi4wMDEuMDciIAogICB4bWxuczpoZWFkPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aGVhZC4wMDEuMDAxLjAxIj4KICAgPEFwcEhkcj4KICAgICAgPGhlYWQ6RnI+CiAgICAgICAgIDxoZWFkOkZJSWQ+CiAgICAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxoZWFkOkJJQ0ZJPklCTVFBSUJNMDAyPC9oZWFkOkJJQ0ZJPgogICAgICAgICAgICAgICA8aGVhZDpPdGhyPgogICAgICAgICAgICAgICAgICA8aGVhZDpJZD5pYm0wMjwvaGVhZDpJZD4KICAgICAgICAgICAgICAgPC9oZWFkOk90aHI+CiAgICAgICAgICAgIDwvaGVhZDpGaW5JbnN0bklkPgogICAgICAgICA8L2hlYWQ6RklJZD4KICAgICAgPC9oZWFkOkZyPgogICAgICA8aGVhZDpUbz4KICAgICAgICAgPGhlYWQ6RklJZD4KICAgICAgICAgICAgPGhlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgPGhlYWQ6QklDRkk+V09STERXSVJFMDA8L2hlYWQ6QklDRkk+CiAgICAgICAgICAgICAgIDxoZWFkOk90aHI+CiAgICAgICAgICAgICAgICAgIDxoZWFkOklkPldXPC9oZWFkOklkPgogICAgICAgICAgICAgICA8L2hlYWQ6T3Rocj4KICAgICAgICAgICAgPC9oZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgIDwvaGVhZDpGSUlkPgogICAgICA8L2hlYWQ6VG8+CiAgICAgIDxoZWFkOkJpek1zZ0lkcj5CMjAxOTEyMTJJQk1RQUlCTTAwMkJBQTQ3MTA0NDk8L2hlYWQ6Qml6TXNnSWRyPgogICAgICA8aGVhZDpNc2dEZWZJZHI+Y2FtdC4wMjYuMDAxLjA3PC9oZWFkOk1zZ0RlZklkcj4KICAgICAgPGhlYWQ6Q3JlRHQ+MjAxOS0wOC0xOVQxMzoxMjoxOFo8L2hlYWQ6Q3JlRHQ+CiAgIDwvQXBwSGRyPgogICA8VWJsVG9BcHBseT4KICAgICAgPHV0YTpBc3Nnbm10PgogICAgICAgICA8dXRhOklkPlVTRERPMjAxOTEyMTJJQk1RQUlCTTAwMkIzODg5NzQ3MDE2PC91dGE6SWQ+CiAgICAgICAgIDx1dGE6QXNzZ25yPgogICAgICAgICAgICA8dXRhOkFndD4KICAgICAgICAgICAgICAgPHV0YTpGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICA8dXRhOkJJQ0ZJPklCTVFBSUJNMDAyPC91dGE6QklDRkk+CiAgICAgICAgICAgICAgICAgIDx1dGE6T3Rocj4KICAgICAgICAgICAgICAgICAgICAgPHV0YTpJZD5pYm0wMjwvdXRhOklkPgogICAgICAgICAgICAgICAgICA8L3V0YTpPdGhyPgogICAgICAgICAgICAgICA8L3V0YTpGaW5JbnN0bklkPgogICAgICAgICAgICA8L3V0YTpBZ3Q+CiAgICAgICAgIDwvdXRhOkFzc2ducj4KICAgICAgICAgPHV0YTpBc3NnbmU+CiAgICAgICAgICAgIDx1dGE6QWd0PgogICAgICAgICAgICAgICA8dXRhOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgIDx1dGE6QklDRkk+SUJNUUFJQk0wMDI8L3V0YTpCSUNGST4KICAgICAgICAgICAgICAgICAgPHV0YTpPdGhyPgogICAgICAgICAgICAgICAgICAgICA8dXRhOklkPmlibTAxPC91dGE6SWQ+CiAgICAgICAgICAgICAgICAgIDwvdXRhOk90aHI+CiAgICAgICAgICAgICAgIDwvdXRhOkZpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvdXRhOkFndD4KICAgICAgICAgPC91dGE6QXNzZ25lPgogICAgICAgICA8dXRhOkNyZUR0VG0+MjAxOS0wOC0xOVQxMzoxMjoxOFo8L3V0YTpDcmVEdFRtPgogICAgICA8L3V0YTpBc3Nnbm10PgogICAgICA8dXRhOlVuZHJseWc+CiAgICAgICAgIDx1dGE6SW5pdG4+CiAgICAgICAgICAgIDx1dGE6T3JnbmxJbnN0cklkPlVTRERPMjAxOTEyMTJJQk1RQUlCTTAwMUI3Nzk4NTcxMTM5PC91dGE6T3JnbmxJbnN0cklkPgogICAgICAgICAgICA8dXRhOk9yZ25sSW5zdGRBbXQgQ2N5PSJVU0RETyI+MjwvdXRhOk9yZ25sSW5zdGRBbXQ+CiAgICAgICAgIDwvdXRhOkluaXRuPgogICAgICA8L3V0YTpVbmRybHlnPgogICAgICA8dXRhOkp1c3Rmbj4KICAgICAgICAgPHV0YTpNc3NuZ09ySW5jcnJjdEluZj4KICAgICAgICAgICAgPHV0YTpJbmNycmN0SW5mPgogICAgICAgICAgICAgICA8dXRhOkNkPklOMDE8L3V0YTpDZD4KICAgICAgICAgICAgPC91dGE6SW5jcnJjdEluZj4KICAgICAgICAgPC91dGE6TXNzbmdPckluY3JyY3RJbmY+CiAgICAgIDwvdXRhOkp1c3Rmbj4KICAgPC9VYmxUb0FwcGx5Pgo8L01lc3NhZ2U+\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{participant2-url}}/local/crypto/v1/client/payload/sign",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"crypto",
										"v1",
										"client",
										"payload",
										"sign"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "8. payment",
			"item": [
				{
					"name": "DO",
					"item": [
						{
							"name": "participant1 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:pacs.008.001.07\",\n    \"message\": \"{{ofi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant1-url}}/local/send/v1/client/transactions/send",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 receive",
							"item": [
								{
									"name": "/transactions/reply",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:ibwf.001.001.01\",\n    \"message\": \"{{rfi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/local/send/v1/client/transactions/reply",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"reply"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DA",
					"item": [
						{
							"name": "participant1 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"message_type\": \"iso20022:pacs.008.001.07\",\n\t\"message\": \"{{ofi_signed_msg}}\"\n}"
										},
										"url": {
											"raw": "{{participant1-url}}/local/send/v1/client/transactions/send",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 receive",
							"item": [
								{
									"name": "/transactions/reply",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"message_type\": \"iso20022:ibwf.001.001.01\",\n\t\"message\": \"{{rfi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/local/send/v1/client/transactions/reply",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"reply"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "RDO",
					"item": [
						{
							"name": "participant1 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"message_type\": \"iso20022:ibwf.002.001.01\",\n\t\"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIAogICAgeG1sbnM6aGVhZD0idXJuOmlzbzpzdGQ6aXNvOjIwMDIyOnRlY2g6eHNkOmhlYWQuMDAxLjAwMS4wMSIgCiAgICB4bWxuczpkb3NuPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aWJ3Zi4wMDIuMDAxLjAxIj4KICAgIDxBcHBIZHI+CiAgICAgICAgPGhlYWQ6RnI+CiAgICAgICAgICAgIDxoZWFkOkZJSWQ+CiAgICAgICAgICAgICAgICA8aGVhZDpGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxoZWFkOkJJQ0ZJPkNBUk1FTlVTMDAxPC9oZWFkOkJJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDxoZWFkOk90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoZWFkOklkPmNhcm1lbjFkZXY8L2hlYWQ6SWQ+CiAgICAgICAgICAgICAgICAgICAgPC9oZWFkOk90aHI+CiAgICAgICAgICAgICAgICA8L2hlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgPC9oZWFkOkZJSWQ+CiAgICAgICAgPC9oZWFkOkZyPgogICAgICAgIDxoZWFkOlRvPgogICAgICAgICAgICA8aGVhZDpGSUlkPgogICAgICAgICAgICAgICAgPGhlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8aGVhZDpCSUNGST5XT1JMRFdJUkUwMDwvaGVhZDpCSUNGST4KICAgICAgICAgICAgICAgICAgICA8aGVhZDpPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8aGVhZDpJZD5XVzwvaGVhZDpJZD4KICAgICAgICAgICAgICAgICAgICA8L2hlYWQ6T3Rocj4KICAgICAgICAgICAgICAgIDwvaGVhZDpGaW5JbnN0bklkPgogICAgICAgICAgICA8L2hlYWQ6RklJZD4KICAgICAgICA8L2hlYWQ6VG8+CiAgICAgICAgPGhlYWQ6Qml6TXNnSWRyPkIyMDE5MDgyMkNBUk1FTlVTMDAxQkFBODE2MTQ2MTwvaGVhZDpCaXpNc2dJZHI+CiAgICAgICAgPGhlYWQ6TXNnRGVmSWRyPiRTRU5EX1JFUVVFU1RfRklMRV9OQU1FPC9oZWFkOk1zZ0RlZklkcj4KICAgICAgICA8aGVhZDpDcmVEdD4yMDE5LTA4LTIyVDA5OjQ3OjA2WjwvaGVhZDpDcmVEdD4KICAgIDwvQXBwSGRyPgogICAgPERpZ09ibFNldE5vdGlmPgogICAgICAgIDxkb3NuOkdycEhkcj4KICAgICAgICAgICAgPGRvc246TXNnSWQ+VVNERE8yMjA4MjAxOUNBUk1FTlVTMDAxNDE1OTAwMjkxNjk8L2Rvc246TXNnSWQ+CiAgICAgICAgICAgIDxkb3NuOkNyZUR0VG0+MjAxOS0wOC0yMlQwOTo0NzowNjwvZG9zbjpDcmVEdFRtPgogICAgICAgICAgICA8ZG9zbjpOYk9mVHhzPjE8L2Rvc246TmJPZlR4cz4KICAgICAgICAgICAgPGRvc246U3R0bG1JbmY+CiAgICAgICAgICAgICAgICA8ZG9zbjpTdHRsbU10ZD5XV0RPPC9kb3NuOlN0dGxtTXRkPgogICAgICAgICAgICAgICAgPGRvc246U3R0bG1BY2N0PgogICAgICAgICAgICAgICAgICAgIDxkb3NuOklkPgogICAgICAgICAgICAgICAgICAgICAgICA8ZG9zbjpPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRvc246SWQ+Y2FybWVuMWRldjwvZG9zbjpJZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kb3NuOk90aHI+CiAgICAgICAgICAgICAgICAgICAgPC9kb3NuOklkPgogICAgICAgICAgICAgICAgICAgIDxkb3NuOk5tPmlzc3Vpbmc8L2Rvc246Tm0+CiAgICAgICAgICAgICAgICA8L2Rvc246U3R0bG1BY2N0PgogICAgICAgICAgICA8L2Rvc246U3R0bG1JbmY+CiAgICAgICAgICAgIDxkb3NuOkluc3RnQWd0PgogICAgICAgICAgICAgICAgPGRvc246RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgICAgICA8ZG9zbjpCSUNGST5DQVJNRU5VUzAwMTwvZG9zbjpCSUNGST4KICAgICAgICAgICAgICAgICAgICA8ZG9zbjpPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICA8ZG9zbjpJZD5jYXJtZW4xZGV2PC9kb3NuOklkPgogICAgICAgICAgICAgICAgICAgIDwvZG9zbjpPdGhyPgogICAgICAgICAgICAgICAgPC9kb3NuOkZpbkluc3RuSWQ+CiAgICAgICAgICAgIDwvZG9zbjpJbnN0Z0FndD4KICAgICAgICAgICAgPGRvc246SW5zdGRBZ3Q+CiAgICAgICAgICAgICAgICA8ZG9zbjpGaW5JbnN0bklkPgogICAgICAgICAgICAgICAgICAgIDxkb3NuOkJJQ0ZJPkNBUk1FTlVTMDAyPC9kb3NuOkJJQ0ZJPgogICAgICAgICAgICAgICAgICAgIDxkb3NuOk90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkb3NuOklkPmNhcm1lbjJkZXY8L2Rvc246SWQ+CiAgICAgICAgICAgICAgICAgICAgPC9kb3NuOk90aHI+CiAgICAgICAgICAgICAgICA8L2Rvc246RmluSW5zdG5JZD4KICAgICAgICAgICAgPC9kb3NuOkluc3RkQWd0PgogICAgICAgIDwvZG9zbjpHcnBIZHI+CiAgICAgICAgPGRvc246U3R0bE9ibEluZj4KICAgICAgICAgICAgPGRvc246T3JnbmxHcnBJbmY+CiAgICAgICAgICAgICAgICA8ZG9zbjpPcmdubE1zZ0lkPlVTRERPMjIwODIwMTlDQVJNRU5VUzAwMTY5NjM5MDAzMTg4PC9kb3NuOk9yZ25sTXNnSWQ+CiAgICAgICAgICAgICAgICA8ZG9zbjpPcmdubE1zZ05tSWQ+cGFjcy4wMDguMDAxLjA3PC9kb3NuOk9yZ25sTXNnTm1JZD4KICAgICAgICAgICAgICAgIDxkb3NuOk9yZ25sQ3JlRHRUbT4yMDE5LTA4LTIyPC9kb3NuOk9yZ25sQ3JlRHRUbT4KICAgICAgICAgICAgPC9kb3NuOk9yZ25sR3JwSW5mPgogICAgICAgICAgICA8ZG9zbjpUeEluZj4KICAgICAgICAgICAgICAgIDxkb3NuOk50ZklkPlVTRERPMjIwODIwMTlDQVJNRU5VUzAwMTY5NjM5MDAzMTg4PC9kb3NuOk50ZklkPgogICAgICAgICAgICAgICAgPGRvc246T3JnbmxJbnN0cklkPlVTRERPMjAxOTA4MjJDQVJNRU5VUzAwMUI2NDQzMTk1MjI5PC9kb3NuOk9yZ25sSW5zdHJJZD4KICAgICAgICAgICAgICAgIDxkb3NuOk9yZ25sRW5kVG9FbmRJZD5VU0RETzIyMDgyMDE5Q0FSTUVOVVMwMDE2OTYzOTAwMzE4ODwvZG9zbjpPcmdubEVuZFRvRW5kSWQ+CiAgICAgICAgICAgICAgICA8ZG9zbjpPcmdubFR4SWQ+VVNERE8yMjA4MjAxOUNBUk1FTlVTMDAxNjk2MzkwMDMxODg8L2Rvc246T3JnbmxUeElkPgogICAgICAgICAgICAgICAgPGRvc246QWN0U3R0bGRBbXQgQ2N5PSJVU0RETyI+MTA8L2Rvc246QWN0U3R0bGRBbXQ+CiAgICAgICAgICAgICAgICA8ZG9zbjpPcmdubFR4UmVmPgogICAgICAgICAgICAgICAgICAgIDxkb3NuOkludHJCa1N0dGxtQW10IENjeT0iVVNERE8iPjEwPC9kb3NuOkludHJCa1N0dGxtQW10PgogICAgICAgICAgICAgICAgICAgIDxkb3NuOkRidHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkb3NuOk5tPkFCQzwvZG9zbjpObT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRvc246UHN0bEFkcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkb3NuOlN0cnRObT5UaW1lcyBTcXVhcmU8L2Rvc246U3RydE5tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRvc246QmxkZ05iPjc8L2Rvc246QmxkZ05iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRvc246UHN0Q2Q+TlkgMTAwMzY8L2Rvc246UHN0Q2Q+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZG9zbjpUd25ObT5OZXcgWW9yazwvZG9zbjpUd25ObT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkb3NuOkN0cnk+VVM8L2Rvc246Q3RyeT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kb3NuOlBzdGxBZHI+CiAgICAgICAgICAgICAgICAgICAgPC9kb3NuOkRidHI+CiAgICAgICAgICAgICAgICAgICAgPGRvc246Q2R0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRvc246Tm0+REVGPC9kb3NuOk5tPgogICAgICAgICAgICAgICAgICAgICAgICA8ZG9zbjpQc3RsQWRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRvc246U3RydE5tPk1hcmsgTGFuZTwvZG9zbjpTdHJ0Tm0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZG9zbjpCbGRnTmI+NTU8L2Rvc246QmxkZ05iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRvc246UHN0Q2Q+RUMzUjdORTwvZG9zbjpQc3RDZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkb3NuOlR3bk5tPkxvbmRvbjwvZG9zbjpUd25ObT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkb3NuOkN0cnk+R0I8L2Rvc246Q3RyeT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kb3NuOlBzdGxBZHI+CiAgICAgICAgICAgICAgICAgICAgPC9kb3NuOkNkdHI+CiAgICAgICAgICAgICAgICA8L2Rvc246T3JnbmxUeFJlZj4KICAgICAgICAgICAgPC9kb3NuOlR4SW5mPgogICAgICAgIDwvZG9zbjpTdHRsT2JsSW5mPgogICAgPC9EaWdPYmxTZXROb3RpZj4KPC9NZXNzYWdlPg==\"\n}"
										},
										"url": {
											"raw": "{{participant1-url}}/local/send/v1/client/transactions/send",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 receive",
							"item": [
								{
									"name": "/transactions/reply",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:pacs.004.001.09\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPE1lc3NhZ2UgeG1sbnM9InVybjp3b3JsZHdpcmUiIAogICB4bWxuczpoZWFkPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6aGVhZC4wMDEuMDAxLjAxIiAKICAgeG1sbnM6cHI9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpwYWNzLjAwNC4wMDEuMDkiPgogICA8QXBwSGRyPgogICAgICA8aGVhZDpGcj4KICAgICAgICAgPGhlYWQ6RklJZD4KICAgICAgICAgICAgPGhlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgPGhlYWQ6QklDRkk+VVNBU1RVU0UwMDI8L2hlYWQ6QklDRkk+CiAgICAgICAgICAgICAgIDxoZWFkOk90aHI+CiAgICAgICAgICAgICAgICAgIDxoZWFkOklkPnRlc3RwYXJ0aWNpcGFudDI8L2hlYWQ6SWQ+CiAgICAgICAgICAgICAgIDwvaGVhZDpPdGhyPgogICAgICAgICAgICA8L2hlYWQ6RmluSW5zdG5JZD4KICAgICAgICAgPC9oZWFkOkZJSWQ+CiAgICAgIDwvaGVhZDpGcj4KICAgICAgPGhlYWQ6VG8+CiAgICAgICAgIDxoZWFkOkZJSWQ+CiAgICAgICAgICAgIDxoZWFkOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgIDxoZWFkOkJJQ0ZJPldPUkxEV0lSRTAwPC9oZWFkOkJJQ0ZJPgogICAgICAgICAgICAgICA8aGVhZDpPdGhyPgogICAgICAgICAgICAgICAgICA8aGVhZDpJZD5XVzwvaGVhZDpJZD4KICAgICAgICAgICAgICAgPC9oZWFkOk90aHI+CiAgICAgICAgICAgIDwvaGVhZDpGaW5JbnN0bklkPgogICAgICAgICA8L2hlYWQ6RklJZD4KICAgICAgPC9oZWFkOlRvPgogICAgICA8aGVhZDpCaXpNc2dJZHI+QjIwMTkwODI4U0dQU1RVU0UwMDFCQUE0NTA0NTA0PC9oZWFkOkJpek1zZ0lkcj4KICAgICAgPGhlYWQ6TXNnRGVmSWRyPnBhY3MuMDA0LjAwMS4wOTwvaGVhZDpNc2dEZWZJZHI+CiAgICAgIDxoZWFkOkNyZUR0PjIwMTktMDgtMjhUMTM6MjY6NDVaPC9oZWFkOkNyZUR0PgogICA8L0FwcEhkcj4KICAgPFBtdFJ0cj4KICAgICAgPHByOkdycEhkcj4KICAgICAgICAgPHByOk1zZ0lkPlVTRERPMjgwODIwMTlTR1BTVFVTRTAwMTMwODQyNjg4NjMwPC9wcjpNc2dJZD4KICAgICAgICAgPHByOkNyZUR0VG0+MjAxOS0wOC0yOFQxMzoyNjo0NTwvcHI6Q3JlRHRUbT4KICAgICAgICAgPHByOk5iT2ZUeHM+MTwvcHI6TmJPZlR4cz4KICAgICAgICAgPHByOlN0dGxtSW5mPgogICAgICAgICAgICA8cHI6U3R0bG1NdGQ+V1dETzwvcHI6U3R0bG1NdGQ+CiAgICAgICAgICAgIDxwcjpTdHRsbUFjY3Q+CiAgICAgICAgICAgICAgIDxwcjpJZD4KICAgICAgICAgICAgICAgICAgPHByOk90aHI+CiAgICAgICAgICAgICAgICAgICAgIDxwcjpJZD50ZXN0cGFydGljaXBhbnQyPC9wcjpJZD4KICAgICAgICAgICAgICAgICAgPC9wcjpPdGhyPgogICAgICAgICAgICAgICA8L3ByOklkPgogICAgICAgICAgICAgICA8cHI6Tm0+aXNzdWluZzwvcHI6Tm0+CiAgICAgICAgICAgIDwvcHI6U3R0bG1BY2N0PgogICAgICAgICA8L3ByOlN0dGxtSW5mPgogICAgICAgICA8cHI6SW5zdGdBZ3Q+CiAgICAgICAgICAgIDxwcjpGaW5JbnN0bklkPgogICAgICAgICAgICAgICA8cHI6QklDRkk+VVNBU1RVU0UwMDI8L3ByOkJJQ0ZJPgogICAgICAgICAgICAgICA8cHI6T3Rocj4KICAgICAgICAgICAgICAgICAgPHByOklkPnRlc3RwYXJ0aWNpcGFudDI8L3ByOklkPgogICAgICAgICAgICAgICA8L3ByOk90aHI+CiAgICAgICAgICAgIDwvcHI6RmluSW5zdG5JZD4KICAgICAgICAgPC9wcjpJbnN0Z0FndD4KICAgICAgICAgPHByOkluc3RkQWd0PgogICAgICAgICAgICA8cHI6RmluSW5zdG5JZD4KICAgICAgICAgICAgICAgPHByOkJJQ0ZJPlNHUFNUVVNFMDAxPC9wcjpCSUNGST4KICAgICAgICAgICAgICAgPHByOk90aHI+CiAgICAgICAgICAgICAgICAgIDxwcjpJZD50ZXN0aWJtcGFydGljaXBhbnQxPC9wcjpJZD4KICAgICAgICAgICAgICAgPC9wcjpPdGhyPgogICAgICAgICAgICA8L3ByOkZpbkluc3RuSWQ+CiAgICAgICAgIDwvcHI6SW5zdGRBZ3Q+CiAgICAgIDwvcHI6R3JwSGRyPgogICAgICA8cHI6T3JnbmxHcnBJbmY+CiAgICAgICAgIDxwcjpPcmdubE1zZ0lkPlVTRERPMjgwODIwMTlTR1BTVFVTRTAwMTUzODgyOTYwMjA5PC9wcjpPcmdubE1zZ0lkPgogICAgICAgICA8cHI6T3JnbmxNc2dObUlkPnBhY3MuMDA4LjAwMS4wNzwvcHI6T3JnbmxNc2dObUlkPgogICAgICAgICA8cHI6T3JnbmxDcmVEdFRtPjIwMTktMDgtMjhUMTM6MjM6NDc8L3ByOk9yZ25sQ3JlRHRUbT4KICAgICAgICAgPHByOlJ0clJzbkluZj4KICAgICAgICAgICAgIDxwcjpSc24+CiAgICAgICAgICAgICAgIDxwcjpDZD4xMDAwPC9wcjpDZD4KICAgICAgICAgICAgPC9wcjpSc24+CiAgICAgICAgICAgIDxwcjpBZGR0bEluZj5QYXltZW50IGNhbmNlbGxhdGlvbiBhY2NlcHRlZDwvcHI6QWRkdGxJbmY+CiAgICAgICAgICA8L3ByOlJ0clJzbkluZj4KICAgICAgPC9wcjpPcmdubEdycEluZj4KICAgICAgPHByOlR4SW5mPgogICAgICAgICA8cHI6UnRySWQ+VVNERE8yODA4MjAxOVNHUFNUVVNFMDAxNTM4ODI5NjAyMDk8L3ByOlJ0cklkPgogICAgICAgICA8cHI6T3JnbmxJbnN0cklkPlVTRERPMjAxOTA4MjhTR1BTVFVTRTAwMUIxMTE2MzIxMjA2PC9wcjpPcmdubEluc3RySWQ+CiAgICAgICAgIDxwcjpPcmdubEVuZFRvRW5kSWQ+VVNERE8yODA4MjAxOVNHUFNUVVNFMDAxNTM4ODI5NjAyMDk8L3ByOk9yZ25sRW5kVG9FbmRJZD4KICAgICAgICAgPHByOk9yZ25sVHhJZD5VU0RETzI4MDgyMDE5U0dQU1RVU0UwMDE1Mzg4Mjk2MDIwOTwvcHI6T3JnbmxUeElkPgogICAgICAgICA8cHI6T3JnbmxJbnRyQmtTdHRsbUFtdCBDY3k9IlVTRERPIj4xMDwvcHI6T3JnbmxJbnRyQmtTdHRsbUFtdD4KICAgICAgICAgPHByOlJ0cmRJbnRyQmtTdHRsbUFtdCBDY3k9IlVTRERPIj45PC9wcjpSdHJkSW50ckJrU3R0bG1BbXQ+CiAgICAgICAgIDxwcjpJbnRyQmtTdHRsbUR0PjIwMTktMDgtMjg8L3ByOkludHJCa1N0dGxtRHQ+CiAgICAgICAgIDxwcjpSdHJkSW5zdGRBbXQgQ2N5PSJVU0RETyI+OTwvcHI6UnRyZEluc3RkQW10PgogICAgICAgICA8cHI6Q2hyZ0JyPkNSRUQ8L3ByOkNocmdCcj4KICAgICAgICAgPHByOkNocmdzSW5mPgogICAgICAgICAgICA8cHI6QW10IENjeT0iVVNERE8iPjE8L3ByOkFtdD4KICAgICAgICAgICAgPHByOkFndD4KICAgICAgICAgICAgICAgPHByOkZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgIDxwcjpCSUNGST5VU0FTVFVTRTAwMjwvcHI6QklDRkk+CiAgICAgICAgICAgICAgICAgIDxwcjpPdGhyPgogICAgICAgICAgICAgICAgICAgICA8cHI6SWQ+dGVzdHBhcnRpY2lwYW50MjwvcHI6SWQ+CiAgICAgICAgICAgICAgICAgIDwvcHI6T3Rocj4KICAgICAgICAgICAgICAgPC9wcjpGaW5JbnN0bklkPgogICAgICAgICAgICA8L3ByOkFndD4KICAgICAgICAgPC9wcjpDaHJnc0luZj4KICAgICAgICAgPHByOlJ0clJzbkluZj4KICAgICAgICAgICAgPHByOk9yZ3RyPgogICAgICAgICAgICAgICA8cHI6Tm0+QUJDIENvcnBvcmF0aW9uPC9wcjpObT4KICAgICAgICAgICAgPC9wcjpPcmd0cj4KICAgICAgICAgICAgPHByOlJzbj4KICAgICAgICAgICAgICAgPHByOlBydHJ5PkJlbmVmaWNpYXJ5IGluZm9ybWF0aW9uIGlzIHdyb25nPC9wcjpQcnRyeT4KICAgICAgICAgICAgPC9wcjpSc24+CiAgICAgICAgICAgIDxwcjpBZGR0bEluZj5SRVRVUk4gQUZURVIgQUNDRVBURUQgUEFZTUVOVCBDQU5DRUxMQVRJT04gUkVRVUVTVDwvcHI6QWRkdGxJbmY+CiAgICAgICAgIDwvcHI6UnRyUnNuSW5mPgogICAgICAgICA8cHI6T3JnbmxUeFJlZj4KICAgICAgICAgICAgPHByOlN0dGxtSW5mPgogICAgICAgICAgICAgICA8cHI6U3R0bG1NdGQ+V1dETzwvcHI6U3R0bG1NdGQ+CiAgICAgICAgICAgICAgIDxwcjpTdHRsbUFjY3Q+CiAgICAgICAgICAgICAgICAgIDxwcjpJZD4KICAgICAgICAgICAgICAgICAgICAgPHByOk90aHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwcjpJZD50ZXN0aWJtcGFydGljaXBhbnQxPC9wcjpJZD4KICAgICAgICAgICAgICAgICAgICAgPC9wcjpPdGhyPgogICAgICAgICAgICAgICAgICA8L3ByOklkPgogICAgICAgICAgICAgICAgICA8cHI6Tm0+aXNzdWluZzwvcHI6Tm0+CiAgICAgICAgICAgICAgIDwvcHI6U3R0bG1BY2N0PgogICAgICAgICAgICA8L3ByOlN0dGxtSW5mPgogICAgICAgICAgICA8cHI6UG10VHBJbmY+CiAgICAgICAgICAgICAgIDxwcjpTdmNMdmw+CiAgICAgICAgICAgICAgICAgIDxwcjpQcnRyeT50ZXN0aWJtcGFydGljaXBhbnQxPC9wcjpQcnRyeT4KICAgICAgICAgICAgICAgPC9wcjpTdmNMdmw+CiAgICAgICAgICAgIDwvcHI6UG10VHBJbmY+CiAgICAgICAgIDwvcHI6T3JnbmxUeFJlZj4KICAgICAgPC9wcjpUeEluZj4KICAgPC9QbXRSdHI+CjwvTWVzc2FnZT4=\"\n}"
										},
										"url": {
											"raw": "{{participant2-url}}/local/send/v1/client/transactions/reply",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"reply"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cancel",
					"item": [
						{
							"name": "1. cancel request",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/transactions/send",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message_type\": \"iso20022:camt.056.001.08\",\n    \"message\": \"{{ofi_signed_msg}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{participant1-url}}/local/send/v1/client/transactions/send",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"send",
														"v1",
														"client",
														"transactions",
														"send"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/transactions/send",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message_type\": \"iso20022:camt.056.001.08\",\n    \"message\": \"{{rfi_signed_msg}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{participant2-url}}/local/send/v1/client/transactions/send",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"send",
														"v1",
														"client",
														"transactions",
														"send"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "reject",
							"item": [
								{
									"name": "/transactions/reply",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:camt.029.001.09\",\n    \"message\": \"{{rfi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/local/send/v1/client/transactions/reply",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"reply"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "agree",
							"item": [
								{
									"name": "/transactions/reply",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:pacs.004.001.09\",\n    \"message\": \"{{rfi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/local/send/v1/client/transactions/reply",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"reply"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "deliver fail",
					"item": [
						{
							"name": "participant1 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:pacs.008.001.07\",\n    \"message\": \"{{ofi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant1-url}}/local/send/v1/client/transactions/send",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:camt.026.001.07\",\n    \"message\": \"{{rfi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/local/send/v1/client/transactions/send",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "modify",
					"item": [
						{
							"name": "participant1 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:camt.087.001.06\",\n    \"message\": \"{{ofi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant1-url}}/local/send/v1/client/transactions/send",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2 send",
							"item": [
								{
									"name": "/transactions/send",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message_type\": \"iso20022:camt.087.001.06\",\n    \"message\": \"{{ofi_signed_msg}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{participant2-url}}/local/send/v1/client/transactions/send",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"send",
												"v1",
												"client",
												"transactions",
												"send"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "9. redeem",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/transactions/redeem",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message_type\": \"iso20022:pacs.009.001.08\",\n    \"message\": \"{{ofi_signed_msg}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{participant1-url}}/local/send/v1/client/transactions/redeem",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"send",
										"v1",
										"client",
										"transactions",
										"redeem"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/transactions/send",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message_type\": \"iso20022:pacs.009.001.08\",\n    \"message\": \"{{rfi_signed_msg}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{participant2-url}}/local/send/v1/client/transactions/send",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"send",
										"v1",
										"client",
										"transactions",
										"send"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "anchor",
					"item": [
						{
							"name": "/anchor/assets/redeem",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anchor-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message_type\": \"iso20022:pacs.002.001.09\",\n    \"message\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KCTxNZXNzYWdlIHhtbG5zPSJ1cm46d29ybGR3aXJlIj4KCQk8QXBwSGRyPgogICAgICAgICAgICA8RnIgeG1sbnM9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpoZWFkLjAwMS4wMDEuMDEiPgogICAgICAgICAgICAgICAgPEZJSWQ+CiAgICAgICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxCSUNGST5JQk1RQVRXTjAwMTwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPElkPmlibXRhaXdhbjE8L0lkPgogICAgICAgICAgICAgICAgICAgICAgICA8L090aHI+CiAgICAgICAgICAgICAgICAgICAgPC9GaW5JbnN0bklkPgogICAgICAgICAgICAgICAgPC9GSUlkPgogICAgICAgICAgICA8L0ZyPgogICAgICAgICAgICA8VG8geG1sbnM9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpoZWFkLjAwMS4wMDEuMDEiPgogICAgICAgICAgICAgICAgPEZJSWQ+CiAgICAgICAgICAgICAgICAgICAgPEZpbkluc3RuSWQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxCSUNGST5XT1JMRFdJUkUwMDwvQklDRkk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxPdGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPElkPldXPC9JZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9PdGhyPgogICAgICAgICAgICAgICAgICAgIDwvRmluSW5zdG5JZD4KICAgICAgICAgICAgICAgIDwvRklJZD4KICAgICAgICAgICAgPC9Ubz4KCQkJPEJpek1zZ0lkciB4bWxucz0idXJuOmlzbzpzdGQ6aXNvOjIwMDIyOnRlY2g6eHNkOmhlYWQuMDAxLjAwMS4wMSI+QjIwMTkwNDA0V09STERXSVJFMDBCSFUwOTI4Mzc0PC9CaXpNc2dJZHI+CgkJCTxNc2dEZWZJZHIgeG1sbnM9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpoZWFkLjAwMS4wMDEuMDEiPnBhY3MuMDAyLjAwMS4wOTwvTXNnRGVmSWRyPgoJCQk8Q3JlRHQgeG1sbnM9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpoZWFkLjAwMS4wMDEuMDEiPjIwMTktMTEtMjBUMTY6MDA6MDBaPC9DcmVEdD4KCQk8U2dudHIgeG1sbnM9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpoZWFkLjAwMS4wMDEuMDEiPjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxTaWduZWRJbmZvIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48Q2Fub25pY2FsaXphdGlvbk1ldGhvZCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyIgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz48U2lnbmF0dXJlTWV0aG9kIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIiBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDkveG1sZHNpZzExI3JzYS1zaGEyNTYiLz48UmVmZXJlbmNlIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48VHJhbnNmb3JtcyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PFRyYW5zZm9ybSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyIgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPjxUcmFuc2Zvcm0geG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+PERpZ2VzdFZhbHVlIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj42U2JxYy9CMkEyZFpYZCtKRmFBSWlUbzBGaHpqMVAvaEkyaFdldUxwTWZBPTwvRGlnZXN0VmFsdWU+PC9SZWZlcmVuY2U+PC9TaWduZWRJbmZvPjxTaWduYXR1cmVWYWx1ZSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+YkhBc0dmeVVUbmVWTU91d3htN2p2Y0tGY0ZsWVhxcHNkc1ZaSWE1T1lXR2xJRjQ2MXE4eWR4Sk14emF2cFFOSzBXbnljRTJ5aHNsRlFEekNnaEJCQWc9PTwvU2lnbmF0dXJlVmFsdWU+PEtleUluZm8geG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxYNTA5RGF0YSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PFg1MDlDZXJ0aWZpY2F0ZSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+R0JUWEI3QjJWQ0hOSElWWE1CN01VWjVWNVJDNE5TVjY1T1RSUEhYS0tBNlZXRkk2QlBLQUJKSEo8L1g1MDlDZXJ0aWZpY2F0ZT48L1g1MDlEYXRhPjwvS2V5SW5mbz48L1NpZ25hdHVyZT48L1NnbnRyPjwvQXBwSGRyPgoJCTxGSVRvRklQbXRTdHNScHQ+CgkJCTxHcnBIZHIgeG1sbnM9InVybjppc286c3RkOmlzbzoyMDAyMjp0ZWNoOnhzZDpwYWNzLjAwMi4wMDEuMDkiPgoJCQkJPE1zZ0lkPlVTRERBMjAxOTExMjBJQk1RQVRXTjAwMUIxMTExMTEwMDAxPC9Nc2dJZD4KCQkJCTxDcmVEdFRtPjIwMTktMDUtMjRUMDc6MjM6MzI8L0NyZUR0VG0+CgkJCQk8SW5zdGdBZ3Q+CgkJCQkJPEZpbkluc3RuSWQ+CgkJCQkJCTxCSUNGST5JQk1RQVRXTjAwMTwvQklDRkk+CgkJCQkJCTxPdGhyPgoJCQkJCQkJPElkPmlibXRhaXdhbjE8L0lkPgoJCQkJCQk8L090aHI+CgkJCQkJPC9GaW5JbnN0bklkPgoJCQkJPC9JbnN0Z0FndD4KCQkJCTxJbnN0ZEFndD4KCQkJCQk8RmluSW5zdG5JZD4KCQkJCQkJPEJJQ0ZJPlNHUExBVVNFMDAxPC9CSUNGST4KCQkJCQkJPE90aHI+CgkJCQkJCQk8SWQ+aWJtc2luZ2Fwb3JlMTwvSWQ+CgkJCQkJCTwvT3Rocj4KCQkJCQk8L0Zpbkluc3RuSWQ+CgkJCQk8L0luc3RkQWd0PgoJCQk8L0dycEhkcj4KCQkJPFR4SW5mQW5kU3RzIHhtbG5zPSJ1cm46aXNvOnN0ZDppc286MjAwMjI6dGVjaDp4c2Q6cGFjcy4wMDIuMDAxLjA5Ij4KCQkJCTxPcmdubEluc3RySWQ+VVNEREEyMDE5MTEyMFNHUExBVVNFMDAxQjExMTExMTAwMDI8L09yZ25sSW5zdHJJZD4KCQkJCTxPcmdubEVuZFRvRW5kSWQ+VVNEREEyMDExMjAxOVNHUExBVVNFMDAwMDAwMDAwMDAwMDI8L09yZ25sRW5kVG9FbmRJZD4KCQkJCTxPcmdubFR4SWQ+VVNEREEyMDExMjAxOVNHUExBVVNFMDAwMDAwMDAwMDAwMDI8L09yZ25sVHhJZD4KCQkJCTxUeFN0cz5BQ1RDPC9UeFN0cz4KCQkJCTxDaHJnc0luZj4KCQkJCQk8QW10IENjeT0iVVNEIj4yPC9BbXQ+CgkJCQkJPEFndD4KCQkJCQkJPEZpbkluc3RuSWQ+CgkJCQkJCQk8QklDRkk+SUJNUUFUV04wMDE8L0JJQ0ZJPgoJCQkJCQkJPE90aHI+CgkJCQkJCQkJPElkPmlibXRhaXdhbjE8L0lkPgoJCQkJCQkJPC9PdGhyPgoJCQkJCQk8L0Zpbkluc3RuSWQ+CgkJCQkJPC9BZ3Q+CgkJCQk8L0NocmdzSW5mPgoJCQkJPE9yZ25sVHhSZWY+CgkJCQkJPEludHJCa1N0dGxtQW10IENjeT0iVVNEIj4yPC9JbnRyQmtTdHRsbUFtdD4KCQkJCTwvT3JnbmxUeFJlZj4KCQkJCTxTcGxtdHJ5RGF0YT4KCQkJCQk8UGxjQW5kTm0+L01lc3NhZ2UvRklUb0ZJUG10U3RzUnB0L1R4SW5mQW5kU3RzL0lzc3I8L1BsY0FuZE5tPgoJCQkJCTxFbnZscD4KCQkJCQkJPElkPmlibXRhaXdhbjE8L0lkPgoJCQkJCTwvRW52bHA+CgkJCQk8L1NwbG10cnlEYXRhPgoJCQkJPFNwbG10cnlEYXRhPgoJCQkJCTxQbGNBbmRObT4vTWVzc2FnZS9GSVRvRklQbXRTdHNScHQvVHhJbmZBbmRTdHMvU3R0bG1BY2N0QWRkcjwvUGxjQW5kTm0+CgkJCQkJPEVudmxwPgoJCQkJCQk8SWQ+R0JUWEI3QjJWQ0hOSElWWE1CN01VWjVWNVJDNE5TVjY1T1RSUEhYS0tBNlZXRkk2QlBLQUJKSEo8L0lkPgoJCQkJCTwvRW52bHA+CgkJCQk8L1NwbG10cnlEYXRhPgoJCQkJPFNwbG10cnlEYXRhPgoJCQkJCTxQbGNBbmRObT4vTWVzc2FnZS9GSVRvRklQbXRTdHNScHQvVHhJbmZBbmRTdHMvUGF5VG9SZWY8L1BsY0FuZE5tPgoJCQkJCTxFbnZscD4KCQkJCQkJPElkPjc3Nzc8L0lkPgoJCQkJCTwvRW52bHA+CgkJCQk8L1NwbG10cnlEYXRhPgoJCQk8L1R4SW5mQW5kU3RzPgoJCTwvRklUb0ZJUG10U3RzUnB0PgoJPC9NZXNzYWdlPg==\"\n}"
								},
								"url": {
									"raw": "{{anchor-url}}/global/anchor/v1/anchor/assets/redeem",
									"host": [
										"{{anchor-url}}"
									],
									"path": [
										"global",
										"anchor",
										"v1",
										"anchor",
										"assets",
										"redeem"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "10. fund DA",
			"item": [
				{
					"name": "/anchor/fundings/instruction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{anchor-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_name\": \"default\",\n    \"amount_funding\": 10,\n    \"anchor_id\": \"{{anchor_id}}\",\n    \"asset_code_issued\": \"{{anchor-asset}}\",\n    \"end_to_end_id\": \"32939\",\n    \"participant_id\": \"{{participant2_id}}\",\n    \"memo_transaction\": \"QA\"\n}"
						},
						"url": {
							"raw": "{{anchor-url}}/global/anchor/v1/anchor/fundings/instruction",
							"host": [
								"{{anchor-url}}"
							],
							"path": [
								"global",
								"anchor",
								"v1",
								"anchor",
								"fundings",
								"instruction"
							]
						}
					},
					"response": []
				},
				{
					"name": "/anchor/fundings/send",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{anchor-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_name\": \"default\",\n    \"amount_funding\": 100,\n    \"anchor_id\": \"{{anchor_id}}\",\n    \"asset_code_issued\": \"{{anchor-asset}}\",\n    \"end_to_end_id\": \"32939\",\n    \"participant_id\": \"{{participant1_id}}\",\n    \"memo_transaction\": \"QA\"\n}"
						},
						"url": {
							"raw": "{{anchor-url}}/global/ancor/v1/anchor/fundings/send?funding_signed=&instruction_signed=AAAAADBist1%2FUDRt%2FAIElE6cb74Xfmr1%2BqvFcTdaCrRSkjC9AAAAZAAAQ5AAAAAeAAAAAAAAAAOpb9snNYjklUqKVEB1hkkvvq9JY66LmEUGoRaF0zVlBgAAAAEAAAABAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAQAAAABu0k4KZpErlzp1cmLGioi2PG5JPSHcHIEvz%2Bt6DxO63QAAAAFVU0QAAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAHc1lAAAAAAAAAAAATReBpUAAABA8AlAvqATnfTCJzLLZD%2FEben67%2F6mviCOAQdNB61gK2Tn9GB%2FDXwsN5%2FchGSez2OgEcrz0B0bGnQm%2F1ze%2F7hGBw%3D%3D",
							"host": [
								"{{anchor-url}}"
							],
							"path": [
								"global",
								"ancor",
								"v1",
								"anchor",
								"fundings",
								"send"
							],
							"query": [
								{
									"key": "funding_signed",
									"value": ""
								},
								{
									"key": "instruction_signed",
									"value": "AAAAADBist1%2FUDRt%2FAIElE6cb74Xfmr1%2BqvFcTdaCrRSkjC9AAAAZAAAQ5AAAAAeAAAAAAAAAAOpb9snNYjklUqKVEB1hkkvvq9JY66LmEUGoRaF0zVlBgAAAAEAAAABAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAQAAAABu0k4KZpErlzp1cmLGioi2PG5JPSHcHIEvz%2Bt6DxO63QAAAAFVU0QAAAAAALqCnTJ%2BnR7cjy%2F03x30sh4TYn9twWZ9IfRHl0I0XgaVAAAAAHc1lAAAAAAAAAAAATReBpUAAABA8AlAvqATnfTCJzLLZD%2FEben67%2F6mviCOAQdNB61gK2Tn9GB%2FDXwsN5%2FchGSez2OgEcrz0B0bGnQm%2F1ze%2F7hGBw%3D%3D"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "11. payout",
			"item": [
				{
					"name": "post payout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"Non-Bank Financial Institution\",\r\n    \"payout_child\":[\"kNKWGRziWDSde38F0diF2rW9kZXfUP\",\"9XIOHCtWyxnySXchH7nquRwx2t9ng1\"],\r\n    \"payout_parent\":[],\r\n    \"name\": \"CIMB Bank9\",\r\n    \"currencies_accepted\":[\"USD\", \"JPD\"],\r\n    \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\r\n    \"url\": \"\",\r\n    \"telephone\": \"07-418 6258 / 6276\",\r\n    \"member_of\": [\"BankA\"],\r\n    \"address\": {\r\n      \"street\": \"39A sg rah\",\r\n      \"state\": \"changi\",\r\n      \"city\": \"north east\",\r\n      \"postal_code\": \"83000cs\",\r\n      \"country\": \"sg\",\r\n      \"building_number\":\"11\"\r\n    },\r\n    \"geo\": {\r\n      \"type\":\"area\",\r\n      \"coordinates\": [{\"lat\":1314.8482097, \"long\":102.93435002},{\"lat\":131.8482097, \"long\":222.93435002}]\r\n    },\r\n    \"category\": \r\n         {\r\n              \"name\": \"delivery\",\r\n              \"options\": [\r\n                  {\r\n                    \"description\": \"Deliver PHP to home address\",\r\n                     \"terms\": \"Limit of 1212 PHP\"\r\n           \r\n                  },\r\n                  {\r\n                    \"description\": \"Deliver USD to home address\",\r\n                    \"terms\": \"Limit of 1,000 USD\"\r\n                  }\r\n              ]\r\n          },\r\n    \"opening_hours\": [{\r\n      \"day_of_week\": [\r\n        \"xxxddd\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\"\r\n      ],\r\n      \"opens\": \"09:15\",\r\n      \"closes\": \"16:30\"\r\n    },{\r\n      \"day_of_week\": [\"Friday\"],\r\n      \"opens\": \"09:15\",\r\n      \"closes\": \"16:00\"\r\n    }]\r\n}\r\n"
						},
						"url": {
							"raw": "{{participant1-url}}/global/payout/v1/admin/payout",
							"host": [
								"{{participant1-url}}"
							],
							"path": [
								"global",
								"payout",
								"v1",
								"admin",
								"payout"
							]
						}
					},
					"response": []
				},
				{
					"name": "post payout(point)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"Non-Bank Financial Institution\",\r\n    \"payout_child\":[],\r\n    \"payout_parent\":[],\r\n    \"name\": \"CIMB Bank100\",\r\n    \"currencies_accepted\":[\"USD\", \"JPD\"],\r\n    \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\r\n    \"url\": \"\",\r\n    \"telephone\": \"07-418 6258 / 6276\",\r\n    \"member_of\": [\"BankA\"],\r\n    \"address\": {\r\n      \"street\": \"39A sg rah\",\r\n      \"state\": \"changi\",\r\n      \"city\": \"north east\",\r\n      \"postal_code\": \"83000cs\",\r\n      \"country\": \"sg\",\r\n      \"building_number\":\"11\"\r\n    },\r\n    \"geo\": {\r\n      \"type\":\"point\",\r\n      \"coordinates\": [{\"lat\":1314.8482097, \"long\":102.93435002}]\r\n    },\r\n    \"category\": \r\n         {\r\n              \"name\": \"cash_pickup\",\r\n              \"options\": [\r\n                  {\r\n                    \"description\": \"Deliver PHP to home address\",\r\n                     \"terms\": \"Limit of 1212 PHP\"\r\n           \r\n                  },\r\n                  {\r\n                    \"description\": \"Deliver USD to home address\",\r\n                    \"terms\": \"Limit of 1,000 USD\"\r\n                  }\r\n              ]\r\n          },\r\n    \"opening_hours\": [{\r\n      \"day_of_week\": [\r\n        \"xxxddd\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\"\r\n      ],\r\n      \"opens\": \"09:15\",\r\n      \"closes\": \"16:30\"\r\n    },{\r\n      \"day_of_week\": [\"Friday\"],\r\n      \"opens\": \"09:15\",\r\n      \"closes\": \"16:00\"\r\n    }]\r\n}\r\n"
						},
						"url": {
							"raw": "{{participant1-url}}/global/payout/v1/admin/payout",
							"host": [
								"{{participant1-url}}"
							],
							"path": [
								"global",
								"payout",
								"v1",
								"admin",
								"payout"
							]
						}
					},
					"response": []
				},
				{
					"name": "update payout",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"mXTHWcdXY8VU9qhEr77oCyOFbKx3f0\",\n    \"updated_payload\": {\n        \"type\": \"Non-Bank Financial Institution\",\n        \"payout_child\": [],\n        \"payout_parent\": [\n            \"9XIOHCtWyxnySXchH7nquRwx2t9ng1\"\n        ],\n        \"name\": \"CIMB Bank9ee\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\",\n            \"TWD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A sg rah\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000cs\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"type\": \"point\",\n            \"coordinates\": [\n                {\n                    \"lat\": 1.39757,\n                    \"long\": 132.38272\n                }\n            ]\n        },\n        \"category\": {\n            \"name\": \"cash_pickup\",\n            \"options\": [\n                {\n                    \"description\": \"Deliver PHP to home address\",\n                    \"terms\": \"Limit of 52,000 PHP\"\n                },\n                {\n                    \"description\": \"Deliver USD to home address\",\n                    \"terms\": \"Limit of 1,000 USD\"\n                }\n            ]\n        },\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{participant1-url}}/global/payout/v1/admin/payout",
							"host": [
								"{{participant1-url}}"
							],
							"path": [
								"global",
								"payout",
								"v1",
								"admin",
								"payout"
							]
						}
					},
					"response": []
				},
				{
					"name": "get payout",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{p1-jwt-token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{participant1-url}}/global/payout/v1/client/payout?",
							"host": [
								"{{participant1-url}}"
							],
							"path": [
								"global",
								"payout",
								"v1",
								"client",
								"payout"
							],
							"query": [
								{
									"key": "receive_mode",
									"value": "cash_pickup",
									"disabled": true
								},
								{
									"key": "receive_mode",
									"value": "cash_pickup",
									"disabled": true
								},
								{
									"key": "city",
									"value": "north EAST",
									"disabled": true
								},
								{
									"key": "state",
									"value": "tw",
									"disabled": true
								},
								{
									"key": "street",
									"value": "changI",
									"disabled": true
								},
								{
									"key": "country",
									"value": "SG",
									"disabled": true
								},
								{
									"key": "id",
									"value": "hstf8VDjSQlaSzN0dLTxlpt50KsP4l",
									"disabled": true
								},
								{
									"key": "address",
									"value": "sg",
									"disabled": true
								},
								{
									"key": "parent",
									"value": "mXTHWcdXY8VU9qhEr77oCyOFbKx3f0",
									"disabled": true
								},
								{
									"key": "child",
									"value": "2QpCGkJFHeUd22lfk5MEGVwn06cppB",
									"disabled": true
								},
								{
									"key": "currency",
									"value": "Twd",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete payout Copy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{participant1-url}}/global/payout/v1/admin/payout?id=qyk8JrlSoVCwMwezkrwaGG7pB",
							"host": [
								"{{participant1-url}}"
							],
							"path": [
								"global",
								"payout",
								"v1",
								"admin",
								"payout"
							],
							"query": [
								{
									"key": "id",
									"value": "qyk8JrlSoVCwMwezkrwaGG7pB"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "post payout(csv)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{participant1-url}}/global/payout/v1/admin/payout/csv",
							"host": [
								"{{participant1-url}}"
							],
							"path": [
								"global",
								"payout",
								"v1",
								"admin",
								"payout",
								"csv"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "12. sweep",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "sweeping 1-to-1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"target_account\": \"default-2\",\n    \"source_accounts\": [\n        {\n            \"account\": \"default2s\",\n            \"amount\": 1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 1-to-1 DO",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"default6\",\n\t\"source_accounts\":[\n\t{\"account\":\"issuing\",\n\t\t\"amount\":1,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DO\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 9-to-1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"target_account\": \"default\",\n    \"source_accounts\": [\n        {\n            \"account\": \"sweeptest\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default3s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default4s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default5s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default3s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"TWD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default4s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"TWD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default5s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"TWD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 19-to-1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"target_account\": \"default\",\n    \"source_accounts\": [\n        {\n            \"account\": \"default2s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default3s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default4s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default5s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default6s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default7s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default8s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default9s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default10s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default11s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default12s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default13s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default14s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default15s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default16s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default17s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default18s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default19s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default20s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 20-to-1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"target_account\": \"default\",\n    \"source_accounts\": [\n        {\n            \"account\": \"default2s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default3s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default4s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default5s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default6s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default7s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default8s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default9s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default10s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default11s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default12s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default13s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default14s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default15s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default16s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default17s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default18s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default19s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default20s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        },\n        {\n            \"account\": \"default21s\",\n            \"amount\": 0.1,\n            \"asset\": {\n                \"asset_code\": \"USD\",\n                \"issuer_id\": \"ibmanchor\",\n                \"asset_type\": \"DA\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/accounts/{account_name} default USD",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/balances/accounts/default?asset_code=USD&issuer_id={{anchor_id}}",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"balances",
										"accounts",
										"default"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USD"
										},
										{
											"key": "issuer_id",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "sweeping 1-to-1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"default6\",\n\t\"source_accounts\":[\n\t{\"account\":\"issuing\",\n\t\t\"amount\":1,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 1-to-1 DO",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"default6\",\n\t\"source_accounts\":[\n\t{\"account\":\"issuing\",\n\t\t\"amount\":1,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DO\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 9-to-1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"issuing\",\n\t\"source_accounts\":[\n\t{\"account\":\"default\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default2\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default3\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default4\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default5\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default6\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default7\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default8\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default9\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 19-to-1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"issuing\",\n\t\"source_accounts\":[\n\t{\"account\":\"default\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default2\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default3\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default4\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default5\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default6\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default7\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default8\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default9\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default10\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default11\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default12\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default13\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default14\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default15\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default16\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default17\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default18\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default20\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "sweeping 15-to-1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"target_account\": \"issuing\",\n\t\"source_accounts\":[\n\t{\"account\":\"default\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default2\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default3\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default4\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\t\n\t{\"account\":\"default5\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default6\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default7\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default8\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default9\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default10\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default11\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default12\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default13\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default14\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t},\n\t{\"account\":\"default15\",\n\t\t\"amount\":0.001,\n\t\t\"asset\":{\n\t\t\t\"asset_code\":\"USD\",\n\t\t\t\"issuer_id\":\"ibmanchor\",\n\t\t\t\"asset_type\":\"DA\"\n\t\t}\n\t}]\n}"
								},
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/accounts/default-2/sweep",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"accounts",
										"default-2",
										"sweep"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/balances/accounts/{account_name} default USD",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/balances/accounts/default?asset_code=USD&issuer_id={{anchor_id}}",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"balances",
										"accounts",
										"default"
									],
									"query": [
										{
											"key": "asset_code",
											"value": "USD"
										},
										{
											"key": "issuer_id",
											"value": "{{anchor_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "13. payment listener",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/accounts/{account_name}/{cursor}",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/global/listener/v1/client/accounts/issuing/now",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"global",
										"listener",
										"v1",
										"client",
										"accounts",
										"issuing",
										"now"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "14.gateway",
			"item": [
				{
					"name": "0. service_chack",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/service_check",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/gateway/v1/client/service_check",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"service_check"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/service_check",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/gateway/v1/client/service_check",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"service_check"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "1. get fee message",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/message?type=fee",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "fee"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/gateway/v1/client/message?type=fee",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "fee"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "2. get quotes message",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/gateway/v1/client/message?type=quotes",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "quotes"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/gateway/v1/client/message?type=quotes",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "quotes"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "3. get transactions message",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/gateway/v1/client/message?type=transactions",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "transactions"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/gateway/v1/client/message?type=transactions",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "transactions"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "anchor",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anchor-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{anchor-gateway-url}}/local/gateway/v1/client/message?type=transactions",
											"host": [
												"{{anchor-gateway-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "transactions"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d8e7894b-887b-4b70-8e44-a037de9c9235",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08a1e71d-3eff-4840-a93e-06c2210f8eaa",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "4. get payment message",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/gateway/v1/client/message?type=payment",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "payment"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/message",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/gateway/v1/client/message?type=payment",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"gateway",
												"v1",
												"client",
												"message"
											],
											"query": [
												{
													"key": "type",
													"value": "payment"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "15. fee",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "/client/fees/request/{{participant2_id}}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DA\",\n        \"asset_code\": \"USD\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"USD\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{global-url}}/global/fee/v1/client/fees/request/{{participant2_id}}",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"fee",
										"v1",
										"client",
										"fees",
										"request",
										"{{participant2_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/fees/response/{{participant2_id}} - by payout",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount_fee\": 1,\n    \"amount_payout\": 200,\n    \"amount_settlement\": 200,\n    \"asset_code_payout\": \"SGDDO\",\n    \"details_asset_settlement\": {\n        \"asset_code\": \"SGDDO\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"ibmsupport1\"\n    },\n    \"request_id\": \"23982398\"\n}"
								},
								"url": {
									"raw": "{{global-url}}/global/fee/v1/client/fees/response/koku1",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"fee",
										"v1",
										"client",
										"fees",
										"response",
										"koku1"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/fees/response/{{participant2_id}} - by gross",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount_fee\": 1,\n    \"amount_payout\": 199,\n    \"amount_settlement\": 199,\n    \"asset_code_payout\": \"SGDDO\",\n    \"details_asset_settlement\": {\n        \"asset_code\": \"SGDDO\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"ibmsupport1\"\n    },\n    \"request_id\": \"23982398\"\n}"
								},
								"url": {
									"raw": "{{global-url}}/global/fee/v1/client/fees/response/{{participant2_id}}",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"fee",
										"v1",
										"client",
										"fees",
										"response",
										"{{participant2_id}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "/client/fees/request/{{participant1_id}}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request_id\": \"23982398\",\n    \"participant_id\": \"{{anchor_id}}\",\n    \"asset_settlement\": {\n        \"asset_type\": \"DA\",\n        \"asset_code\": \"USD\",\n        \"issuer_id\": \"{{anchor_id}}\"\n    },\n    \"amount_payout\": 200,\n    \"asset_payout\": \"USD\",\n    \"details_payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{global-url}}/global/fee/v1/client/fees/request/{{participant1_id}}",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"fee",
										"v1",
										"client",
										"fees",
										"request",
										"{{participant1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "/client/fees/response/{{participant1_id}}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount_fee\": 1,\n    \"amount_payout\": 199,\n    \"amount_settlement\": 199,\n    \"asset_code_payout\": \"SGDDO\",\n    \"details_asset_settlement\": {\n        \"asset_code\": \"SGDDO\",\n        \"asset_type\": \"DO\",\n        \"issuer_id\": \"ibmsupport1\"\n    },\n    \"request_id\": \"23982398\"\n}"
								},
								"url": {
									"raw": "{{global-url}}/global/fee/v1/client/fees/response/{{participant1_id}}",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"fee",
										"v1",
										"client",
										"fees",
										"response",
										"{{participant1_id}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "16.get transactions",
			"item": [
				{
					"name": "participant1",
					"item": [
						{
							"name": "{{participant1-url}}/local/api/v1/client/transactions?query_type=date_range&start_date=2019-09-01&end_date=2019-10-01&batch=100&page=1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p1-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant1-url}}/local/api/v1/client/transactions?start_date=2019-09-01&end_date=2019-10-01&batch=10&page=1&query_type=date_range",
									"host": [
										"{{participant1-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"transactions"
									],
									"query": [
										{
											"key": "query_type",
											"value": "INSTRUCTION_ID",
											"disabled": true
										},
										{
											"key": "start_date",
											"value": "2019-09-01"
										},
										{
											"key": "end_date",
											"value": "2019-10-01"
										},
										{
											"key": "batch",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "query_data",
											"value": "USDDO20190924SGPLAUSE001B3087442350",
											"disabled": true
										},
										{
											"key": "query_type",
											"value": "date_range"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "participant2",
					"item": [
						{
							"name": "{{participant2-url}}/local/api/v1/client/transactions?query_type=date_range&start_date=2019-09-01&end_date=2019-10-01&batch=100&page=1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{participant2-url}}/local/api/v1/client/transactions?start_date=2019-09-01&end_date=2019-10-01&batch=10&page=1&query_type=date_range",
									"host": [
										"{{participant2-url}}"
									],
									"path": [
										"local",
										"api",
										"v1",
										"client",
										"transactions"
									],
									"query": [
										{
											"key": "query_type",
											"value": "INSTRUCTION_ID",
											"disabled": true
										},
										{
											"key": "start_date",
											"value": "2019-09-01"
										},
										{
											"key": "end_date",
											"value": "2019-10-01"
										},
										{
											"key": "batch",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "query_data",
											"value": "USDDO20190924SGPLAUSE001B3087442350",
											"disabled": true
										},
										{
											"key": "query_type",
											"value": "date_range"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "- get transactions",
					"item": [
						{
							"name": "partiicipant1",
							"item": [
								{
									"name": "/client/transactions",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/transactions?query_type=DATE_RANGE&query_data&start_date=2018-01-01&end_date=2020-12-30",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"transactions"
											],
											"query": [
												{
													"key": "query_type",
													"value": "DATE_RANGE"
												},
												{
													"key": "query_data",
													"value": null
												},
												{
													"key": "start_date",
													"value": "2018-01-01"
												},
												{
													"key": "end_date",
													"value": "2020-12-30"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "partiicipant2",
							"item": [
								{
									"name": "/client/transactions",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/transactions?query_type=DATE_RANGE&query_data&start_date=2018-01-01&end_date=2020-12-30",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"transactions"
											],
											"query": [
												{
													"key": "query_type",
													"value": "DATE_RANGE"
												},
												{
													"key": "query_data",
													"value": null
												},
												{
													"key": "start_date",
													"value": "2018-01-01"
												},
												{
													"key": "end_date",
													"value": "2020-12-30"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- get payout point",
					"item": [
						{
							"name": "/client/payout",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{global-url}}/global/payout/v1/client/payout?receive_mode=delivery&receive_mode=cash_pickup",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"global",
										"payout",
										"v1",
										"client",
										"payout"
									],
									"query": [
										{
											"key": "receive_mode",
											"value": "delivery"
										},
										{
											"key": "receive_mode",
											"value": "cash_pickup"
										},
										{
											"key": "city",
											"value": "north EAST",
											"disabled": true
										},
										{
											"key": "state",
											"value": "tw",
											"disabled": true
										},
										{
											"key": "street",
											"value": "changI",
											"disabled": true
										},
										{
											"key": "country",
											"value": "SG",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- get asset",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/assets/issued",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/assets/issued",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets/issued",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets",
												"issued"
											]
										}
									},
									"response": []
								},
								{
									"name": "/client/assets",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/assets",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"assets"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- get balance",
					"item": [
						{
							"name": "- retrieve an account balance",
							"item": [
								{
									"name": "particiapnt1",
									"item": [
										{
											"name": "/client/balances/accounts/{account_name} default EURDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/balances/accounts/default?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"default"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} default USDDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-fid",
														"value": "{{au_fid1}}",
														"type": "text"
													},
													{
														"key": "x-iid",
														"value": "{{p1-xiid}}",
														"type": "text"
													},
													{
														"key": "X-pid",
														"value": "{{participant1_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/balances/accounts/default?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"default"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing FJDDO",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/balances/accounts/issuing?asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant2-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{participant2_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing USDDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/balances/accounts/issuing?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing EURDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/balances/accounts/issuing?asset_code={{participant2-asset}}&issuer_id={{participant2_id}}",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant2-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{participant2_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "particiapnt2",
									"item": [
										{
											"name": "/client/balances/accounts/{account_name} issuing participant1-asset",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{participant1_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} default EURDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/balances/accounts/default?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"default"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} default USDDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/balances/accounts/default?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"default"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing EURDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/balances/accounts/issuing?asset_code={{participant1-asset}}&issuer_id={{participant1_id}}",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{participant1_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "/client/balances/accounts/{account_name} issuing USDDA",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/balances/accounts/issuing?asset_code={{anchor-asset}}&issuer_id={{anchor_id}}",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"balances",
														"accounts",
														"issuing"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{anchor-asset}}"
														},
														{
															"key": "issuer_id",
															"value": "{{anchor_id}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "- retrieve your digital obligation balance",
							"item": [
								{
									"name": "participant1",
									"item": [
										{
											"name": "/client/obligations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p1-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "x-iid",
														"value": "{{p1-xiid}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "x-fid",
														"value": "{{au_fid1}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "x-pid",
														"value": "{{participant1_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{participant1-url}}/local/api/v1/client/obligations?",
													"host": [
														"{{participant1-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"obligations"
													],
													"query": [
														{
															"key": "asset_code",
															"value": "{{participant1-asset}}",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "participant2",
									"item": [
										{
											"name": "/client/obligations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{p2-jwt-token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{participant2-url}}/local/api/v1/client/obligationsasset_code={{participant2-asset}}",
													"host": [
														"{{participant2-url}}"
													],
													"path": [
														"local",
														"api",
														"v1",
														"client",
														"obligationsasset_code={{participant2-asset}}"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- get outstanding balance",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/obligations/{{asset_code}}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "x-iid",
												"value": "-LmxeZsixNIcVsF851Hf",
												"type": "text",
												"disabled": true
											},
											{
												"key": "x-fid",
												"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImQ1OThkYjVjZjE1ZWNhOTI0OWJhZTUzMDYzOWVkYzUzNmMzYzViYjUiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZGV2LTItYzg3NzQiLCJhdWQiOiJkZXYtMi1jODc3NCIsImF1dGhfdGltZSI6MTU3NjAzMzM1MiwidXNlcl9pZCI6ImppNkoyc1c5WHpMeENzOEZhMTVlWDRrcHFMNDMiLCJzdWIiOiJqaTZKMnNXOVh6THhDczhGYTE1ZVg0a3BxTDQzIiwiaWF0IjoxNTc2MDMzMzUyLCJleHAiOjE1NzYwMzY5NTIsImVtYWlsIjoicnVieWNoQHNnLmlibS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsicnVieWNoQHNnLmlibS5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJjdXN0b20ifX0.nG6ux4na23pR1Vo6RFLLThfN6u_H_VCGsBPgvqRCb3SXIxuW3o9y-ugt_Zgl5QdPwUV9hexXTp8roydb-YCE_BTLVlmRh7qDeH5HYYmjYM6FsIYLTi4g12KnfvSnmbQ1dNwW9P5NokS6Xyf8yzIDKbTuQKZso44CB_tuT08ES9gq7QGQ5kdfneyD6hBO1IGn598Frd7maao4RmBXvW8tlR0izAxDs_m4CkdcTknI4-ObkyeAXCzGiYCpOuP1M7mK-m-QL37ctI2tjIRVdwLBMqlUtPHfR8MoWYblOEKs-NHI8_C8i7hjOIroH18Zxe1gf0P0g-4LC2jANnIeIK-ALg",
												"type": "text",
												"disabled": true
											},
											{
												"key": "x-pid",
												"value": "testparticipant3dev",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/obligations/{{participant1-asset}}",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"obligations",
												"{{participant1-asset}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/obligations/{{asset_code}}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "x-iid",
												"value": "{{p2-xiid}}",
												"type": "text"
											},
											{
												"key": "x-fid",
												"value": "{{au_fid2}}",
												"type": "text"
											},
											{
												"key": "x-pid",
												"value": "{{participant2_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/obligation/{{participant2-asset}}",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"obligation",
												"{{participant2-asset}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- list all quotes from a specific request",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/quotes/requests/{{request_id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{global-url}}/global/quotes/v1/client/quotes/request/{{request_id}}?",
											"host": [
												"{{global-url}}"
											],
											"path": [
												"global",
												"quotes",
												"v1",
												"client",
												"quotes",
												"request",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/quotes/requests/{{request_id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c92a9cf5-06ef-4e77-909b-37775e1b8953",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"quote_id\", jsonData[0].quote_id)",
													"setTimeout(foo,300)",
													"function foo(){",
													"pm.test(\"quote status update to 1\", function () {",
													"    pm.expect(jsonData[0].status).to.equal(1);",
													"});",
													"    ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{global-url}}/global/quotes/v1/client/quotes/request/{{request_id}}?",
											"host": [
												"{{global-url}}"
											],
											"path": [
												"global",
												"quotes",
												"v1",
												"client",
												"quotes",
												"request",
												"{{request_id}}"
											],
											"query": [
												{
													"key": "Authorization",
													"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJzdWIiOiJ0ZXN0IiwiZG9tYWluIjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyIsImFjY250IjoiaGsub25lLnBheW1lbnRzLndvcmxkd2lyZS5pbyJ9.E2SrAQ9KdHjdGxlOpbo6IOVVEgZKJ86WGMwBGhjNPtE",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- get listener",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/accounts/issuing/now",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request_id\":\"23982398\",\n    \"participant_id\":\"{{anchor_id}}\",\n    \"asset_settlement\":{\n        \"asset_type\":\"DA\",\n        \"asset_code\":\"USD\",\n        \"issuer_id\":\"{{anchor_id}}\"\n    },\n    \"amount_settlement\":1935.83,\n    \"asset_payout\":\"USD\",\n        \"payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{participant1-url}}/local/listener/v1/client/accounts/issuing/now",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"listener",
												"v1",
												"client",
												"accounts",
												"issuing",
												"now"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/accounts/issuing/now",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"request_id\":\"23982398\",\n    \"participant_id\":\"{{anchor_id}}\",\n    \"asset_settlement\":{\n        \"asset_type\":\"DA\",\n        \"asset_code\":\"USD\",\n        \"issuer_id\":\"{{anchor_id}}\"\n    },\n    \"amount_settlement\":1935.83,\n    \"asset_payout\":\"USD\",\n        \"payout_point\": {\n        \"type\": \"Bank\",\n        \"name\": \"CIMBe Bank\",\n        \"currencies_accepted\": [\n            \"USD\",\n            \"JPD\"\n        ],\n        \"image\": \"https://www.cimbbank.com.sg/content/dam/cimbsingapore/logo/cimblogo.jpg\",\n        \"url\": \"\",\n        \"telephone\": \"07-418 6258 / 6276\",\n        \"member_of\": [\n            \"BankA\"\n        ],\n        \"address\": {\n            \"street\": \"39A s rahmat\",\n            \"state\": \"changi\",\n            \"city\": \"north east\",\n            \"postal_code\": \"83000\",\n            \"country\": \"sg\",\n            \"building_number\": \"11\"\n        },\n        \"geo\": {\n            \"latitude\": 1.8482097,\n            \"longitude\": 102.93248110000002\n        },\n        \"categories\": [\n            {\n                \"name\": \"delivery\",\n                \"options\": [\n                    {\n                        \"description\": \"Deliver PHP to home address\",\n                        \"terms\": \"Limit of 52,000 PHP\"\n                    },\n                    {\n                        \"description\": \"Deliver USD to home address\",\n                        \"terms\": \"Limit of 1,000 USD\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"agency_pickup\",\n                \"options\": [\n                    {\n                        \"description\": \"Pick-up PHP from kiosk\",\n                        \"terms\": \"Limit of 52,000 PHP per day per identity verified\"\n                    },\n                    {\n                        \"description\": \"Pick-up USD from kiosk\",\n                        \"terms\": \"Limit of 1,000 USD per day per identity verified\"\n                    }\n                ]\n            }\n        ],\n        \"opening_hours\": [\n            {\n                \"day_of_week\": [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:30\"\n            },\n            {\n                \"day_of_week\": [\n                    \"Friday\"\n                ],\n                \"opens\": \"09:15\",\n                \"closes\": \"16:00\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{participant2-url}}/local/listener/v1/client/accounts/issuing/now",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"listener",
												"v1",
												"client",
												"accounts",
												"issuing",
												"now"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- get accounts",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/onboarding/accounts/issuing",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/onboarding/accounts/issuing",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"onboarding",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								},
								{
									"name": "/onboarding/accounts/default",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/onboarding/accounts/default",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"onboarding",
												"accounts",
												"default"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/onboarding/accounts/issuing",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/onboarding/accounts/issuing",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"onboarding",
												"accounts",
												"issuing"
											]
										}
									},
									"response": []
								},
								{
									"name": "/onboarding/accounts/default",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/onboarding/accounts/default",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"onboarding",
												"accounts",
												"default"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MANAGE",
			"item": [
				{
					"name": "- reset cursor location on a specific account",
					"item": [
						{
							"name": "participant1",
							"item": [
								{
									"name": "/client/accounts/{account_name}/{cursor}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p1-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant1-url}}/local/api/v1/client/accounts/default/now",
											"host": [
												"{{participant1-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"accounts",
												"default",
												"now"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "participant2",
							"item": [
								{
									"name": "/client/accounts/{account_name}/{cursor}",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{p2-jwt-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{participant2-url}}/local/api/v1/client/accounts/default/now",
											"host": [
												"{{participant2-url}}"
											],
											"path": [
												"local",
												"api",
												"v1",
												"client",
												"accounts",
												"default",
												"now"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "- cancel a specific quote",
					"item": [
						{
							"name": "/client/quotes/{{quote_id}}",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{p2-jwt-token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\"delete_all_quotes\":false,\n        \"time_expire_rfi\": {\n        \t\"operator\": \"gt\", \n\t\t\t\"threshold\":0\n        },\n\t\t\"status\": {\n\t\t\t\"operator\": \"lt\", \n\t\t\t\"threshold\":99\n\t\t\t},\n\t\t\"exchange_rate\": {\n\t\t\t\"operator\": \"lt\", \n\t\t\t\"threshold\":10\n\t\t\t},\n\t\t\"rfi_id\": \"{{participant2_id}}\",\n        \"source_asset\": {\n            \"asset_code\": \"NZDDO\",\n            \"issuer_id\": \"{{participant1_id}}\",\n            \"asset_type\": \"DO\"\n        },\n        \"target_asset\": {\n            \"asset_code\": \"FJDDO\",\n            \"issuer_id\": \"{{participant2_id}}\",\n            \"asset_type\": \"DO\"\n        }\n\t}"
								},
								"url": {
									"raw": "{{global-url}}/local/send/v1/client/quotes/{{quote_id}}",
									"host": [
										"{{global-url}}"
									],
									"path": [
										"local",
										"send",
										"v1",
										"client",
										"quotes",
										"{{quote_id}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fbd1cfd6-ad06-46e7-b95b-e4e4e5ccbd06",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "82010faf-9dc0-438a-b523-1602466613b5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}