apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-store-generation-2
spec:
  backoffLimit: 1
  template:
    metadata:
      name: kafka-store-generation-2
    spec:
      restartPolicy: "Never"
      volumes:
      # - name: pvc-volume
      #   persistentVolumeClaim:
      #     claimName: participant1-pvc
#      - name: kafka-1-claim0
#        persistentVolumeClaim:
#          claimName: kafka-1-claim0
      - name: kafka-2-claim0
        persistentVolumeClaim:
          claimName: kafka-2-claim0
#      - name: kafka-3-claim0
#        persistentVolumeClaim:
#          claimName: kafka-3-claim0
      imagePullSecrets:
      - name: regcred
      nodeSelector:
        failure-domain.beta.kubernetes.io/zone: {{ AWS_AZ_ZONE }}b
      containers:
      - name: kafka-store-generation-2
        image: docker_registry_url/gftn/aws-cli
        command: ["sh",  "generate_push_sign_store_kafka.sh"]
        imagePullPolicy: Always
        env:
        - name: STORE_PASS
          value: {{ STORE_PASS }}
        - name: STORE_LOCATION
          value: /var/private/ssl
        - name: ENVIRONMENT
          value: {{ ENVIRONMENT }}
        - name: DOMAIN
          value: {{ DOMAIN }}
        - name: LIST
          value: {{ LIST }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: awssecret-global
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: awssecret-global
              key: aws-secret-access-key
        - name:  AWS_REGION
          value: ap-southeast-1
        volumeMounts:
        # - mountPath: /store
        #   name: pvc-volume
#        - mountPath: /var/private/ssl/kafka-1
#          name: kafka-1-claim0
        - mountPath: /var/private/ssl/kafka-2
          name: kafka-2-claim0
#        - mountPath: /var/private/ssl/kafka-3
#          name: kafka-3-claim0
