// Â© Copyright IBM Corporation 2020. All rights reserved.
// SPDX-License-Identifier: Apache2.0
// 
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sendPayload.proto

package sendmodel

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendPayload struct {
	MsgId                 string   `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	MsgType               string   `protobuf:"bytes,2,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	Message               []byte   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	OfiId                 string   `protobuf:"bytes,4,opt,name=ofi_id,json=ofiId,proto3" json:"ofi_id,omitempty"`
	OfiPublicKey          string   `protobuf:"bytes,5,opt,name=ofi_public_key,json=ofiPublicKey,proto3" json:"ofi_public_key,omitempty"`
	RfiId                 string   `protobuf:"bytes,6,opt,name=rfi_id,json=rfiId,proto3" json:"rfi_id,omitempty"`
	InstructionId         string   `protobuf:"bytes,7,opt,name=instruction_id,json=instructionId,proto3" json:"instruction_id,omitempty"`
	OriginalInstructionId string   `protobuf:"bytes,8,opt,name=original_instruction_id,json=originalInstructionId,proto3" json:"original_instruction_id,omitempty"`
	OriginalMsgId         string   `protobuf:"bytes,9,opt,name=original_msg_id,json=originalMsgId,proto3" json:"original_msg_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *SendPayload) Reset()         { *m = SendPayload{} }
func (m *SendPayload) String() string { return proto.CompactTextString(m) }
func (*SendPayload) ProtoMessage()    {}
func (*SendPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_37a6fa723b6d462f, []int{0}
}

func (m *SendPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendPayload.Unmarshal(m, b)
}
func (m *SendPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendPayload.Marshal(b, m, deterministic)
}
func (m *SendPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendPayload.Merge(m, src)
}
func (m *SendPayload) XXX_Size() int {
	return xxx_messageInfo_SendPayload.Size(m)
}
func (m *SendPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_SendPayload.DiscardUnknown(m)
}

var xxx_messageInfo_SendPayload proto.InternalMessageInfo

func (m *SendPayload) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *SendPayload) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *SendPayload) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SendPayload) GetOfiId() string {
	if m != nil {
		return m.OfiId
	}
	return ""
}

func (m *SendPayload) GetOfiPublicKey() string {
	if m != nil {
		return m.OfiPublicKey
	}
	return ""
}

func (m *SendPayload) GetRfiId() string {
	if m != nil {
		return m.RfiId
	}
	return ""
}

func (m *SendPayload) GetInstructionId() string {
	if m != nil {
		return m.InstructionId
	}
	return ""
}

func (m *SendPayload) GetOriginalInstructionId() string {
	if m != nil {
		return m.OriginalInstructionId
	}
	return ""
}

func (m *SendPayload) GetOriginalMsgId() string {
	if m != nil {
		return m.OriginalMsgId
	}
	return ""
}

func init() {
	proto.RegisterType((*SendPayload)(nil), "SendPayload")
}

func init() { proto.RegisterFile("sendPayload.proto", fileDescriptor_37a6fa723b6d462f) }

var fileDescriptor_37a6fa723b6d462f = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x14, 0x85, 0x99, 0x6a, 0x67, 0xda, 0x6b, 0xad, 0x18, 0x28, 0xc6, 0x5d, 0x11, 0x95, 0xae, 0xdc,
	0x08, 0xbe, 0xc3, 0x20, 0x42, 0xa9, 0xee, 0x87, 0x69, 0x93, 0x09, 0x17, 0x67, 0x72, 0x43, 0x92,
	0x2e, 0xf2, 0x5e, 0x3e, 0xa0, 0x24, 0x71, 0xfc, 0x5b, 0xde, 0xef, 0xdc, 0xef, 0x2c, 0x0e, 0x5c,
	0x3a, 0xa9, 0xc5, 0xb6, 0x0d, 0x3d, 0xb5, 0xe2, 0xc1, 0x58, 0xf2, 0x74, 0xf3, 0x31, 0x81, 0xb3,
	0xd7, 0x1f, 0xca, 0x56, 0x50, 0x0e, 0x4e, 0x35, 0x28, 0x78, 0xb1, 0x2e, 0x36, 0xf3, 0xdd, 0x74,
	0x70, 0xaa, 0x16, 0xec, 0x1a, 0x66, 0x11, 0xfb, 0x60, 0x24, 0x9f, 0xa4, 0xa0, 0x1a, 0x9c, 0x7a,
	0x0b, 0x46, 0x32, 0x0e, 0xd5, 0x20, 0x9d, 0x6b, 0x95, 0xe4, 0x27, 0xeb, 0x62, 0xb3, 0xd8, 0x8d,
	0x67, 0xec, 0xa2, 0x0e, 0x63, 0xd7, 0x69, 0xee, 0xa2, 0x0e, 0x6b, 0xc1, 0x6e, 0x61, 0x19, 0xb1,
	0x39, 0xee, 0x7b, 0x3c, 0x34, 0xef, 0x32, 0xf0, 0x69, 0x8a, 0x17, 0xd4, 0xe1, 0x36, 0xc1, 0x67,
	0x19, 0xa2, 0x6c, 0xb3, 0x5c, 0x66, 0xd9, 0x26, 0xf9, 0x0e, 0x96, 0xa8, 0x9d, 0xb7, 0xc7, 0x83,
	0x47, 0xd2, 0x31, 0xae, 0x52, 0x7c, 0xfe, 0x8b, 0xd6, 0x82, 0x3d, 0xc1, 0x15, 0x59, 0x54, 0xa8,
	0xdb, 0xbe, 0xf9, 0xf7, 0x3f, 0x4b, 0xff, 0xab, 0x31, 0xae, 0xff, 0x78, 0xf7, 0x70, 0xf1, 0xed,
	0x7d, 0xed, 0x30, 0xcf, 0xfd, 0x23, 0x7e, 0x89, 0x7b, 0xec, 0xcb, 0xb4, 0xde, 0xe3, 0x67, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x0e, 0x22, 0x4e, 0x6f, 0x52, 0x01, 0x00, 0x00,
}
