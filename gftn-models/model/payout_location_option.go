// Â© Copyright IBM Corporation 2020. All rights reserved.
// SPDX-License-Identifier: Apache2.0
// 
// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PayoutLocationOption payoutLocationOption
//
// Details of each payout location offer. Based on https://schema.org/hasOfferCatalog
// swagger:model PayoutLocationOption
type PayoutLocationOption struct {

	// name of the service
	// Required: true
	Description *string `json:"description"`

	// service detail
	// Required: true
	Terms *string `json:"terms" bson:"terms"`
}

// Validate validates this payout location option
func (m *PayoutLocationOption) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTerms(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PayoutLocationOption) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	return nil
}

func (m *PayoutLocationOption) validateTerms(formats strfmt.Registry) error {

	if err := validate.Required("terms", "body", m.Terms); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PayoutLocationOption) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PayoutLocationOption) UnmarshalBinary(b []byte) error {
	var res PayoutLocationOption
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
