// Â© Copyright IBM Corporation 2020. All rights reserved.
// SPDX-License-Identifier: Apache2.0
// 
// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InternalComplianceCheckRequest internalComplianceCheckRequest
//
// InternalComplianceCheckRequest
// swagger:model InternalComplianceCheckRequest
type InternalComplianceCheckRequest struct {

	// The JSON string of the full ISO-20022 message containing the details of the transaction
	// Required: true
	ClearingMessage *string `json:"clearing_message"`

	// The sending account and participant id (i.e. 101010101*odfi.payments.worldwire.io)
	// Required: true
	// Pattern: ^[a-zA-Z0-9-]{5,32}$
	Sender *string `json:"sender"`

	// The XDR of the transaction (unsigned) which will be initiated as soon as compliance check is complete
	StellarTransaction string `json:"stellar_transaction,omitempty"`
}

// Validate validates this internal compliance check request
func (m *InternalComplianceCheckRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClearingMessage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSender(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InternalComplianceCheckRequest) validateClearingMessage(formats strfmt.Registry) error {

	if err := validate.Required("clearing_message", "body", m.ClearingMessage); err != nil {
		return err
	}

	return nil
}

func (m *InternalComplianceCheckRequest) validateSender(formats strfmt.Registry) error {

	if err := validate.Required("sender", "body", m.Sender); err != nil {
		return err
	}

	if err := validate.Pattern("sender", "body", string(*m.Sender), `^[a-zA-Z0-9-]{5,32}$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InternalComplianceCheckRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InternalComplianceCheckRequest) UnmarshalBinary(b []byte) error {
	var res InternalComplianceCheckRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
