// Â© Copyright IBM Corporation 2020. All rights reserved.
// SPDX-License-Identifier: Apache2.0
// 
// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StrongholdResponseResult strongholdResponseResult
//
// strong hold specification for withdrawal response
// swagger:model StrongholdResponseResult
type StrongholdResponseResult struct {

	// amount
	Amount string `json:"amount,omitempty"`

	// asset ID issued by an anchor
	AssetID string `json:"assetId,omitempty"`

	// customer reference
	CustomerReference string `json:"customerReference,omitempty"`

	// direction
	Direction string `json:"direction,omitempty"`

	// fee
	FeeAmount string `json:"feeAmount,omitempty"`

	// result id
	ID string `json:"id,omitempty"`

	// typically us-ach
	PaymentMethod string `json:"paymentMethod,omitempty"`

	// payment method details
	// Required: true
	PaymentMethodDetails *StrongholdPaymentMethodDetails `json:"paymentMethodDetails"`

	// payment method instructions
	PaymentMethodInstructions *StrongholdPaymentInstructions `json:"paymentMethodInstructions,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this stronghold response result
func (m *StrongholdResponseResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePaymentMethodDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePaymentMethodInstructions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StrongholdResponseResult) validatePaymentMethodDetails(formats strfmt.Registry) error {

	if err := validate.Required("paymentMethodDetails", "body", m.PaymentMethodDetails); err != nil {
		return err
	}

	if m.PaymentMethodDetails != nil {
		if err := m.PaymentMethodDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("paymentMethodDetails")
			}
			return err
		}
	}

	return nil
}

func (m *StrongholdResponseResult) validatePaymentMethodInstructions(formats strfmt.Registry) error {

	if swag.IsZero(m.PaymentMethodInstructions) { // not required
		return nil
	}

	if m.PaymentMethodInstructions != nil {
		if err := m.PaymentMethodInstructions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("paymentMethodInstructions")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *StrongholdResponseResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StrongholdResponseResult) UnmarshalBinary(b []byte) error {
	var res StrongholdResponseResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
