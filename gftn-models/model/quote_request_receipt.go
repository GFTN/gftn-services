// Â© Copyright IBM Corporation 2020. All rights reserved.
// SPDX-License-Identifier: Apache2.0
// 
// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// QuoteRequestReceipt quoteRequestReceipt
//
// Quote Receipt
// swagger:model quoteRequestReceipt
type QuoteRequestReceipt struct {

	// Unique id for the original quote request as set by the quote giver.
	// Required: true
	RequestID *string `json:"request_id"`

	// The timestamp when the quote request happened.
	// Required: true
	TimeRequest *int64 `json:"time_request"`
}

// Validate validates this quote request receipt
func (m *QuoteRequestReceipt) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRequestID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimeRequest(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QuoteRequestReceipt) validateRequestID(formats strfmt.Registry) error {

	if err := validate.Required("request_id", "body", m.RequestID); err != nil {
		return err
	}

	return nil
}

func (m *QuoteRequestReceipt) validateTimeRequest(formats strfmt.Registry) error {

	if err := validate.Required("time_request", "body", m.TimeRequest); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *QuoteRequestReceipt) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QuoteRequestReceipt) UnmarshalBinary(b []byte) error {
	var res QuoteRequestReceipt
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
