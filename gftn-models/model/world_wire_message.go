// Â© Copyright IBM Corporation 2020. All rights reserved.
// SPDX-License-Identifier: Apache2.0
// 
// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// WorldWireMessage wwResponse
//
// wwResponse
// swagger:model WorldWireMessage
type WorldWireMessage struct {

	// build version string of micro service
	BuildVersion string `json:"build_version,omitempty"`

	// Response message in string.
	Msg string `json:"msg,omitempty"`

	// participant id, same as home domain as set by environment variables
	ParticipantID string `json:"participant_id,omitempty"`

	// name of micro service
	Service string `json:"service,omitempty"`

	// The timestamp of the occurance.
	TimeStamp int64 `json:"time_stamp,omitempty"`

	// Url of endpoint that failed.
	URL string `json:"url,omitempty"`
}

// Validate validates this world wire message
func (m *WorldWireMessage) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WorldWireMessage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorldWireMessage) UnmarshalBinary(b []byte) error {
	var res WorldWireMessage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
